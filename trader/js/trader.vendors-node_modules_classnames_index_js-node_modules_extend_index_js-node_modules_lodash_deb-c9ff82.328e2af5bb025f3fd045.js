/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_deriv_trader"] = self["webpackChunk_deriv_trader"] || []).push([["vendors-node_modules_classnames_index_js-node_modules_extend_index_js-node_modules_lodash_deb-c9ff82"],{

/***/ "../../../node_modules/@babel/runtime/helpers/assertThisInitialized/_index.mjs":
/*!*************************************************************************************!*\
  !*** ../../../node_modules/@babel/runtime/helpers/assertThisInitialized/_index.mjs ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _assertThisInitialized)\n/* harmony export */ });\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXNzZXJ0VGhpc0luaXRpYWxpemVkL19pbmRleC5tanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvdHJhZGVyLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2Fzc2VydFRoaXNJbml0aWFsaXplZC9faW5kZXgubWpzP2YxOTMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gIGlmIChzZWxmID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cblxuICByZXR1cm4gc2VsZjtcbn0iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/@babel/runtime/helpers/assertThisInitialized/_index.mjs\n");

/***/ }),

/***/ "../../../node_modules/@babel/runtime/helpers/extends/_index.mjs":
/*!***********************************************************************!*\
  !*** ../../../node_modules/@babel/runtime/helpers/extends/_index.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _extends)\n/* harmony export */ });\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXh0ZW5kcy9faW5kZXgubWpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L3RyYWRlci8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9leHRlbmRzL19pbmRleC5tanM/MzlmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufSJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/@babel/runtime/helpers/extends/_index.mjs\n");

/***/ }),

/***/ "../../../node_modules/@babel/runtime/helpers/inheritsLoose/_index.mjs":
/*!*****************************************************************************!*\
  !*** ../../../node_modules/@babel/runtime/helpers/inheritsLoose/_index.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _inheritsLoose)\n/* harmony export */ });\n/* harmony import */ var _setPrototypeOf_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../setPrototypeOf/_index.mjs */ \"../../../node_modules/@babel/runtime/helpers/setPrototypeOf/_index.mjs\");\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  (0,_setPrototypeOf_index_mjs__WEBPACK_IMPORTED_MODULE_0__.default)(subClass, superClass);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNMb29zZS9faW5kZXgubWpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L3RyYWRlci8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c0xvb3NlL19pbmRleC5tanM/MTI3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc2V0UHJvdG90eXBlT2YgZnJvbSBcIi4uL3NldFByb3RvdHlwZU9mL19pbmRleC5tanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/@babel/runtime/helpers/inheritsLoose/_index.mjs\n");

/***/ }),

/***/ "../../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose/_index.mjs":
/*!********************************************************************************************!*\
  !*** ../../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose/_index.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _objectWithoutPropertiesLoose)\n/* harmony export */ });\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS9faW5kZXgubWpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L3RyYWRlci8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlL19pbmRleC5tanM/YmFkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose/_index.mjs\n");

/***/ }),

/***/ "../../../node_modules/@babel/runtime/helpers/setPrototypeOf/_index.mjs":
/*!******************************************************************************!*\
  !*** ../../../node_modules/@babel/runtime/helpers/setPrototypeOf/_index.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _setPrototypeOf)\n/* harmony export */ });\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2V0UHJvdG90eXBlT2YvX2luZGV4Lm1qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi90cmFkZXIvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2V0UHJvdG90eXBlT2YvX2luZGV4Lm1qcz9mOTAzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIG8uX19wcm90b19fID0gcDtcbiAgICByZXR1cm4gbztcbiAgfTtcblxuICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xufSJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/@babel/runtime/helpers/setPrototypeOf/_index.mjs\n");

/***/ }),

/***/ "../../../node_modules/@popmotion/easing/dist/easing.es.js":
/*!*****************************************************************!*\
  !*** ../../../node_modules/@popmotion/easing/dist/easing.es.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reversed\": () => (/* binding */ reversed),\n/* harmony export */   \"mirrored\": () => (/* binding */ mirrored),\n/* harmony export */   \"createReversedEasing\": () => (/* binding */ createReversedEasing),\n/* harmony export */   \"createMirroredEasing\": () => (/* binding */ createMirroredEasing),\n/* harmony export */   \"createExpoIn\": () => (/* binding */ createExpoIn),\n/* harmony export */   \"createBackIn\": () => (/* binding */ createBackIn),\n/* harmony export */   \"createAnticipateEasing\": () => (/* binding */ createAnticipateEasing),\n/* harmony export */   \"linear\": () => (/* binding */ linear),\n/* harmony export */   \"easeIn\": () => (/* binding */ easeIn),\n/* harmony export */   \"easeOut\": () => (/* binding */ easeOut),\n/* harmony export */   \"easeInOut\": () => (/* binding */ easeInOut),\n/* harmony export */   \"circIn\": () => (/* binding */ circIn),\n/* harmony export */   \"circOut\": () => (/* binding */ circOut),\n/* harmony export */   \"circInOut\": () => (/* binding */ circInOut),\n/* harmony export */   \"backIn\": () => (/* binding */ backIn),\n/* harmony export */   \"backOut\": () => (/* binding */ backOut),\n/* harmony export */   \"backInOut\": () => (/* binding */ backInOut),\n/* harmony export */   \"anticipate\": () => (/* binding */ anticipate),\n/* harmony export */   \"bounceOut\": () => (/* binding */ bounceOut),\n/* harmony export */   \"bounceIn\": () => (/* binding */ bounceIn),\n/* harmony export */   \"bounceInOut\": () => (/* binding */ bounceInOut),\n/* harmony export */   \"cubicBezier\": () => (/* binding */ cubicBezier)\n/* harmony export */ });\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar reversed = function (easing) {\n    return function (p) {\n        return 1 - easing(1 - p);\n    };\n};\nvar mirrored = function (easing) {\n    return function (p) {\n        return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n    };\n};\nvar createReversedEasing = reversed;\nvar createMirroredEasing = mirrored;\nvar createExpoIn = function (power) {\n    return function (p) {\n        return Math.pow(p, power);\n    };\n};\nvar createBackIn = function (power) {\n    return function (p) {\n        return p * p * ((power + 1) * p - power);\n    };\n};\nvar createAnticipateEasing = function (power) {\n    var backEasing = createBackIn(power);\n    return function (p) {\n        return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    };\n};\nvar linear = function (p) {\n    return p;\n};\nvar easeIn = /*#__PURE__*/createExpoIn(2);\nvar easeOut = /*#__PURE__*/reversed(easeIn);\nvar easeInOut = /*#__PURE__*/mirrored(easeIn);\nvar circIn = function (p) {\n    return 1 - Math.sin(Math.acos(p));\n};\nvar circOut = /*#__PURE__*/reversed(circIn);\nvar circInOut = /*#__PURE__*/mirrored(circOut);\nvar backIn = /*#__PURE__*/createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = /*#__PURE__*/reversed(backIn);\nvar backInOut = /*#__PURE__*/mirrored(backIn);\nvar anticipate = /*#__PURE__*/createAnticipateEasing(DEFAULT_OVERSHOOT_STRENGTH);\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\nvar bounceOut = function (p) {\n    var p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = function (p) {\n    return 1.0 - bounceOut(1.0 - p);\n};\nvar bounceInOut = function (p) {\n    return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\nvar NEWTON_ITERATIONS = 8;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\nvar K_SPLINE_TABLE_SIZE = 11;\nvar K_SAMPLE_STEP_SIZE = 1.0 / (K_SPLINE_TABLE_SIZE - 1.0);\nvar FLOAT_32_SUPPORTED = typeof Float32Array !== 'undefined';\nvar a = function (a1, a2) {\n    return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\nvar b = function (a1, a2) {\n    return 3.0 * a2 - 6.0 * a1;\n};\nvar c = function (a1) {\n    return 3.0 * a1;\n};\nvar getSlope = function (t, a1, a2) {\n    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar calcBezier = function (t, a1, a2) {\n    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    var sampleValues = FLOAT_32_SUPPORTED ? new Float32Array(K_SPLINE_TABLE_SIZE) : new Array(K_SPLINE_TABLE_SIZE);\n    var binarySubdivide = function (aX, aA, aB) {\n        var i = 0;\n        var currentX;\n        var currentT;\n        do {\n            currentT = aA + (aB - aA) / 2.0;\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\n            if (currentX > 0.0) {\n                aB = currentT;\n            } else {\n                aA = currentT;\n            }\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n        return currentT;\n    };\n    var newtonRaphsonIterate = function (aX, aGuessT) {\n        var i = 0;\n        var currentSlope = 0;\n        var currentX;\n        for (; i < NEWTON_ITERATIONS; ++i) {\n            currentSlope = getSlope(aGuessT, mX1, mX2);\n            if (currentSlope === 0.0) {\n                return aGuessT;\n            }\n            currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n            aGuessT -= currentX / currentSlope;\n        }\n        return aGuessT;\n    };\n    var calcSampleValues = function () {\n        for (var i = 0; i < K_SPLINE_TABLE_SIZE; ++i) {\n            sampleValues[i] = calcBezier(i * K_SAMPLE_STEP_SIZE, mX1, mX2);\n        }\n    };\n    var getTForX = function (aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = K_SPLINE_TABLE_SIZE - 1;\n        var dist = 0.0;\n        var guessForT = 0.0;\n        var initialSlope = 0.0;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += K_SAMPLE_STEP_SIZE;\n        }\n        --currentSample;\n        dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        guessForT = intervalStart + dist * K_SAMPLE_STEP_SIZE;\n        initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n            return newtonRaphsonIterate(aX, guessForT);\n        } else if (initialSlope === 0.0) {\n            return guessForT;\n        } else {\n            return binarySubdivide(aX, intervalStart, intervalStart + K_SAMPLE_STEP_SIZE);\n        }\n    };\n    calcSampleValues();\n    var resolver = function (aX) {\n        var returnValue;\n        if (mX1 === mY1 && mX2 === mY2) {\n            returnValue = aX;\n        } else if (aX === 0) {\n            returnValue = 0;\n        } else if (aX === 1) {\n            returnValue = 1;\n        } else {\n            returnValue = calcBezier(getTForX(aX), mY1, mY2);\n        }\n        return returnValue;\n    };\n    return resolver;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/@popmotion/easing/dist/easing.es.js\n");

/***/ }),

/***/ "../../../node_modules/@popmotion/popcorn/dist/popcorn.es.js":
/*!*******************************************************************!*\
  !*** ../../../node_modules/@popmotion/popcorn/dist/popcorn.es.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAnticipateEasing\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.createAnticipateEasing),\n/* harmony export */   \"createBackIn\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.createBackIn),\n/* harmony export */   \"createExpoIn\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.createExpoIn),\n/* harmony export */   \"cubicBezier\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.cubicBezier),\n/* harmony export */   \"linear\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.linear),\n/* harmony export */   \"easeIn\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.easeIn),\n/* harmony export */   \"easeOut\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.easeOut),\n/* harmony export */   \"easeInOut\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.easeInOut),\n/* harmony export */   \"circIn\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.circIn),\n/* harmony export */   \"circOut\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.circOut),\n/* harmony export */   \"circInOut\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.circInOut),\n/* harmony export */   \"backIn\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.backIn),\n/* harmony export */   \"backOut\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.backOut),\n/* harmony export */   \"backInOut\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.backInOut),\n/* harmony export */   \"anticipate\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.anticipate),\n/* harmony export */   \"reversed\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.reversed),\n/* harmony export */   \"mirrored\": () => (/* reexport safe */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.mirrored),\n/* harmony export */   \"angle\": () => (/* binding */ angle),\n/* harmony export */   \"applyOffset\": () => (/* binding */ applyOffset),\n/* harmony export */   \"clamp\": () => (/* binding */ clamp$1),\n/* harmony export */   \"conditional\": () => (/* binding */ conditional),\n/* harmony export */   \"degreesToRadians\": () => (/* binding */ degreesToRadians),\n/* harmony export */   \"distance\": () => (/* binding */ distance),\n/* harmony export */   \"interpolate\": () => (/* binding */ interpolate),\n/* harmony export */   \"isPoint\": () => (/* binding */ isPoint),\n/* harmony export */   \"isPoint3D\": () => (/* binding */ isPoint3D),\n/* harmony export */   \"mix\": () => (/* binding */ mix),\n/* harmony export */   \"mixArray\": () => (/* binding */ mixArray),\n/* harmony export */   \"mixColor\": () => (/* binding */ mixColor),\n/* harmony export */   \"mixComplex\": () => (/* binding */ mixComplex),\n/* harmony export */   \"mixObject\": () => (/* binding */ mixObject),\n/* harmony export */   \"pipe\": () => (/* binding */ pipe),\n/* harmony export */   \"pointFromVector\": () => (/* binding */ pointFromVector),\n/* harmony export */   \"progress\": () => (/* binding */ progress),\n/* harmony export */   \"radiansToDegrees\": () => (/* binding */ radiansToDegrees),\n/* harmony export */   \"smooth\": () => (/* binding */ smooth),\n/* harmony export */   \"smoothFrame\": () => (/* binding */ smoothFrame),\n/* harmony export */   \"snap\": () => (/* binding */ snap),\n/* harmony export */   \"springForce\": () => (/* binding */ springForce),\n/* harmony export */   \"springForceExpo\": () => (/* binding */ springForceExpo),\n/* harmony export */   \"springForceLinear\": () => (/* binding */ springForceLinear),\n/* harmony export */   \"steps\": () => (/* binding */ steps),\n/* harmony export */   \"toDecimal\": () => (/* binding */ toDecimal),\n/* harmony export */   \"velocityPerFrame\": () => (/* binding */ velocityPerFrame),\n/* harmony export */   \"velocityPerSecond\": () => (/* binding */ velocityPerSecond),\n/* harmony export */   \"wrap\": () => (/* binding */ wrap$1)\n/* harmony export */ });\n/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! style-value-types */ \"../../../node_modules/style-value-types/dist/style-value-types.es.js\");\n/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hey-listen */ \"../../../node_modules/hey-listen/dist/hey-listen.es.js\");\n/* harmony import */ var framesync__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! framesync */ \"../../../node_modules/framesync/dist/framesync.es.js\");\n/* harmony import */ var _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @popmotion/easing */ \"../../../node_modules/@popmotion/easing/dist/easing.es.js\");\n\n\n\n\n\n\nvar zeroPoint = {\r\n    x: 0,\r\n    y: 0,\r\n    z: 0\r\n};\r\nvar isNum = function (v) { return typeof v === 'number'; };\n\nvar radiansToDegrees = (function (radians) { return (radians * 180) / Math.PI; });\n\nvar angle = (function (a, b) {\r\n    if (b === void 0) { b = zeroPoint; }\r\n    return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\r\n});\n\nvar applyOffset = (function (from, to) {\r\n    var hasReceivedFrom = true;\r\n    if (to === undefined) {\r\n        to = from;\r\n        hasReceivedFrom = false;\r\n    }\r\n    return function (v) {\r\n        if (hasReceivedFrom) {\r\n            return v - from + to;\r\n        }\r\n        else {\r\n            from = v;\r\n            hasReceivedFrom = true;\r\n            return to;\r\n        }\r\n    };\r\n});\n\nvar curryRange = (function (func) { return function (min, max, v) { return (v !== undefined ? func(min, max, v) : function (cv) { return func(min, max, cv); }); }; });\n\nvar clamp = function (min, max, v) {\r\n    return Math.min(Math.max(v, min), max);\r\n};\r\nvar clamp$1 = curryRange(clamp);\n\nvar conditional = (function (check, apply) { return function (v) {\r\n    return check(v) ? apply(v) : v;\r\n}; });\n\nvar degreesToRadians = (function (degrees) { return (degrees * Math.PI) / 180; });\n\nvar isPoint = (function (point) {\r\n    return point.hasOwnProperty('x') && point.hasOwnProperty('y');\r\n});\n\nvar isPoint3D = (function (point) {\r\n    return isPoint(point) && point.hasOwnProperty('z');\r\n});\n\nvar distance1D = function (a, b) { return Math.abs(a - b); };\r\nvar distance = (function (a, b) {\r\n    if (b === void 0) { b = zeroPoint; }\r\n    if (isNum(a) && isNum(b)) {\r\n        return distance1D(a, b);\r\n    }\r\n    else if (isPoint(a) && isPoint(b)) {\r\n        var xDelta = distance1D(a.x, b.x);\r\n        var yDelta = distance1D(a.y, b.y);\r\n        var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\r\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\r\n    }\r\n    return 0;\r\n});\n\nvar progress = (function (from, to, value) {\r\n    var toFromDifference = to - from;\r\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\r\n});\n\nvar mix = (function (from, to, progress) {\r\n    return -progress * from + progress * to + from;\r\n});\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar mixLinearColor = function (from, to, v) {\r\n    var fromExpo = from * from;\r\n    var toExpo = to * to;\r\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\r\n};\r\nvar colorTypes = [style_value_types__WEBPACK_IMPORTED_MODULE_0__.hex, style_value_types__WEBPACK_IMPORTED_MODULE_0__.rgba, style_value_types__WEBPACK_IMPORTED_MODULE_0__.hsla];\r\nvar getColorType = function (v) {\r\n    return colorTypes.find(function (type) { return type.test(v); });\r\n};\r\nvar notAnimatable = function (color$$1) {\r\n    return \"'\" + color$$1 + \"' is not an animatable color. Use the equivalent color code instead.\";\r\n};\r\nvar mixColor = (function (from, to) {\r\n    var fromColorType = getColorType(from);\r\n    var toColorType = getColorType(to);\r\n    (0,hey_listen__WEBPACK_IMPORTED_MODULE_1__.invariant)(!!fromColorType, notAnimatable(from));\r\n    (0,hey_listen__WEBPACK_IMPORTED_MODULE_1__.invariant)(!!toColorType, notAnimatable(to));\r\n    (0,hey_listen__WEBPACK_IMPORTED_MODULE_1__.invariant)(fromColorType.transform === toColorType.transform, 'Both colors must be hex/RGBA, OR both must be HSLA.');\r\n    var fromColor = fromColorType.parse(from);\r\n    var toColor = toColorType.parse(to);\r\n    var blended = __assign({}, fromColor);\r\n    var mixFunc = fromColorType === style_value_types__WEBPACK_IMPORTED_MODULE_0__.hsla ? mix : mixLinearColor;\r\n    return function (v) {\r\n        for (var key in blended) {\r\n            if (key !== 'alpha') {\r\n                blended[key] = mixFunc(fromColor[key], toColor[key], v);\r\n            }\r\n        }\r\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\r\n        return fromColorType.transform(blended);\r\n    };\r\n});\n\nvar combineFunctions = function (a, b) { return function (v) { return b(a(v)); }; };\r\nvar pipe = (function () {\r\n    var transformers = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        transformers[_i] = arguments[_i];\r\n    }\r\n    return transformers.reduce(combineFunctions);\r\n});\n\nfunction getMixer(origin, target) {\r\n    if (isNum(origin)) {\r\n        return function (v) { return mix(origin, target, v); };\r\n    }\r\n    else if (style_value_types__WEBPACK_IMPORTED_MODULE_0__.color.test(origin)) {\r\n        return mixColor(origin, target);\r\n    }\r\n    else {\r\n        return mixComplex(origin, target);\r\n    }\r\n}\r\nvar mixArray = function (from, to) {\r\n    var output = from.slice();\r\n    var numValues = output.length;\r\n    var blendValue = from.map(function (fromThis, i) { return getMixer(fromThis, to[i]); });\r\n    return function (v) {\r\n        for (var i = 0; i < numValues; i++) {\r\n            output[i] = blendValue[i](v);\r\n        }\r\n        return output;\r\n    };\r\n};\r\nvar mixObject = function (origin, target) {\r\n    var output = __assign({}, origin, target);\r\n    var blendValue = {};\r\n    for (var key in output) {\r\n        if (origin[key] !== undefined && target[key] !== undefined) {\r\n            blendValue[key] = getMixer(origin[key], target[key]);\r\n        }\r\n    }\r\n    return function (v) {\r\n        for (var key in blendValue) {\r\n            output[key] = blendValue[key](v);\r\n        }\r\n        return output;\r\n    };\r\n};\r\nfunction analyse(value) {\r\n    var parsed = style_value_types__WEBPACK_IMPORTED_MODULE_0__.complex.parse(value);\r\n    var numValues = parsed.length;\r\n    var numNumbers = 0;\r\n    var numRGB = 0;\r\n    var numHSL = 0;\r\n    for (var i = 0; i < numValues; i++) {\r\n        if (numNumbers || typeof parsed[i] === 'number') {\r\n            numNumbers++;\r\n        }\r\n        else {\r\n            if (parsed[i].hue !== undefined) {\r\n                numHSL++;\r\n            }\r\n            else {\r\n                numRGB++;\r\n            }\r\n        }\r\n    }\r\n    return { parsed: parsed, numNumbers: numNumbers, numRGB: numRGB, numHSL: numHSL };\r\n}\r\nvar mixComplex = function (origin, target) {\r\n    var template = style_value_types__WEBPACK_IMPORTED_MODULE_0__.complex.createTransformer(target);\r\n    var originStats = analyse(origin);\r\n    var targetStats = analyse(target);\r\n    (0,hey_listen__WEBPACK_IMPORTED_MODULE_1__.invariant)(originStats.numHSL === targetStats.numHSL &&\r\n        originStats.numRGB === targetStats.numRGB &&\r\n        originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\r\n    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\r\n};\n\nvar mixNumber = function (from, to) { return function (p) { return mix(from, to, p); }; };\r\nfunction detectMixerFactory(v) {\r\n    if (typeof v === 'number') {\r\n        return mixNumber;\r\n    }\r\n    else if (typeof v === 'string') {\r\n        if (style_value_types__WEBPACK_IMPORTED_MODULE_0__.color.test(v)) {\r\n            return mixColor;\r\n        }\r\n        else {\r\n            return mixComplex;\r\n        }\r\n    }\r\n    else if (Array.isArray(v)) {\r\n        return mixArray;\r\n    }\r\n    else if (typeof v === 'object') {\r\n        return mixObject;\r\n    }\r\n}\r\nfunction createMixers(output, ease, customMixer) {\r\n    var mixers = [];\r\n    var mixerFactory = customMixer || detectMixerFactory(output[0]);\r\n    var numMixers = output.length - 1;\r\n    for (var i = 0; i < numMixers; i++) {\r\n        var mixer = mixerFactory(output[i], output[i + 1]);\r\n        if (ease) {\r\n            var easingFunction = Array.isArray(ease) ? ease[i] : ease;\r\n            mixer = pipe(easingFunction, mixer);\r\n        }\r\n        mixers.push(mixer);\r\n    }\r\n    return mixers;\r\n}\r\nfunction fastInterpolate(_a, _b) {\r\n    var from = _a[0], to = _a[1];\r\n    var mixer = _b[0];\r\n    return function (v) { return mixer(progress(from, to, v)); };\r\n}\r\nfunction slowInterpolate(input, mixers) {\r\n    var inputLength = input.length;\r\n    var lastInputIndex = inputLength - 1;\r\n    return function (v) {\r\n        var mixerIndex = 0;\r\n        var foundMixerIndex = false;\r\n        if (v <= input[0]) {\r\n            foundMixerIndex = true;\r\n        }\r\n        else if (v >= input[lastInputIndex]) {\r\n            mixerIndex = lastInputIndex - 1;\r\n            foundMixerIndex = true;\r\n        }\r\n        if (!foundMixerIndex) {\r\n            var i = 1;\r\n            for (; i < inputLength; i++) {\r\n                if (input[i] > v || i === lastInputIndex) {\r\n                    break;\r\n                }\r\n            }\r\n            mixerIndex = i - 1;\r\n        }\r\n        var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\r\n        return mixers[mixerIndex](progressInRange);\r\n    };\r\n}\r\nfunction interpolate(input, output, _a) {\r\n    var _b = _a === void 0 ? {} : _a, _c = _b.clamp, clamp = _c === void 0 ? true : _c, ease = _b.ease, mixer = _b.mixer;\r\n    var inputLength = input.length;\r\n    (0,hey_listen__WEBPACK_IMPORTED_MODULE_1__.invariant)(inputLength === output.length, 'Both input and output ranges must be the same length');\r\n    (0,hey_listen__WEBPACK_IMPORTED_MODULE_1__.invariant)(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\r\n    if (input[0] > input[inputLength - 1]) {\r\n        input = [].concat(input);\r\n        output = [].concat(output);\r\n        input.reverse();\r\n        output.reverse();\r\n    }\r\n    var mixers = createMixers(output, ease, mixer);\r\n    var interpolator = inputLength === 2\r\n        ? fastInterpolate(input, mixers)\r\n        : slowInterpolate(input, mixers);\r\n    return clamp\r\n        ? pipe(clamp$1(input[0], input[inputLength - 1]), interpolator)\r\n        : interpolator;\r\n}\n\nvar pointFromVector = (function (origin, angle, distance) {\r\n    angle = degreesToRadians(angle);\r\n    return {\r\n        x: distance * Math.cos(angle) + origin.x,\r\n        y: distance * Math.sin(angle) + origin.y\r\n    };\r\n});\n\nvar toDecimal = (function (num, precision) {\r\n    if (precision === void 0) { precision = 2; }\r\n    precision = Math.pow(10, precision);\r\n    return Math.round(num * precision) / precision;\r\n});\n\nvar smoothFrame = (function (prevValue, nextValue, duration, smoothing) {\r\n    if (smoothing === void 0) { smoothing = 0; }\r\n    return toDecimal(prevValue +\r\n        (duration * (nextValue - prevValue)) / Math.max(smoothing, duration));\r\n});\n\nvar smooth = (function (strength) {\r\n    if (strength === void 0) { strength = 50; }\r\n    var previousValue = 0;\r\n    var lastUpdated = 0;\r\n    return function (v) {\r\n        var currentFramestamp = (0,framesync__WEBPACK_IMPORTED_MODULE_2__.getFrameData)().timestamp;\r\n        var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\r\n        var newValue = timeDelta\r\n            ? smoothFrame(previousValue, v, timeDelta, strength)\r\n            : previousValue;\r\n        lastUpdated = currentFramestamp;\r\n        previousValue = newValue;\r\n        return newValue;\r\n    };\r\n});\n\nvar snap = (function (points) {\r\n    if (typeof points === 'number') {\r\n        return function (v) { return Math.round(v / points) * points; };\r\n    }\r\n    else {\r\n        var i_1 = 0;\r\n        var numPoints_1 = points.length;\r\n        return function (v) {\r\n            var lastDistance = Math.abs(points[0] - v);\r\n            for (i_1 = 1; i_1 < numPoints_1; i_1++) {\r\n                var point = points[i_1];\r\n                var distance = Math.abs(point - v);\r\n                if (distance === 0)\r\n                    return point;\r\n                if (distance > lastDistance)\r\n                    return points[i_1 - 1];\r\n                if (i_1 === numPoints_1 - 1)\r\n                    return point;\r\n                lastDistance = distance;\r\n            }\r\n        };\r\n    }\r\n});\n\nvar identity = function (v) { return v; };\r\nvar springForce = function (alterDisplacement) {\r\n    if (alterDisplacement === void 0) { alterDisplacement = identity; }\r\n    return curryRange(function (constant, origin, v) {\r\n        var displacement = origin - v;\r\n        var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\r\n        return displacement <= 0\r\n            ? origin + springModifiedDisplacement\r\n            : origin - springModifiedDisplacement;\r\n    });\r\n};\r\nvar springForceLinear = springForce();\r\nvar springForceExpo = springForce(Math.sqrt);\n\nvar velocityPerFrame = (function (xps, frameDuration) {\r\n    return isNum(xps) ? xps / (1000 / frameDuration) : 0;\r\n});\n\nvar velocityPerSecond = (function (velocity, frameDuration) {\r\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\r\n});\n\nvar wrap = function (min, max, v) {\r\n    var rangeSize = max - min;\r\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\r\n};\r\nvar wrap$1 = curryRange(wrap);\n\nvar clampProgress = clamp$1(0, 1);\r\nvar steps = (function (steps, direction) {\r\n    if (direction === void 0) { direction = 'end'; }\r\n    return function (progress) {\r\n        progress =\r\n            direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\r\n        var expanded = progress * steps;\r\n        var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\r\n        return clampProgress(rounded / steps);\r\n    };\r\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/@popmotion/popcorn/dist/popcorn.es.js\n");

/***/ }),

/***/ "../../../node_modules/classnames/index.js":
/*!*************************************************!*\
  !*** ../../../node_modules/classnames/index.js ***!
  \*************************************************/
/***/ ((module, exports) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif ( true && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvdHJhZGVyLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzPzNkY2QiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gIENvcHlyaWdodCAoYykgMjAxNyBKZWQgV2F0c29uLlxuICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuICBodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXG5cdGZ1bmN0aW9uIGNsYXNzTmFtZXMgKCkge1xuXHRcdHZhciBjbGFzc2VzID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmICghYXJnKSBjb250aW51ZTtcblxuXHRcdFx0dmFyIGFyZ1R5cGUgPSB0eXBlb2YgYXJnO1xuXG5cdFx0XHRpZiAoYXJnVHlwZSA9PT0gJ3N0cmluZycgfHwgYXJnVHlwZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZyk7XG5cdFx0XHR9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSAmJiBhcmcubGVuZ3RoKSB7XG5cdFx0XHRcdHZhciBpbm5lciA9IGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHRcdFx0aWYgKGlubmVyKSB7XG5cdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGlubmVyKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIGlmIChhcmdUeXBlID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRmb3IgKHZhciBrZXkgaW4gYXJnKSB7XG5cdFx0XHRcdFx0aWYgKGhhc093bi5jYWxsKGFyZywga2V5KSAmJiBhcmdba2V5XSkge1xuXHRcdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGtleSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXMuam9pbignICcpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0Y2xhc3NOYW1lcy5kZWZhdWx0ID0gY2xhc3NOYW1lcztcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBLFVBRUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/classnames/index.js\n");

/***/ }),

/***/ "../../../node_modules/dom-helpers/esm/addClass.js":
/*!*********************************************************!*\
  !*** ../../../node_modules/dom-helpers/esm/addClass.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ addClass)\n/* harmony export */ });\n/* harmony import */ var _hasClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hasClass */ \"../../../node_modules/dom-helpers/esm/hasClass.js\");\n\nfunction addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!(0,_hasClass__WEBPACK_IMPORTED_MODULE_0__.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9hZGRDbGFzcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi90cmFkZXIvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9hZGRDbGFzcy5qcz9lYWZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBoYXNDbGFzcyBmcm9tICcuL2hhc0NsYXNzJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFkZENsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSkge1xuICBpZiAoZWxlbWVudC5jbGFzc0xpc3QpIGVsZW1lbnQuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO2Vsc2UgaWYgKCFoYXNDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpKSBpZiAodHlwZW9mIGVsZW1lbnQuY2xhc3NOYW1lID09PSAnc3RyaW5nJykgZWxlbWVudC5jbGFzc05hbWUgPSBlbGVtZW50LmNsYXNzTmFtZSArIFwiIFwiICsgY2xhc3NOYW1lO2Vsc2UgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgKGVsZW1lbnQuY2xhc3NOYW1lICYmIGVsZW1lbnQuY2xhc3NOYW1lLmJhc2VWYWwgfHwgJycpICsgXCIgXCIgKyBjbGFzc05hbWUpO1xufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/dom-helpers/esm/addClass.js\n");

/***/ }),

/***/ "../../../node_modules/dom-helpers/esm/hasClass.js":
/*!*********************************************************!*\
  !*** ../../../node_modules/dom-helpers/esm/hasClass.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ hasClass)\n/* harmony export */ });\nfunction hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9oYXNDbGFzcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi90cmFkZXIvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9oYXNDbGFzcy5qcz9mMDBiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGhhc0NsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSkge1xuICBpZiAoZWxlbWVudC5jbGFzc0xpc3QpIHJldHVybiAhIWNsYXNzTmFtZSAmJiBlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpO1xuICByZXR1cm4gKFwiIFwiICsgKGVsZW1lbnQuY2xhc3NOYW1lLmJhc2VWYWwgfHwgZWxlbWVudC5jbGFzc05hbWUpICsgXCIgXCIpLmluZGV4T2YoXCIgXCIgKyBjbGFzc05hbWUgKyBcIiBcIikgIT09IC0xO1xufSJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../node_modules/dom-helpers/esm/hasClass.js\n");

/***/ }),

/***/ "../../../node_modules/dom-helpers/esm/removeClass.js":
/*!************************************************************!*\
  !*** ../../../node_modules/dom-helpers/esm/removeClass.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ removeClass)\n/* harmony export */ });\nfunction replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nfunction removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    ;\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9yZW1vdmVDbGFzcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi90cmFkZXIvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9yZW1vdmVDbGFzcy5qcz81ZTQxIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHJlcGxhY2VDbGFzc05hbWUob3JpZ0NsYXNzLCBjbGFzc1RvUmVtb3ZlKSB7XG4gIHJldHVybiBvcmlnQ2xhc3MucmVwbGFjZShuZXcgUmVnRXhwKFwiKF58XFxcXHMpXCIgKyBjbGFzc1RvUmVtb3ZlICsgXCIoPzpcXFxcc3wkKVwiLCAnZycpLCAnJDEnKS5yZXBsYWNlKC9cXHMrL2csICcgJykucmVwbGFjZSgvXlxccyp8XFxzKiQvZywgJycpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZW1vdmVDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0KSB7XG4gICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGVsZW1lbnQuY2xhc3NOYW1lID09PSAnc3RyaW5nJykge1xuICAgIDtcbiAgICBlbGVtZW50LmNsYXNzTmFtZSA9IHJlcGxhY2VDbGFzc05hbWUoZWxlbWVudC5jbGFzc05hbWUsIGNsYXNzTmFtZSk7XG4gIH0gZWxzZSB7XG4gICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgcmVwbGFjZUNsYXNzTmFtZShlbGVtZW50LmNsYXNzTmFtZSAmJiBlbGVtZW50LmNsYXNzTmFtZS5iYXNlVmFsIHx8ICcnLCBjbGFzc05hbWUpKTtcbiAgfVxufSJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/dom-helpers/esm/removeClass.js\n");

/***/ }),

/***/ "../../../node_modules/extend/index.js":
/*!*********************************************!*\
  !*** ../../../node_modules/extend/index.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2V4dGVuZC9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi90cmFkZXIvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2V4dGVuZC9pbmRleC5qcz9kNWYwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGhhc093biA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgdG9TdHIgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdPUEQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG52YXIgaXNBcnJheSA9IGZ1bmN0aW9uIGlzQXJyYXkoYXJyKSB7XG5cdGlmICh0eXBlb2YgQXJyYXkuaXNBcnJheSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHJldHVybiBBcnJheS5pc0FycmF5KGFycik7XG5cdH1cblxuXHRyZXR1cm4gdG9TdHIuY2FsbChhcnIpID09PSAnW29iamVjdCBBcnJheV0nO1xufTtcblxudmFyIGlzUGxhaW5PYmplY3QgPSBmdW5jdGlvbiBpc1BsYWluT2JqZWN0KG9iaikge1xuXHRpZiAoIW9iaiB8fCB0b1N0ci5jYWxsKG9iaikgIT09ICdbb2JqZWN0IE9iamVjdF0nKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0dmFyIGhhc093bkNvbnN0cnVjdG9yID0gaGFzT3duLmNhbGwob2JqLCAnY29uc3RydWN0b3InKTtcblx0dmFyIGhhc0lzUHJvdG90eXBlT2YgPSBvYmouY29uc3RydWN0b3IgJiYgb2JqLmNvbnN0cnVjdG9yLnByb3RvdHlwZSAmJiBoYXNPd24uY2FsbChvYmouY29uc3RydWN0b3IucHJvdG90eXBlLCAnaXNQcm90b3R5cGVPZicpO1xuXHQvLyBOb3Qgb3duIGNvbnN0cnVjdG9yIHByb3BlcnR5IG11c3QgYmUgT2JqZWN0XG5cdGlmIChvYmouY29uc3RydWN0b3IgJiYgIWhhc093bkNvbnN0cnVjdG9yICYmICFoYXNJc1Byb3RvdHlwZU9mKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0Ly8gT3duIHByb3BlcnRpZXMgYXJlIGVudW1lcmF0ZWQgZmlyc3RseSwgc28gdG8gc3BlZWQgdXAsXG5cdC8vIGlmIGxhc3Qgb25lIGlzIG93biwgdGhlbiBhbGwgcHJvcGVydGllcyBhcmUgb3duLlxuXHR2YXIga2V5O1xuXHRmb3IgKGtleSBpbiBvYmopIHsgLyoqLyB9XG5cblx0cmV0dXJuIHR5cGVvZiBrZXkgPT09ICd1bmRlZmluZWQnIHx8IGhhc093bi5jYWxsKG9iaiwga2V5KTtcbn07XG5cbi8vIElmIG5hbWUgaXMgJ19fcHJvdG9fXycsIGFuZCBPYmplY3QuZGVmaW5lUHJvcGVydHkgaXMgYXZhaWxhYmxlLCBkZWZpbmUgX19wcm90b19fIGFzIGFuIG93biBwcm9wZXJ0eSBvbiB0YXJnZXRcbnZhciBzZXRQcm9wZXJ0eSA9IGZ1bmN0aW9uIHNldFByb3BlcnR5KHRhcmdldCwgb3B0aW9ucykge1xuXHRpZiAoZGVmaW5lUHJvcGVydHkgJiYgb3B0aW9ucy5uYW1lID09PSAnX19wcm90b19fJykge1xuXHRcdGRlZmluZVByb3BlcnR5KHRhcmdldCwgb3B0aW9ucy5uYW1lLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXHRcdFx0dmFsdWU6IG9wdGlvbnMubmV3VmFsdWUsXG5cdFx0XHR3cml0YWJsZTogdHJ1ZVxuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdHRhcmdldFtvcHRpb25zLm5hbWVdID0gb3B0aW9ucy5uZXdWYWx1ZTtcblx0fVxufTtcblxuLy8gUmV0dXJuIHVuZGVmaW5lZCBpbnN0ZWFkIG9mIF9fcHJvdG9fXyBpZiAnX19wcm90b19fJyBpcyBub3QgYW4gb3duIHByb3BlcnR5XG52YXIgZ2V0UHJvcGVydHkgPSBmdW5jdGlvbiBnZXRQcm9wZXJ0eShvYmosIG5hbWUpIHtcblx0aWYgKG5hbWUgPT09ICdfX3Byb3RvX18nKSB7XG5cdFx0aWYgKCFoYXNPd24uY2FsbChvYmosIG5hbWUpKSB7XG5cdFx0XHRyZXR1cm4gdm9pZCAwO1xuXHRcdH0gZWxzZSBpZiAoZ09QRCkge1xuXHRcdFx0Ly8gSW4gZWFybHkgdmVyc2lvbnMgb2Ygbm9kZSwgb2JqWydfX3Byb3RvX18nXSBpcyBidWdneSB3aGVuIG9iaiBoYXNcblx0XHRcdC8vIF9fcHJvdG9fXyBhcyBhbiBvd24gcHJvcGVydHkuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoKSB3b3Jrcy5cblx0XHRcdHJldHVybiBnT1BEKG9iaiwgbmFtZSkudmFsdWU7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIG9ialtuYW1lXTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZXh0ZW5kKCkge1xuXHR2YXIgb3B0aW9ucywgbmFtZSwgc3JjLCBjb3B5LCBjb3B5SXNBcnJheSwgY2xvbmU7XG5cdHZhciB0YXJnZXQgPSBhcmd1bWVudHNbMF07XG5cdHZhciBpID0gMTtcblx0dmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7XG5cdHZhciBkZWVwID0gZmFsc2U7XG5cblx0Ly8gSGFuZGxlIGEgZGVlcCBjb3B5IHNpdHVhdGlvblxuXHRpZiAodHlwZW9mIHRhcmdldCA9PT0gJ2Jvb2xlYW4nKSB7XG5cdFx0ZGVlcCA9IHRhcmdldDtcblx0XHR0YXJnZXQgPSBhcmd1bWVudHNbMV0gfHwge307XG5cdFx0Ly8gc2tpcCB0aGUgYm9vbGVhbiBhbmQgdGhlIHRhcmdldFxuXHRcdGkgPSAyO1xuXHR9XG5cdGlmICh0YXJnZXQgPT0gbnVsbCB8fCAodHlwZW9mIHRhcmdldCAhPT0gJ29iamVjdCcgJiYgdHlwZW9mIHRhcmdldCAhPT0gJ2Z1bmN0aW9uJykpIHtcblx0XHR0YXJnZXQgPSB7fTtcblx0fVxuXG5cdGZvciAoOyBpIDwgbGVuZ3RoOyArK2kpIHtcblx0XHRvcHRpb25zID0gYXJndW1lbnRzW2ldO1xuXHRcdC8vIE9ubHkgZGVhbCB3aXRoIG5vbi1udWxsL3VuZGVmaW5lZCB2YWx1ZXNcblx0XHRpZiAob3B0aW9ucyAhPSBudWxsKSB7XG5cdFx0XHQvLyBFeHRlbmQgdGhlIGJhc2Ugb2JqZWN0XG5cdFx0XHRmb3IgKG5hbWUgaW4gb3B0aW9ucykge1xuXHRcdFx0XHRzcmMgPSBnZXRQcm9wZXJ0eSh0YXJnZXQsIG5hbWUpO1xuXHRcdFx0XHRjb3B5ID0gZ2V0UHJvcGVydHkob3B0aW9ucywgbmFtZSk7XG5cblx0XHRcdFx0Ly8gUHJldmVudCBuZXZlci1lbmRpbmcgbG9vcFxuXHRcdFx0XHRpZiAodGFyZ2V0ICE9PSBjb3B5KSB7XG5cdFx0XHRcdFx0Ly8gUmVjdXJzZSBpZiB3ZSdyZSBtZXJnaW5nIHBsYWluIG9iamVjdHMgb3IgYXJyYXlzXG5cdFx0XHRcdFx0aWYgKGRlZXAgJiYgY29weSAmJiAoaXNQbGFpbk9iamVjdChjb3B5KSB8fCAoY29weUlzQXJyYXkgPSBpc0FycmF5KGNvcHkpKSkpIHtcblx0XHRcdFx0XHRcdGlmIChjb3B5SXNBcnJheSkge1xuXHRcdFx0XHRcdFx0XHRjb3B5SXNBcnJheSA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0XHRjbG9uZSA9IHNyYyAmJiBpc0FycmF5KHNyYykgPyBzcmMgOiBbXTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdGNsb25lID0gc3JjICYmIGlzUGxhaW5PYmplY3Qoc3JjKSA/IHNyYyA6IHt9O1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBOZXZlciBtb3ZlIG9yaWdpbmFsIG9iamVjdHMsIGNsb25lIHRoZW1cblx0XHRcdFx0XHRcdHNldFByb3BlcnR5KHRhcmdldCwgeyBuYW1lOiBuYW1lLCBuZXdWYWx1ZTogZXh0ZW5kKGRlZXAsIGNsb25lLCBjb3B5KSB9KTtcblxuXHRcdFx0XHRcdC8vIERvbid0IGJyaW5nIGluIHVuZGVmaW5lZCB2YWx1ZXNcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHR5cGVvZiBjb3B5ICE9PSAndW5kZWZpbmVkJykge1xuXHRcdFx0XHRcdFx0c2V0UHJvcGVydHkodGFyZ2V0LCB7IG5hbWU6IG5hbWUsIG5ld1ZhbHVlOiBjb3B5IH0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgbW9kaWZpZWQgb2JqZWN0XG5cdHJldHVybiB0YXJnZXQ7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../node_modules/extend/index.js\n");

/***/ }),

/***/ "../../../node_modules/framesync/dist/framesync.es.js":
/*!************************************************************!*\
  !*** ../../../node_modules/framesync/dist/framesync.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"cancelSync\": () => (/* binding */ cancelSync),\n/* harmony export */   \"getFrameData\": () => (/* binding */ getFrameData)\n/* harmony export */ });\n/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hey-listen */ \"../../../node_modules/hey-listen/dist/hey-listen.es.js\");\n\n\nvar prevTime = 0;\nvar onNextFrame = typeof window !== 'undefined' && window.requestAnimationFrame !== undefined ? function (callback) {\n    return window.requestAnimationFrame(callback);\n} : function (callback) {\n    var timestamp = Date.now();\n    var timeToCall = Math.max(0, 16.7 - (timestamp - prevTime));\n    prevTime = timestamp + timeToCall;\n    setTimeout(function () {\n        return callback(prevTime);\n    }, timeToCall);\n};\n\nvar createStep = function (setRunNextFrame) {\n    var processToRun = [];\n    var processToRunNextFrame = [];\n    var numThisFrame = 0;\n    var isProcessing = false;\n    var i = 0;\n    var cancelled = new WeakSet();\n    var toKeepAlive = new WeakSet();\n    var renderStep = {\n        cancel: function (process) {\n            var indexOfCallback = processToRunNextFrame.indexOf(process);\n            cancelled.add(process);\n            if (indexOfCallback !== -1) {\n                processToRunNextFrame.splice(indexOfCallback, 1);\n            }\n        },\n        process: function (frame) {\n            var _a;\n            isProcessing = true;\n            _a = [processToRunNextFrame, processToRun], processToRun = _a[0], processToRunNextFrame = _a[1];\n            processToRunNextFrame.length = 0;\n            numThisFrame = processToRun.length;\n            if (numThisFrame) {\n                var process_1;\n                for (i = 0; i < numThisFrame; i++) {\n                    process_1 = processToRun[i];\n                    process_1(frame);\n                    if (toKeepAlive.has(process_1) === true && !cancelled.has(process_1)) {\n                        renderStep.schedule(process_1);\n                        setRunNextFrame(true);\n                    }\n                }\n            }\n            isProcessing = false;\n        },\n        schedule: function (process, keepAlive, immediate) {\n            if (keepAlive === void 0) {\n                keepAlive = false;\n            }\n            if (immediate === void 0) {\n                immediate = false;\n            }\n            (0,hey_listen__WEBPACK_IMPORTED_MODULE_0__.invariant)(typeof process === \"function\", \"Argument must be a function\");\n            var addToCurrentBuffer = immediate && isProcessing;\n            var buffer = addToCurrentBuffer ? processToRun : processToRunNextFrame;\n            cancelled.delete(process);\n            if (keepAlive) toKeepAlive.add(process);\n            if (buffer.indexOf(process) === -1) {\n                buffer.push(process);\n                if (addToCurrentBuffer) numThisFrame = processToRun.length;\n            }\n        }\n    };\n    return renderStep;\n};\n\nvar maxElapsed = 40;\nvar defaultElapsed = 1 / 60 * 1000;\nvar useDefaultElapsed = true;\nvar willRunNextFrame = false;\nvar isProcessing = false;\nvar frame = {\n    delta: 0,\n    timestamp: 0\n};\nvar stepsOrder = [\"read\", \"update\", \"preRender\", \"render\", \"postRender\"];\nvar setWillRunNextFrame = function (willRun) {\n    return willRunNextFrame = willRun;\n};\nvar steps = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {\n    acc[key] = createStep(setWillRunNextFrame);\n    return acc;\n}, {});\nvar sync = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {\n    var step = steps[key];\n    acc[key] = function (process, keepAlive, immediate) {\n        if (keepAlive === void 0) {\n            keepAlive = false;\n        }\n        if (immediate === void 0) {\n            immediate = false;\n        }\n        if (!willRunNextFrame) startLoop();\n        step.schedule(process, keepAlive, immediate);\n        return process;\n    };\n    return acc;\n}, {});\nvar cancelSync = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nvar processStep = function (stepId) {\n    return steps[stepId].process(frame);\n};\nvar processFrame = function (timestamp) {\n    willRunNextFrame = false;\n    frame.delta = useDefaultElapsed ? defaultElapsed : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    if (!useDefaultElapsed) defaultElapsed = frame.delta;\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (willRunNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nvar startLoop = function () {\n    willRunNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing) onNextFrame(processFrame);\n};\nvar getFrameData = function () {\n    return frame;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sync);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZyYW1lc3luYy9kaXN0L2ZyYW1lc3luYy5lcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi90cmFkZXIvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZyYW1lc3luYy9kaXN0L2ZyYW1lc3luYy5lcy5qcz9iOThmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGludmFyaWFudCB9IGZyb20gJ2hleS1saXN0ZW4nO1xuXG52YXIgcHJldlRpbWUgPSAwO1xudmFyIG9uTmV4dEZyYW1lID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSAhPT0gdW5kZWZpbmVkID8gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoY2FsbGJhY2spO1xufSA6IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgIHZhciB0aW1lc3RhbXAgPSBEYXRlLm5vdygpO1xuICAgIHZhciB0aW1lVG9DYWxsID0gTWF0aC5tYXgoMCwgMTYuNyAtICh0aW1lc3RhbXAgLSBwcmV2VGltZSkpO1xuICAgIHByZXZUaW1lID0gdGltZXN0YW1wICsgdGltZVRvQ2FsbDtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKHByZXZUaW1lKTtcbiAgICB9LCB0aW1lVG9DYWxsKTtcbn07XG5cbnZhciBjcmVhdGVTdGVwID0gZnVuY3Rpb24gKHNldFJ1bk5leHRGcmFtZSkge1xuICAgIHZhciBwcm9jZXNzVG9SdW4gPSBbXTtcbiAgICB2YXIgcHJvY2Vzc1RvUnVuTmV4dEZyYW1lID0gW107XG4gICAgdmFyIG51bVRoaXNGcmFtZSA9IDA7XG4gICAgdmFyIGlzUHJvY2Vzc2luZyA9IGZhbHNlO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgY2FuY2VsbGVkID0gbmV3IFdlYWtTZXQoKTtcbiAgICB2YXIgdG9LZWVwQWxpdmUgPSBuZXcgV2Vha1NldCgpO1xuICAgIHZhciByZW5kZXJTdGVwID0ge1xuICAgICAgICBjYW5jZWw6IGZ1bmN0aW9uIChwcm9jZXNzKSB7XG4gICAgICAgICAgICB2YXIgaW5kZXhPZkNhbGxiYWNrID0gcHJvY2Vzc1RvUnVuTmV4dEZyYW1lLmluZGV4T2YocHJvY2Vzcyk7XG4gICAgICAgICAgICBjYW5jZWxsZWQuYWRkKHByb2Nlc3MpO1xuICAgICAgICAgICAgaWYgKGluZGV4T2ZDYWxsYmFjayAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICBwcm9jZXNzVG9SdW5OZXh0RnJhbWUuc3BsaWNlKGluZGV4T2ZDYWxsYmFjaywgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHByb2Nlc3M6IGZ1bmN0aW9uIChmcmFtZSkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgaXNQcm9jZXNzaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgIF9hID0gW3Byb2Nlc3NUb1J1bk5leHRGcmFtZSwgcHJvY2Vzc1RvUnVuXSwgcHJvY2Vzc1RvUnVuID0gX2FbMF0sIHByb2Nlc3NUb1J1bk5leHRGcmFtZSA9IF9hWzFdO1xuICAgICAgICAgICAgcHJvY2Vzc1RvUnVuTmV4dEZyYW1lLmxlbmd0aCA9IDA7XG4gICAgICAgICAgICBudW1UaGlzRnJhbWUgPSBwcm9jZXNzVG9SdW4ubGVuZ3RoO1xuICAgICAgICAgICAgaWYgKG51bVRoaXNGcmFtZSkge1xuICAgICAgICAgICAgICAgIHZhciBwcm9jZXNzXzE7XG4gICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IG51bVRoaXNGcmFtZTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHByb2Nlc3NfMSA9IHByb2Nlc3NUb1J1bltpXTtcbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc18xKGZyYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRvS2VlcEFsaXZlLmhhcyhwcm9jZXNzXzEpID09PSB0cnVlICYmICFjYW5jZWxsZWQuaGFzKHByb2Nlc3NfMSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlbmRlclN0ZXAuc2NoZWR1bGUocHJvY2Vzc18xKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFJ1bk5leHRGcmFtZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlzUHJvY2Vzc2luZyA9IGZhbHNlO1xuICAgICAgICB9LFxuICAgICAgICBzY2hlZHVsZTogZnVuY3Rpb24gKHByb2Nlc3MsIGtlZXBBbGl2ZSwgaW1tZWRpYXRlKSB7XG4gICAgICAgICAgICBpZiAoa2VlcEFsaXZlID09PSB2b2lkIDApIHtcbiAgICAgICAgICAgICAgICBrZWVwQWxpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbW1lZGlhdGUgPT09IHZvaWQgMCkge1xuICAgICAgICAgICAgICAgIGltbWVkaWF0ZSA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaW52YXJpYW50KHR5cGVvZiBwcm9jZXNzID09PSBcImZ1bmN0aW9uXCIsIFwiQXJndW1lbnQgbXVzdCBiZSBhIGZ1bmN0aW9uXCIpO1xuICAgICAgICAgICAgdmFyIGFkZFRvQ3VycmVudEJ1ZmZlciA9IGltbWVkaWF0ZSAmJiBpc1Byb2Nlc3Npbmc7XG4gICAgICAgICAgICB2YXIgYnVmZmVyID0gYWRkVG9DdXJyZW50QnVmZmVyID8gcHJvY2Vzc1RvUnVuIDogcHJvY2Vzc1RvUnVuTmV4dEZyYW1lO1xuICAgICAgICAgICAgY2FuY2VsbGVkLmRlbGV0ZShwcm9jZXNzKTtcbiAgICAgICAgICAgIGlmIChrZWVwQWxpdmUpIHRvS2VlcEFsaXZlLmFkZChwcm9jZXNzKTtcbiAgICAgICAgICAgIGlmIChidWZmZXIuaW5kZXhPZihwcm9jZXNzKSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICBidWZmZXIucHVzaChwcm9jZXNzKTtcbiAgICAgICAgICAgICAgICBpZiAoYWRkVG9DdXJyZW50QnVmZmVyKSBudW1UaGlzRnJhbWUgPSBwcm9jZXNzVG9SdW4ubGVuZ3RoO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gcmVuZGVyU3RlcDtcbn07XG5cbnZhciBtYXhFbGFwc2VkID0gNDA7XG52YXIgZGVmYXVsdEVsYXBzZWQgPSAxIC8gNjAgKiAxMDAwO1xudmFyIHVzZURlZmF1bHRFbGFwc2VkID0gdHJ1ZTtcbnZhciB3aWxsUnVuTmV4dEZyYW1lID0gZmFsc2U7XG52YXIgaXNQcm9jZXNzaW5nID0gZmFsc2U7XG52YXIgZnJhbWUgPSB7XG4gICAgZGVsdGE6IDAsXG4gICAgdGltZXN0YW1wOiAwXG59O1xudmFyIHN0ZXBzT3JkZXIgPSBbXCJyZWFkXCIsIFwidXBkYXRlXCIsIFwicHJlUmVuZGVyXCIsIFwicmVuZGVyXCIsIFwicG9zdFJlbmRlclwiXTtcbnZhciBzZXRXaWxsUnVuTmV4dEZyYW1lID0gZnVuY3Rpb24gKHdpbGxSdW4pIHtcbiAgICByZXR1cm4gd2lsbFJ1bk5leHRGcmFtZSA9IHdpbGxSdW47XG59O1xudmFyIHN0ZXBzID0gLyojX19QVVJFX18qL3N0ZXBzT3JkZXIucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGtleSkge1xuICAgIGFjY1trZXldID0gY3JlYXRlU3RlcChzZXRXaWxsUnVuTmV4dEZyYW1lKTtcbiAgICByZXR1cm4gYWNjO1xufSwge30pO1xudmFyIHN5bmMgPSAvKiNfX1BVUkVfXyovc3RlcHNPcmRlci5yZWR1Y2UoZnVuY3Rpb24gKGFjYywga2V5KSB7XG4gICAgdmFyIHN0ZXAgPSBzdGVwc1trZXldO1xuICAgIGFjY1trZXldID0gZnVuY3Rpb24gKHByb2Nlc3MsIGtlZXBBbGl2ZSwgaW1tZWRpYXRlKSB7XG4gICAgICAgIGlmIChrZWVwQWxpdmUgPT09IHZvaWQgMCkge1xuICAgICAgICAgICAga2VlcEFsaXZlID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGltbWVkaWF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICAgICAgICBpbW1lZGlhdGUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXdpbGxSdW5OZXh0RnJhbWUpIHN0YXJ0TG9vcCgpO1xuICAgICAgICBzdGVwLnNjaGVkdWxlKHByb2Nlc3MsIGtlZXBBbGl2ZSwgaW1tZWRpYXRlKTtcbiAgICAgICAgcmV0dXJuIHByb2Nlc3M7XG4gICAgfTtcbiAgICByZXR1cm4gYWNjO1xufSwge30pO1xudmFyIGNhbmNlbFN5bmMgPSAvKiNfX1BVUkVfXyovc3RlcHNPcmRlci5yZWR1Y2UoZnVuY3Rpb24gKGFjYywga2V5KSB7XG4gICAgYWNjW2tleV0gPSBzdGVwc1trZXldLmNhbmNlbDtcbiAgICByZXR1cm4gYWNjO1xufSwge30pO1xudmFyIHByb2Nlc3NTdGVwID0gZnVuY3Rpb24gKHN0ZXBJZCkge1xuICAgIHJldHVybiBzdGVwc1tzdGVwSWRdLnByb2Nlc3MoZnJhbWUpO1xufTtcbnZhciBwcm9jZXNzRnJhbWUgPSBmdW5jdGlvbiAodGltZXN0YW1wKSB7XG4gICAgd2lsbFJ1bk5leHRGcmFtZSA9IGZhbHNlO1xuICAgIGZyYW1lLmRlbHRhID0gdXNlRGVmYXVsdEVsYXBzZWQgPyBkZWZhdWx0RWxhcHNlZCA6IE1hdGgubWF4KE1hdGgubWluKHRpbWVzdGFtcCAtIGZyYW1lLnRpbWVzdGFtcCwgbWF4RWxhcHNlZCksIDEpO1xuICAgIGlmICghdXNlRGVmYXVsdEVsYXBzZWQpIGRlZmF1bHRFbGFwc2VkID0gZnJhbWUuZGVsdGE7XG4gICAgZnJhbWUudGltZXN0YW1wID0gdGltZXN0YW1wO1xuICAgIGlzUHJvY2Vzc2luZyA9IHRydWU7XG4gICAgc3RlcHNPcmRlci5mb3JFYWNoKHByb2Nlc3NTdGVwKTtcbiAgICBpc1Byb2Nlc3NpbmcgPSBmYWxzZTtcbiAgICBpZiAod2lsbFJ1bk5leHRGcmFtZSkge1xuICAgICAgICB1c2VEZWZhdWx0RWxhcHNlZCA9IGZhbHNlO1xuICAgICAgICBvbk5leHRGcmFtZShwcm9jZXNzRnJhbWUpO1xuICAgIH1cbn07XG52YXIgc3RhcnRMb29wID0gZnVuY3Rpb24gKCkge1xuICAgIHdpbGxSdW5OZXh0RnJhbWUgPSB0cnVlO1xuICAgIHVzZURlZmF1bHRFbGFwc2VkID0gdHJ1ZTtcbiAgICBpZiAoIWlzUHJvY2Vzc2luZykgb25OZXh0RnJhbWUocHJvY2Vzc0ZyYW1lKTtcbn07XG52YXIgZ2V0RnJhbWVEYXRhID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBmcmFtZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHN5bmM7XG5leHBvcnQgeyBjYW5jZWxTeW5jLCBnZXRGcmFtZURhdGEgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/framesync/dist/framesync.es.js\n");

/***/ }),

/***/ "../../../node_modules/hey-listen/dist/hey-listen.es.js":
/*!**************************************************************!*\
  !*** ../../../node_modules/hey-listen/dist/hey-listen.es.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"invariant\": () => (/* binding */ invariant),\n/* harmony export */   \"warning\": () => (/* binding */ warning)\n/* harmony export */ });\nvar warning = function () { };\r\nvar invariant = function () { };\r\nif (true) {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2hleS1saXN0ZW4vZGlzdC9oZXktbGlzdGVuLmVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L3RyYWRlci8uLi8uLi8uLi9ub2RlX21vZHVsZXMvaGV5LWxpc3Rlbi9kaXN0L2hleS1saXN0ZW4uZXMuanM/MmRhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgd2FybmluZyA9IGZ1bmN0aW9uICgpIHsgfTtcclxudmFyIGludmFyaWFudCA9IGZ1bmN0aW9uICgpIHsgfTtcclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcclxuICAgIHdhcm5pbmcgPSBmdW5jdGlvbiAoY2hlY2ssIG1lc3NhZ2UpIHtcclxuICAgICAgICBpZiAoIWNoZWNrICYmIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICBjb25zb2xlLndhcm4obWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGludmFyaWFudCA9IGZ1bmN0aW9uIChjaGVjaywgbWVzc2FnZSkge1xyXG4gICAgICAgIGlmICghY2hlY2spIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cblxuZXhwb3J0IHsgaW52YXJpYW50LCB3YXJuaW5nIH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../node_modules/hey-listen/dist/hey-listen.es.js\n");

/***/ }),

/***/ "../../../node_modules/lodash.debounce/index.js":
/*!******************************************************!*\
  !*** ../../../node_modules/lodash.debounce/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/lodash.debounce/index.js\n");

/***/ }),

/***/ "../../../node_modules/lodash.throttle/index.js":
/*!******************************************************!*\
  !*** ../../../node_modules/lodash.throttle/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/lodash.throttle/index.js\n");

/***/ }),

/***/ "../../../node_modules/mobx-utils/mobx-utils.module.js":
/*!*************************************************************!*\
  !*** ../../../node_modules/mobx-utils/mobx-utils.module.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FULFILLED\": () => (/* binding */ FULFILLED),\n/* harmony export */   \"IDENTITY\": () => (/* binding */ IDENTITY),\n/* harmony export */   \"NOOP\": () => (/* binding */ NOOP),\n/* harmony export */   \"ObservableGroupMap\": () => (/* binding */ ObservableGroupMap),\n/* harmony export */   \"PENDING\": () => (/* binding */ PENDING),\n/* harmony export */   \"REJECTED\": () => (/* binding */ REJECTED),\n/* harmony export */   \"ViewModel\": () => (/* binding */ ViewModel),\n/* harmony export */   \"actionAsync\": () => (/* binding */ actionAsync),\n/* harmony export */   \"addHiddenProp\": () => (/* binding */ addHiddenProp),\n/* harmony export */   \"asyncAction\": () => (/* binding */ asyncAction),\n/* harmony export */   \"chunkProcessor\": () => (/* binding */ chunkProcessor),\n/* harmony export */   \"computedFn\": () => (/* binding */ computedFn),\n/* harmony export */   \"createTransformer\": () => (/* binding */ createTransformer),\n/* harmony export */   \"createViewModel\": () => (/* binding */ createViewModel),\n/* harmony export */   \"deepObserve\": () => (/* binding */ deepObserve),\n/* harmony export */   \"deprecated\": () => (/* binding */ deprecated),\n/* harmony export */   \"expr\": () => (/* binding */ expr),\n/* harmony export */   \"fail\": () => (/* binding */ fail$1),\n/* harmony export */   \"fromPromise\": () => (/* binding */ fromPromise),\n/* harmony export */   \"fromResource\": () => (/* binding */ fromResource),\n/* harmony export */   \"fromStream\": () => (/* binding */ fromStream),\n/* harmony export */   \"getAllMethodsAndProperties\": () => (/* binding */ getAllMethodsAndProperties),\n/* harmony export */   \"invariant\": () => (/* binding */ invariant),\n/* harmony export */   \"isPromiseBasedObservable\": () => (/* binding */ isPromiseBasedObservable),\n/* harmony export */   \"keepAlive\": () => (/* binding */ keepAlive),\n/* harmony export */   \"lazyObservable\": () => (/* binding */ lazyObservable),\n/* harmony export */   \"moveItem\": () => (/* binding */ moveItem),\n/* harmony export */   \"now\": () => (/* binding */ now),\n/* harmony export */   \"queueProcessor\": () => (/* binding */ queueProcessor),\n/* harmony export */   \"task\": () => (/* binding */ task),\n/* harmony export */   \"toStream\": () => (/* binding */ toStream),\n/* harmony export */   \"whenAsync\": () => (/* binding */ whenAsync),\n/* harmony export */   \"whenWithTimeout\": () => (/* binding */ whenWithTimeout)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar NOOP = function () { };\r\nvar IDENTITY = function (_) { return _; };\r\nfunction fail$1(message) {\r\n    throw new Error(\"[mobx-utils] \" + message);\r\n}\r\nfunction invariant(cond, message) {\r\n    if (message === void 0) { message = \"Illegal state\"; }\r\n    if (!cond)\r\n        fail$1(message);\r\n}\r\nvar deprecatedMessages = [];\r\nfunction deprecated(msg) {\r\n    if (deprecatedMessages.indexOf(msg) !== -1)\r\n        return;\r\n    deprecatedMessages.push(msg);\r\n    console.error(\"[mobx-utils] Deprecated: \" + msg);\r\n}\r\nfunction addHiddenProp(object, propName, value) {\r\n    Object.defineProperty(object, propName, {\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true,\r\n        value: value,\r\n    });\r\n}\r\nvar deepFields = function (x) {\r\n    return (x &&\r\n        x !== Object.prototype &&\r\n        Object.getOwnPropertyNames(x).concat(deepFields(Object.getPrototypeOf(x)) || []));\r\n};\r\nvar distinctDeepFields = function (x) {\r\n    var deepFieldsIndistinct = deepFields(x);\r\n    var deepFieldsDistinct = deepFieldsIndistinct.filter(function (item, index) { return deepFieldsIndistinct.indexOf(item) === index; });\r\n    return deepFieldsDistinct;\r\n};\r\nvar getAllMethodsAndProperties = function (x) {\r\n    return distinctDeepFields(x).filter(function (name) { return name !== \"constructor\" && !~name.indexOf(\"__\"); });\r\n};\n\nvar PENDING = \"pending\";\r\nvar FULFILLED = \"fulfilled\";\r\nvar REJECTED = \"rejected\";\r\nfunction caseImpl(handlers) {\r\n    switch (this.state) {\r\n        case PENDING:\r\n            return handlers.pending && handlers.pending(this.value);\r\n        case REJECTED:\r\n            return handlers.rejected && handlers.rejected(this.value);\r\n        case FULFILLED:\r\n            return handlers.fulfilled ? handlers.fulfilled(this.value) : this.value;\r\n    }\r\n}\r\n/**\r\n * `fromPromise` takes a Promise, extends it with 2 observable properties that track\r\n * the status of the promise and returns it. The returned object has the following observable properties:\r\n *  - `value`: either the initial value, the value the Promise resolved to, or the value the Promise was rejected with. use `.state` if you need to be able to tell the difference.\r\n *  - `state`: one of `\"pending\"`, `\"fulfilled\"` or `\"rejected\"`\r\n *\r\n * And the following methods:\r\n * - `case({fulfilled, rejected, pending})`: maps over the result using the provided handlers, or returns `undefined` if a handler isn't available for the current promise state.\r\n * - `then((value: TValue) => TResult1 | PromiseLike<TResult1>, [(rejectReason: any) => any])`: chains additional handlers to the provided promise.\r\n *\r\n * The returned object implements `PromiseLike<TValue>`, so you can chain additional `Promise` handlers using `then`. You may also use it with `await` in `async` functions.\r\n *\r\n * Note that the status strings are available as constants:\r\n * `mobxUtils.PENDING`, `mobxUtils.REJECTED`, `mobxUtil.FULFILLED`\r\n *\r\n * fromPromise takes an optional second argument, a previously created `fromPromise` based observable.\r\n * This is useful to replace one promise based observable with another, without going back to an intermediate\r\n * \"pending\" promise state while fetching data. For example:\r\n *\r\n * @example\r\n * \\@observer\r\n * class SearchResults extends React.Component {\r\n *   \\@observable.ref searchResults\r\n *\r\n *   componentDidUpdate(nextProps) {\r\n *     if (nextProps.query !== this.props.query)\r\n *       this.searchResults = fromPromise(\r\n *         window.fetch(\"/search?q=\" + nextProps.query),\r\n *         // by passing, we won't render a pending state if we had a successful search query before\r\n *         // rather, we will keep showing the previous search results, until the new promise resolves (or rejects)\r\n *         this.searchResults\r\n *       )\r\n *   }\r\n *\r\n *   render() {\r\n *     return this.searchResults.case({\r\n *        pending: (staleValue) => {\r\n *          return staleValue || \"searching\" // <- value might set to previous results while the promise is still pending\r\n *        },\r\n *        fulfilled: (value) => {\r\n *          return value // the fresh results\r\n *        },\r\n *        rejected: (error) => {\r\n *          return \"Oops: \" + error\r\n *        }\r\n *     })\r\n *   }\r\n * }\r\n *\r\n * Observable promises can be created immediately in a certain state using\r\n * `fromPromise.reject(reason)` or `fromPromise.resolve(value?)`.\r\n * The main advantage of `fromPromise.resolve(value)` over `fromPromise(Promise.resolve(value))` is that the first _synchronously_ starts in the desired state.\r\n *\r\n * It is possible to directly create a promise using a resolve, reject function:\r\n * `fromPromise((resolve, reject) => setTimeout(() => resolve(true), 1000))`\r\n *\r\n * @example\r\n * const fetchResult = fromPromise(fetch(\"http://someurl\"))\r\n *\r\n * // combine with when..\r\n * when(\r\n *   () => fetchResult.state !== \"pending\",\r\n *   () => {\r\n *     console.log(\"Got \", fetchResult.value)\r\n *   }\r\n * )\r\n *\r\n * // or a mobx-react component..\r\n * const myComponent = observer(({ fetchResult }) => {\r\n *   switch(fetchResult.state) {\r\n *      case \"pending\": return <div>Loading...</div>\r\n *      case \"rejected\": return <div>Ooops... {fetchResult.value}</div>\r\n *      case \"fulfilled\": return <div>Gotcha: {fetchResult.value}</div>\r\n *   }\r\n * })\r\n *\r\n * // or using the case method instead of switch:\r\n *\r\n * const myComponent = observer(({ fetchResult }) =>\r\n *   fetchResult.case({\r\n *     pending:   () => <div>Loading...</div>,\r\n *     rejected:  error => <div>Ooops.. {error}</div>,\r\n *     fulfilled: value => <div>Gotcha: {value}</div>,\r\n *   }))\r\n *\r\n * // chain additional handler(s) to the resolve/reject:\r\n *\r\n * fetchResult.then(\r\n *   (result) =>  doSomeTransformation(result),\r\n *   (rejectReason) => console.error('fetchResult was rejected, reason: ' + rejectReason)\r\n * ).then(\r\n *   (transformedResult) => console.log('transformed fetchResult: ' + transformedResult)\r\n * )\r\n *\r\n * @param {IThenable<T>} promise The promise which will be observed\r\n * @param {IThenable<T>} oldPromise? The previously observed promise\r\n * @returns {IPromiseBasedObservable<T>}\r\n */\r\nfunction fromPromise(origPromise, oldPromise) {\r\n    invariant(arguments.length <= 2, \"fromPromise expects up to two arguments\");\r\n    invariant(typeof origPromise === \"function\" ||\r\n        (typeof origPromise === \"object\" &&\r\n            origPromise &&\r\n            typeof origPromise.then === \"function\"), \"Please pass a promise or function to fromPromise\");\r\n    if (origPromise.isPromiseBasedObservable === true)\r\n        return origPromise;\r\n    if (typeof origPromise === \"function\") {\r\n        // If it is a (reject, resolve function, wrap it)\r\n        origPromise = new Promise(origPromise);\r\n    }\r\n    var promise = origPromise;\r\n    origPromise.then((0,mobx__WEBPACK_IMPORTED_MODULE_0__.action)(\"observableFromPromise-resolve\", function (value) {\r\n        promise.value = value;\r\n        promise.state = FULFILLED;\r\n    }), (0,mobx__WEBPACK_IMPORTED_MODULE_0__.action)(\"observableFromPromise-reject\", function (reason) {\r\n        promise.value = reason;\r\n        promise.state = REJECTED;\r\n    }));\r\n    promise.isPromiseBasedObservable = true;\r\n    promise.case = caseImpl;\r\n    var oldData = oldPromise && oldPromise.state === FULFILLED\r\n        ? oldPromise.value\r\n        : undefined;\r\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.extendObservable)(promise, {\r\n        value: oldData,\r\n        state: PENDING,\r\n    }, {}, { deep: false });\r\n    return promise;\r\n}\r\n(function (fromPromise) {\r\n    fromPromise.reject = (0,mobx__WEBPACK_IMPORTED_MODULE_0__.action)(\"fromPromise.reject\", function (reason) {\r\n        var p = fromPromise(Promise.reject(reason));\r\n        p.state = REJECTED;\r\n        p.value = reason;\r\n        return p;\r\n    });\r\n    function resolveBase(value) {\r\n        if (value === void 0) { value = undefined; }\r\n        var p = fromPromise(Promise.resolve(value));\r\n        p.state = FULFILLED;\r\n        p.value = value;\r\n        return p;\r\n    }\r\n    fromPromise.resolve = (0,mobx__WEBPACK_IMPORTED_MODULE_0__.action)(\"fromPromise.resolve\", resolveBase);\r\n})(fromPromise || (fromPromise = {}));\r\n/**\r\n * Returns true if the provided value is a promise-based observable.\r\n * @param value any\r\n * @returns {boolean}\r\n */\r\nfunction isPromiseBasedObservable(value) {\r\n    return value && value.isPromiseBasedObservable === true;\r\n}\n\nvar __spreadArrays = (undefined && undefined.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n/**\r\n * Moves an item from one position to another, checking that the indexes given are within bounds.\r\n *\r\n * @example\r\n * const source = observable([1, 2, 3])\r\n * moveItem(source, 0, 1)\r\n * console.log(source.map(x => x)) // [2, 1, 3]\r\n *\r\n * @export\r\n * @param {ObservableArray<T>} target\r\n * @param {number} fromIndex\r\n * @param {number} toIndex\r\n * @returns {ObservableArray<T>}\r\n */\r\nfunction moveItem(target, fromIndex, toIndex) {\r\n    checkIndex(target, fromIndex);\r\n    checkIndex(target, toIndex);\r\n    if (fromIndex === toIndex) {\r\n        return;\r\n    }\r\n    var oldItems = target[mobx__WEBPACK_IMPORTED_MODULE_0__.$mobx].values;\r\n    var newItems;\r\n    if (fromIndex < toIndex) {\r\n        newItems = __spreadArrays(oldItems.slice(0, fromIndex), oldItems.slice(fromIndex + 1, toIndex + 1), [\r\n            oldItems[fromIndex]\r\n        ], oldItems.slice(toIndex + 1));\r\n    }\r\n    else {\r\n        // toIndex < fromIndex\r\n        newItems = __spreadArrays(oldItems.slice(0, toIndex), [\r\n            oldItems[fromIndex]\r\n        ], oldItems.slice(toIndex, fromIndex), oldItems.slice(fromIndex + 1));\r\n    }\r\n    target.replace(newItems);\r\n    return target;\r\n}\r\n/**\r\n * Checks whether the specified index is within bounds. Throws if not.\r\n *\r\n * @private\r\n * @param {ObservableArray<any>} target\r\n * @param {number }index\r\n */\r\nfunction checkIndex(target, index) {\r\n    if (index < 0) {\r\n        throw new Error(\"[mobx.array] Index out of bounds: \" + index + \" is negative\");\r\n    }\r\n    var length = target[mobx__WEBPACK_IMPORTED_MODULE_0__.$mobx].values.length;\r\n    if (index >= length) {\r\n        throw new Error(\"[mobx.array] Index out of bounds: \" + index + \" is not smaller than \" + length);\r\n    }\r\n}\n\n/**\r\n * `lazyObservable` creates an observable around a `fetch` method that will not be invoked\r\n * until the observable is needed the first time.\r\n * The fetch method receives a `sink` callback which can be used to replace the\r\n * current value of the lazyObservable. It is allowed to call `sink` multiple times\r\n * to keep the lazyObservable up to date with some external resource.\r\n *\r\n * Note that it is the `current()` call itself which is being tracked by MobX,\r\n * so make sure that you don't dereference to early.\r\n *\r\n * @example\r\n * const userProfile = lazyObservable(\r\n *   sink => fetch(\"/myprofile\").then(profile => sink(profile))\r\n * )\r\n *\r\n * // use the userProfile in a React component:\r\n * const Profile = observer(({ userProfile }) =>\r\n *   userProfile.current() === undefined\r\n *   ? <div>Loading user profile...</div>\r\n *   : <div>{userProfile.current().displayName}</div>\r\n * )\r\n *\r\n * // triggers refresh the userProfile\r\n * userProfile.refresh()\r\n *\r\n * @param {(sink: (newValue: T) => void) => void} fetch method that will be called the first time the value of this observable is accessed. The provided sink can be used to produce a new value, synchronously or asynchronously\r\n * @param {T} [initialValue=undefined] optional initialValue that will be returned from `current` as long as the `sink` has not been called at least once\r\n * @returns {{\r\n *     current(): T,\r\n *     refresh(): T,\r\n *     reset(): T\r\n *     pending: boolean\r\n * }}\r\n */\r\nfunction lazyObservable(fetch, initialValue) {\r\n    if (initialValue === void 0) { initialValue = undefined; }\r\n    var started = false;\r\n    var value = mobx__WEBPACK_IMPORTED_MODULE_0__.observable.box(initialValue, { deep: false });\r\n    var pending = mobx__WEBPACK_IMPORTED_MODULE_0__.observable.box(false);\r\n    var currentFnc = function () {\r\n        if (!started) {\r\n            started = true;\r\n            (0,mobx__WEBPACK_IMPORTED_MODULE_0__._allowStateChanges)(true, function () {\r\n                pending.set(true);\r\n            });\r\n            fetch(function (newValue) {\r\n                (0,mobx__WEBPACK_IMPORTED_MODULE_0__._allowStateChanges)(true, function () {\r\n                    value.set(newValue);\r\n                    pending.set(false);\r\n                });\r\n            });\r\n        }\r\n        return value.get();\r\n    };\r\n    var resetFnc = (0,mobx__WEBPACK_IMPORTED_MODULE_0__.action)(\"lazyObservable-reset\", function () {\r\n        started = false;\r\n        value.set(initialValue);\r\n        return value.get();\r\n    });\r\n    return {\r\n        current: currentFnc,\r\n        refresh: function () {\r\n            if (started) {\r\n                started = false;\r\n                return currentFnc();\r\n            }\r\n            else {\r\n                return value.get();\r\n            }\r\n        },\r\n        reset: function () {\r\n            return resetFnc();\r\n        },\r\n        get pending() {\r\n            return pending.get();\r\n        },\r\n    };\r\n}\n\n/**\r\n * `fromResource` creates an observable whose current state can be inspected using `.current()`,\r\n * and which can be kept in sync with some external datasource that can be subscribed to.\r\n *\r\n * The created observable will only subscribe to the datasource if it is in use somewhere,\r\n * (un)subscribing when needed. To enable `fromResource` to do that two callbacks need to be provided,\r\n * one to subscribe, and one to unsubscribe. The subscribe callback itself will receive a `sink` callback, which can be used\r\n * to update the current state of the observable, allowing observes to react.\r\n *\r\n * Whatever is passed to `sink` will be returned by `current()`. The values passed to the sink will not be converted to\r\n * observables automatically, but feel free to do so.\r\n * It is the `current()` call itself which is being tracked,\r\n * so make sure that you don't dereference to early.\r\n *\r\n * For inspiration, an example integration with the apollo-client on [github](https://github.com/apollostack/apollo-client/issues/503#issuecomment-241101379),\r\n * or the [implementation](https://github.com/mobxjs/mobx-utils/blob/1d17cf7f7f5200937f68cc0b5e7ec7f3f71dccba/src/now.ts#L43-L57) of `mobxUtils.now`\r\n *\r\n * The following example code creates an observable that connects to a `dbUserRecord`,\r\n * which comes from an imaginary database and notifies when it has changed.\r\n *\r\n * @example\r\n * function createObservableUser(dbUserRecord) {\r\n *   let currentSubscription;\r\n *   return fromResource(\r\n *     (sink) => {\r\n *       // sink the current state\r\n *       sink(dbUserRecord.fields)\r\n *       // subscribe to the record, invoke the sink callback whenever new data arrives\r\n *       currentSubscription = dbUserRecord.onUpdated(() => {\r\n *         sink(dbUserRecord.fields)\r\n *       })\r\n *     },\r\n *     () => {\r\n *       // the user observable is not in use at the moment, unsubscribe (for now)\r\n *       dbUserRecord.unsubscribe(currentSubscription)\r\n *     }\r\n *   )\r\n * }\r\n *\r\n * // usage:\r\n * const myUserObservable = createObservableUser(myDatabaseConnector.query(\"name = 'Michel'\"))\r\n *\r\n * // use the observable in autorun\r\n * autorun(() => {\r\n *   // printed everytime the database updates its records\r\n *   console.log(myUserObservable.current().displayName)\r\n * })\r\n *\r\n * // ... or a component\r\n * const userComponent = observer(({ user }) =>\r\n *   <div>{user.current().displayName}</div>\r\n * )\r\n *\r\n * @export\r\n * @template T\r\n * @param {(sink: (newValue: T) => void) => void} subscriber\r\n * @param {IDisposer} [unsubscriber=NOOP]\r\n * @param {T} [initialValue=undefined] the data that will be returned by `get()` until the `sink` has emitted its first data\r\n * @returns {{\r\n *     current(): T;\r\n *     dispose(): void;\r\n *     isAlive(): boolean;\r\n * }}\r\n */\r\nfunction fromResource(subscriber, unsubscriber, initialValue) {\r\n    if (unsubscriber === void 0) { unsubscriber = NOOP; }\r\n    if (initialValue === void 0) { initialValue = undefined; }\r\n    var isActive = false;\r\n    var isDisposed = false;\r\n    var value = initialValue;\r\n    var suspender = function () {\r\n        if (isActive) {\r\n            isActive = false;\r\n            unsubscriber();\r\n        }\r\n    };\r\n    var atom = (0,mobx__WEBPACK_IMPORTED_MODULE_0__.createAtom)(\"ResourceBasedObservable\", function () {\r\n        invariant(!isActive && !isDisposed);\r\n        isActive = true;\r\n        subscriber(function (newValue) {\r\n            (0,mobx__WEBPACK_IMPORTED_MODULE_0__._allowStateChanges)(true, function () {\r\n                value = newValue;\r\n                atom.reportChanged();\r\n            });\r\n        });\r\n    }, suspender);\r\n    return {\r\n        current: function () {\r\n            invariant(!isDisposed, \"subscribingObservable has already been disposed\");\r\n            var isBeingTracked = atom.reportObserved();\r\n            if (!isBeingTracked && !isActive)\r\n                console.warn(\"Called `get` of a subscribingObservable outside a reaction. Current value will be returned but no new subscription has started\");\r\n            return value;\r\n        },\r\n        dispose: function () {\r\n            isDisposed = true;\r\n            suspender();\r\n        },\r\n        isAlive: function () { return isActive; },\r\n    };\r\n}\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nfunction observableSymbol() {\r\n    return (typeof Symbol === \"function\" && Symbol.observable) || \"@@observable\";\r\n}\r\n/**\r\n * Converts an expression to an observable stream (a.k.a. TC 39 Observable / RxJS observable).\r\n * The provided expression is tracked by mobx as long as there are subscribers, automatically\r\n * emitting when new values become available. The expressions respect (trans)actions.\r\n *\r\n * @example\r\n *\r\n * const user = observable({\r\n *   firstName: \"C.S\",\r\n *   lastName: \"Lewis\"\r\n * })\r\n *\r\n * Rx.Observable\r\n *   .from(mobxUtils.toStream(() => user.firstname + user.lastName))\r\n *   .scan(nameChanges => nameChanges + 1, 0)\r\n *   .subscribe(nameChanges => console.log(\"Changed name \", nameChanges, \"times\"))\r\n *\r\n * @export\r\n * @template T\r\n * @param {() => T} expression\r\n * @param {boolean} fireImmediately (by default false)\r\n * @returns {IObservableStream<T>}\r\n */\r\nfunction toStream(expression, fireImmediately) {\r\n    var _a;\r\n    if (fireImmediately === void 0) { fireImmediately = false; }\r\n    var computedValue = (0,mobx__WEBPACK_IMPORTED_MODULE_0__.computed)(expression);\r\n    return _a = {\r\n            subscribe: function (observer) {\r\n                if (\"function\" === typeof observer) {\r\n                    return {\r\n                        unsubscribe: computedValue.observe(function (_a) {\r\n                            var newValue = _a.newValue;\r\n                            return observer(newValue);\r\n                        }, fireImmediately),\r\n                    };\r\n                }\r\n                if (observer && \"object\" === typeof observer && observer.next) {\r\n                    return {\r\n                        unsubscribe: computedValue.observe(function (_a) {\r\n                            var newValue = _a.newValue;\r\n                            return observer.next(newValue);\r\n                        }, fireImmediately),\r\n                    };\r\n                }\r\n                return {\r\n                    unsubscribe: function () { },\r\n                };\r\n            }\r\n        },\r\n        _a[observableSymbol()] = function () {\r\n            return this;\r\n        },\r\n        _a;\r\n}\r\nvar StreamListener = /** @class */ (function () {\r\n    function StreamListener(observable, initialValue) {\r\n        var _this = this;\r\n        (0,mobx__WEBPACK_IMPORTED_MODULE_0__.runInAction)(function () {\r\n            _this.current = initialValue;\r\n            _this.subscription = observable.subscribe(_this);\r\n        });\r\n    }\r\n    StreamListener.prototype.dispose = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    StreamListener.prototype.next = function (value) {\r\n        this.current = value;\r\n    };\r\n    StreamListener.prototype.complete = function () {\r\n        this.dispose();\r\n    };\r\n    StreamListener.prototype.error = function (value) {\r\n        this.current = value;\r\n        this.dispose();\r\n    };\r\n    __decorate([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__.observable.ref\r\n    ], StreamListener.prototype, \"current\", void 0);\r\n    __decorate([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\r\n    ], StreamListener.prototype, \"next\", null);\r\n    __decorate([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\r\n    ], StreamListener.prototype, \"complete\", null);\r\n    __decorate([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\r\n    ], StreamListener.prototype, \"error\", null);\r\n    return StreamListener;\r\n}());\r\nfunction fromStream(observable, initialValue) {\r\n    if (initialValue === void 0) { initialValue = undefined; }\r\n    return new StreamListener(observable, initialValue);\r\n}\n\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar RESERVED_NAMES = [\"model\", \"reset\", \"submit\", \"isDirty\", \"isPropertyDirty\", \"resetProperty\"];\r\nvar ViewModel = /** @class */ (function () {\r\n    function ViewModel(model) {\r\n        var _this = this;\r\n        this.model = model;\r\n        this.localValues = mobx__WEBPACK_IMPORTED_MODULE_0__.observable.map({});\r\n        this.localComputedValues = mobx__WEBPACK_IMPORTED_MODULE_0__.observable.map({});\r\n        this.isPropertyDirty = function (key) {\r\n            return _this.localValues.has(key);\r\n        };\r\n        invariant((0,mobx__WEBPACK_IMPORTED_MODULE_0__.isObservableObject)(model), \"createViewModel expects an observable object\");\r\n        // use this helper as Object.getOwnPropertyNames doesn't return getters\r\n        getAllMethodsAndProperties(model).forEach(function (key) {\r\n            if (key === mobx__WEBPACK_IMPORTED_MODULE_0__.$mobx || key === \"__mobxDidRunLazyInitializers\") {\r\n                return;\r\n            }\r\n            invariant(RESERVED_NAMES.indexOf(key) === -1, \"The propertyname \" + key + \" is reserved and cannot be used with viewModels\");\r\n            if ((0,mobx__WEBPACK_IMPORTED_MODULE_0__.isComputedProp)(model, key)) {\r\n                var derivation = (0,mobx__WEBPACK_IMPORTED_MODULE_0__._getAdministration)(model, key).derivation; // Fixme: there is no clear api to get the derivation\r\n                _this.localComputedValues.set(key, (0,mobx__WEBPACK_IMPORTED_MODULE_0__.computed)(derivation.bind(_this)));\r\n            }\r\n            var descriptor = Object.getOwnPropertyDescriptor(model, key);\r\n            var additionalDescriptor = descriptor ? { enumerable: descriptor.enumerable } : {};\r\n            Object.defineProperty(_this, key, __assign(__assign({}, additionalDescriptor), { configurable: true, get: function () {\r\n                    if ((0,mobx__WEBPACK_IMPORTED_MODULE_0__.isComputedProp)(model, key))\r\n                        return _this.localComputedValues.get(key).get();\r\n                    if (_this.isPropertyDirty(key))\r\n                        return _this.localValues.get(key);\r\n                    else\r\n                        return _this.model[key];\r\n                }, set: (0,mobx__WEBPACK_IMPORTED_MODULE_0__.action)(function (value) {\r\n                    if (value !== _this.model[key]) {\r\n                        _this.localValues.set(key, value);\r\n                    }\r\n                    else {\r\n                        _this.localValues.delete(key);\r\n                    }\r\n                }) }));\r\n        });\r\n    }\r\n    Object.defineProperty(ViewModel.prototype, \"isDirty\", {\r\n        get: function () {\r\n            return this.localValues.size > 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ViewModel.prototype, \"changedValues\", {\r\n        get: function () {\r\n            return this.localValues.toJS();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ViewModel.prototype.submit = function () {\r\n        var _this = this;\r\n        (0,mobx__WEBPACK_IMPORTED_MODULE_0__.keys)(this.localValues).forEach(function (key) {\r\n            var source = _this.localValues.get(key);\r\n            var destination = _this.model[key];\r\n            if ((0,mobx__WEBPACK_IMPORTED_MODULE_0__.isObservableArray)(destination)) {\r\n                destination.replace(source);\r\n            }\r\n            else if ((0,mobx__WEBPACK_IMPORTED_MODULE_0__.isObservableMap)(destination)) {\r\n                destination.clear();\r\n                destination.merge(source);\r\n            }\r\n            else if (!(0,mobx__WEBPACK_IMPORTED_MODULE_0__.isComputed)(source)) {\r\n                _this.model[key] = source;\r\n            }\r\n        });\r\n        this.localValues.clear();\r\n    };\r\n    ViewModel.prototype.reset = function () {\r\n        this.localValues.clear();\r\n    };\r\n    ViewModel.prototype.resetProperty = function (key) {\r\n        this.localValues.delete(key);\r\n    };\r\n    __decorate$1([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__.computed\r\n    ], ViewModel.prototype, \"isDirty\", null);\r\n    __decorate$1([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__.computed\r\n    ], ViewModel.prototype, \"changedValues\", null);\r\n    __decorate$1([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\r\n    ], ViewModel.prototype, \"submit\", null);\r\n    __decorate$1([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\r\n    ], ViewModel.prototype, \"reset\", null);\r\n    __decorate$1([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\r\n    ], ViewModel.prototype, \"resetProperty\", null);\r\n    return ViewModel;\r\n}());\r\n/**\r\n * `createViewModel` takes an object with observable properties (model)\r\n * and wraps a viewmodel around it. The viewmodel proxies all enumerable properties of the original model with the following behavior:\r\n *  - as long as no new value has been assigned to the viewmodel property, the original property will be returned.\r\n *  - any future change in the model will be visible in the viewmodel as well unless the viewmodel property was dirty at the time of the attempted change.\r\n *  - once a new value has been assigned to a property of the viewmodel, that value will be returned during a read of that property in the future. However, the original model remain untouched until `submit()` is called.\r\n *\r\n * The viewmodel exposes the following additional methods, besides all the enumerable properties of the model:\r\n * - `submit()`: copies all the values of the viewmodel to the model and resets the state\r\n * - `reset()`: resets the state of the viewmodel, abandoning all local modifications\r\n * - `resetProperty(propName)`: resets the specified property of the viewmodel\r\n * - `isDirty`: observable property indicating if the viewModel contains any modifications\r\n * - `isPropertyDirty(propName)`: returns true if the specified property is dirty\r\n * - `changedValues`: returns a key / value map with the properties that have been changed in the model so far\r\n * - `model`: The original model object for which this viewModel was created\r\n *\r\n * You may use observable arrays, maps and objects with `createViewModel` but keep in mind to assign fresh instances of those to the viewmodel's properties, otherwise you would end up modifying the properties of the original model.\r\n * Note that if you read a non-dirty property, viewmodel only proxies the read to the model. You therefore need to assign a fresh instance not only the first time you make the assignment but also after calling `reset()` or `submit()`.\r\n *\r\n * @example\r\n * class Todo {\r\n *   \\@observable title = \"Test\"\r\n * }\r\n *\r\n * const model = new Todo()\r\n * const viewModel = createViewModel(model);\r\n *\r\n * autorun(() => console.log(viewModel.model.title, \",\", viewModel.title))\r\n * // prints \"Test, Test\"\r\n * model.title = \"Get coffee\"\r\n * // prints \"Get coffee, Get coffee\", viewModel just proxies to model\r\n * viewModel.title = \"Get tea\"\r\n * // prints \"Get coffee, Get tea\", viewModel's title is now dirty, and the local value will be printed\r\n * viewModel.submit()\r\n * // prints \"Get tea, Get tea\", changes submitted from the viewModel to the model, viewModel is proxying again\r\n * viewModel.title = \"Get cookie\"\r\n * // prints \"Get tea, Get cookie\" // viewModel has diverged again\r\n * viewModel.reset()\r\n * // prints \"Get tea, Get tea\", changes of the viewModel have been abandoned\r\n *\r\n * @param {T} model\r\n * @returns {(T & IViewModel<T>)}\r\n * ```\r\n */\r\nfunction createViewModel(model) {\r\n    return new ViewModel(model);\r\n}\n\n/**\r\n * Like normal `when`, except that this `when` will automatically dispose if the condition isn't met within a certain amount of time.\r\n *\r\n * @example\r\n * test(\"expect store to load\", t => {\r\n *   const store = {\r\n *     items: [],\r\n *     loaded: false\r\n *   }\r\n *   fetchDataForStore((data) => {\r\n *     store.items = data;\r\n *     store.loaded = true;\r\n *   })\r\n *   whenWithTimeout(\r\n *     () => store.loaded\r\n *     () => t.end()\r\n *     2000,\r\n *     () => t.fail(\"store didn't load with 2 secs\")\r\n *   )\r\n * })\r\n *\r\n *\r\n * @export\r\n * @param {() => boolean} expr see when, the expression to await\r\n * @param {() => void} action see when, the action to execut when expr returns truthy\r\n * @param {number} [timeout=10000] maximum amount when spends waiting before giving up\r\n * @param {any} [onTimeout=() => {}] the ontimeout handler will be called if the condition wasn't met within the given time\r\n * @returns {IDisposer} disposer function that can be used to cancel the when prematurely. Neither action or onTimeout will be fired if disposed\r\n */\r\nfunction whenWithTimeout(expr, action, timeout, onTimeout) {\r\n    if (timeout === void 0) { timeout = 10000; }\r\n    if (onTimeout === void 0) { onTimeout = function () { }; }\r\n    deprecated(\"whenWithTimeout is deprecated, use mobx.when with timeout option instead\");\r\n    return (0,mobx__WEBPACK_IMPORTED_MODULE_0__.when)(expr, action, {\r\n        timeout: timeout,\r\n        onError: onTimeout,\r\n    });\r\n}\n\n/**\r\n * MobX normally suspends any computed value that is not in use by any reaction,\r\n * and lazily re-evaluates the expression if needed outside a reaction while not in use.\r\n * `keepAlive` marks a computed value as always in use, meaning that it will always fresh, but never disposed automatically.\r\n *\r\n * @example\r\n * const obj = observable({\r\n *   number: 3,\r\n *   doubler: function() { return this.number * 2 }\r\n * })\r\n * const stop = keepAlive(obj, \"doubler\")\r\n *\r\n * @param {Object} target an object that has a computed property, created by `@computed` or `extendObservable`\r\n * @param {string} property the name of the property to keep alive\r\n * @returns {IDisposer} stops this keep alive so that the computed value goes back to normal behavior\r\n */\r\n/**\r\n * @example\r\n * const number = observable(3)\r\n * const doubler = computed(() => number.get() * 2)\r\n * const stop = keepAlive(doubler)\r\n * // doubler will now stay in sync reactively even when there are no further observers\r\n * stop()\r\n * // normal behavior, doubler results will be recomputed if not observed but needed, but lazily\r\n *\r\n * @param {IComputedValue<any>} computedValue created using the `computed` function\r\n * @returns {IDisposer} stops this keep alive so that the computed value goes back to normal behavior\r\n */\r\nfunction keepAlive(_1, _2) {\r\n    var computed = (0,mobx__WEBPACK_IMPORTED_MODULE_0__.getAtom)(_1, _2);\r\n    if (!computed)\r\n        throw new Error(\"No computed provided, please provide an object created with `computed(() => expr)` or an object + property name\");\r\n    return computed.observe(function () { });\r\n}\n\n/**\r\n * `queueProcessor` takes an observable array, observes it and calls `processor`\r\n * once for each item added to the observable array, optionally debouncing the action\r\n *\r\n * @example\r\n * const pendingNotifications = observable([])\r\n * const stop = queueProcessor(pendingNotifications, msg => {\r\n *   // show Desktop notification\r\n *   new Notification(msg);\r\n * })\r\n *\r\n * // usage:\r\n * pendingNotifications.push(\"test!\")\r\n *\r\n * @param {T[]} observableArray observable array instance to track\r\n * @param {(item: T) => void} processor action to call per item\r\n * @param {number} [debounce=0] optional debounce time in ms. With debounce 0 the processor will run synchronously\r\n * @returns {IDisposer} stops the processor\r\n */\r\nfunction queueProcessor(observableArray, processor, debounce) {\r\n    if (debounce === void 0) { debounce = 0; }\r\n    if (!(0,mobx__WEBPACK_IMPORTED_MODULE_0__.isObservableArray)(observableArray))\r\n        throw new Error(\"Expected observable array as first argument\");\r\n    if (!(0,mobx__WEBPACK_IMPORTED_MODULE_0__.isAction)(processor))\r\n        processor = (0,mobx__WEBPACK_IMPORTED_MODULE_0__.action)(\"queueProcessor\", processor);\r\n    var runner = function () {\r\n        // construct a final set\r\n        var items = observableArray.slice(0);\r\n        // clear the queue for next iteration\r\n        (0,mobx__WEBPACK_IMPORTED_MODULE_0__.runInAction)(function () { return observableArray.splice(0); });\r\n        // fire processor\r\n        items.forEach(processor);\r\n    };\r\n    if (debounce > 0)\r\n        return (0,mobx__WEBPACK_IMPORTED_MODULE_0__.autorun)(runner, { delay: debounce });\r\n    else\r\n        return (0,mobx__WEBPACK_IMPORTED_MODULE_0__.autorun)(runner);\r\n}\n\n/**\r\n * `chunkProcessor` takes an observable array, observes it and calls `processor`\r\n * once for a chunk of items added to the observable array, optionally deboucing the action.\r\n * The maximum chunk size can be limited by number.\r\n * This allows both, splitting larger into smaller chunks or (when debounced) combining smaller\r\n * chunks and/or single items into reasonable chunks of work.\r\n *\r\n * @example\r\n * const trackedActions = observable([])\r\n * const stop = chunkProcessor(trackedActions, chunkOfMax10Items => {\r\n *   sendTrackedActionsToServer(chunkOfMax10Items);\r\n * }, 100, 10)\r\n *\r\n * // usage:\r\n * trackedActions.push(\"scrolled\")\r\n * trackedActions.push(\"hoveredButton\")\r\n * // when both pushes happen within 100ms, there will be only one call to server\r\n *\r\n * @param {T[]} observableArray observable array instance to track\r\n * @param {(item: T[]) => void} processor action to call per item\r\n * @param {number} [debounce=0] optional debounce time in ms. With debounce 0 the processor will run synchronously\r\n * @param {number} [maxChunkSize=0] optionally do not call on full array but smaller chunks. With 0 it will process the full array.\r\n * @returns {IDisposer} stops the processor\r\n */\r\nfunction chunkProcessor(observableArray, processor, debounce, maxChunkSize) {\r\n    if (debounce === void 0) { debounce = 0; }\r\n    if (maxChunkSize === void 0) { maxChunkSize = 0; }\r\n    if (!(0,mobx__WEBPACK_IMPORTED_MODULE_0__.isObservableArray)(observableArray))\r\n        throw new Error(\"Expected observable array as first argument\");\r\n    if (!(0,mobx__WEBPACK_IMPORTED_MODULE_0__.isAction)(processor))\r\n        processor = (0,mobx__WEBPACK_IMPORTED_MODULE_0__.action)(\"chunkProcessor\", processor);\r\n    var runner = function () {\r\n        var _loop_1 = function () {\r\n            var chunkSize = maxChunkSize === 0\r\n                ? observableArray.length\r\n                : Math.min(observableArray.length, maxChunkSize);\r\n            // construct a final set\r\n            var items = observableArray.slice(0, chunkSize);\r\n            // clear the slice for next iteration\r\n            (0,mobx__WEBPACK_IMPORTED_MODULE_0__.runInAction)(function () { return observableArray.splice(0, chunkSize); });\r\n            // fire processor\r\n            processor(items);\r\n        };\r\n        while (observableArray.length > 0) {\r\n            _loop_1();\r\n        }\r\n    };\r\n    if (debounce > 0)\r\n        return (0,mobx__WEBPACK_IMPORTED_MODULE_0__.autorun)(runner, { delay: debounce });\r\n    else\r\n        return (0,mobx__WEBPACK_IMPORTED_MODULE_0__.autorun)(runner);\r\n}\n\nvar tickers = {};\r\n/**\r\n * Returns the current date time as epoch number.\r\n * The date time is read from an observable which is updated automatically after the given interval.\r\n * So basically it treats time as an observable.\r\n *\r\n * The function takes an interval as parameter, which indicates how often `now()` will return a new value.\r\n * If no interval is given, it will update each second. If \"frame\" is specified, it will update each time a\r\n * `requestAnimationFrame` is available.\r\n *\r\n * Multiple clocks with the same interval will automatically be synchronized.\r\n *\r\n * Countdown example: https://jsfiddle.net/mweststrate/na0qdmkw/\r\n *\r\n * @example\r\n *\r\n * const start = Date.now()\r\n *\r\n * autorun(() => {\r\n *   console.log(\"Seconds elapsed: \", (mobxUtils.now() - start) / 1000)\r\n * })\r\n *\r\n *\r\n * @export\r\n * @param {(number | \"frame\")} [interval=1000] interval in milliseconds about how often the interval should update\r\n * @returns\r\n */\r\nfunction now(interval) {\r\n    if (interval === void 0) { interval = 1000; }\r\n    if (!(0,mobx__WEBPACK_IMPORTED_MODULE_0__._isComputingDerivation)()) {\r\n        // See #40\r\n        return Date.now();\r\n    }\r\n    if (!tickers[interval]) {\r\n        if (typeof interval === \"number\")\r\n            tickers[interval] = createIntervalTicker(interval);\r\n        else\r\n            tickers[interval] = createAnimationFrameTicker();\r\n    }\r\n    return tickers[interval].current();\r\n}\r\nfunction createIntervalTicker(interval) {\r\n    var subscriptionHandle;\r\n    return fromResource(function (sink) {\r\n        sink(Date.now());\r\n        subscriptionHandle = setInterval(function () { return sink(Date.now()); }, interval);\r\n    }, function () {\r\n        clearInterval(subscriptionHandle);\r\n    }, Date.now());\r\n}\r\nfunction createAnimationFrameTicker() {\r\n    var frameBasedTicker = fromResource(function (sink) {\r\n        sink(Date.now());\r\n        function scheduleTick() {\r\n            window.requestAnimationFrame(function () {\r\n                sink(Date.now());\r\n                if (frameBasedTicker.isAlive())\r\n                    scheduleTick();\r\n            });\r\n        }\r\n        scheduleTick();\r\n    }, function () { }, Date.now());\r\n    return frameBasedTicker;\r\n}\n\nvar __assign$1 = (undefined && undefined.__assign) || function () {\r\n    __assign$1 = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign$1.apply(this, arguments);\r\n};\r\n/**\r\n * _deprecated_ this functionality can now be found as `flow` in the mobx package. However, `flow` is not applicable as decorator, where `asyncAction` still is.\r\n *\r\n *\r\n *\r\n * `asyncAction` takes a generator function and automatically wraps all parts of the process in actions. See the examples below.\r\n * `asyncAction` can be used both as decorator or to wrap functions.\r\n *\r\n * - It is important that `asyncAction should always be used with a generator function (recognizable as `function*` or `*name` syntax)\r\n * - Each yield statement should return a Promise. The generator function will continue as soon as the promise settles, with the settled value\r\n * - When the generator function finishes, you can return a normal value. The `asyncAction` wrapped function will always produce a promise delivering that value.\r\n *\r\n * When using the mobx devTools, an asyncAction will emit `action` events with names like:\r\n * * `\"fetchUsers - runid: 6 - init\"`\r\n * * `\"fetchUsers - runid: 6 - yield 0\"`\r\n * * `\"fetchUsers - runid: 6 - yield 1\"`\r\n *\r\n * The `runId` represents the generator instance. In other words, if `fetchUsers` is invoked multiple times concurrently, the events with the same `runid` belong together.\r\n * The `yield` number indicates the progress of the generator. `init` indicates spawning (it won't do anything, but you can find the original arguments of the `asyncAction` here).\r\n * `yield 0` ... `yield n` indicates the code block that is now being executed. `yield 0` is before the first `yield`, `yield 1` after the first one etc. Note that yield numbers are not determined lexically but by the runtime flow.\r\n *\r\n * `asyncActions` requires `Promise` and `generators` to be available on the target environment. Polyfill `Promise` if needed. Both TypeScript and Babel can compile generator functions down to ES5.\r\n *\r\n *  N.B. due to a [babel limitation](https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy/issues/26), in Babel generatos cannot be combined with decorators. See also [#70](https://github.com/mobxjs/mobx-utils/issues/70)\r\n *\r\n *\r\n * @example\r\n * import {asyncAction} from \"mobx-utils\"\r\n *\r\n * let users = []\r\n *\r\n * const fetchUsers = asyncAction(\"fetchUsers\", function* (url) {\r\n *   const start = Date.now()\r\n *   const data = yield window.fetch(url)\r\n *   users = yield data.json()\r\n *   return start - Date.now()\r\n * })\r\n *\r\n * fetchUsers(\"http://users.com\").then(time => {\r\n *   console.dir(\"Got users\", users, \"in \", time, \"ms\")\r\n * })\r\n *\r\n * @example\r\n * import {asyncAction} from \"mobx-utils\"\r\n *\r\n * mobx.configure({ enforceActions: \"observed\" }) // don't allow state modifications outside actions\r\n *\r\n * class Store {\r\n * \t\\@observable githubProjects = []\r\n * \t\\@observable = \"pending\" // \"pending\" / \"done\" / \"error\"\r\n *\r\n * \t\\@asyncAction\r\n * \t*fetchProjects() { // <- note the star, this a generator function!\r\n * \t\tthis.githubProjects = []\r\n * \t\tthis.state = \"pending\"\r\n * \t\ttry {\r\n * \t\t\tconst projects = yield fetchGithubProjectsSomehow() // yield instead of await\r\n * \t\t\tconst filteredProjects = somePreprocessing(projects)\r\n * \t\t\t// the asynchronous blocks will automatically be wrapped actions\r\n * \t\t\tthis.state = \"done\"\r\n * \t\t\tthis.githubProjects = filteredProjects\r\n * \t\t} catch (error) {\r\n * \t\t\tthis.state = \"error\"\r\n * \t\t}\r\n * \t}\r\n * }\r\n *\r\n * @export\r\n * @returns {Promise}\r\n */\r\nfunction asyncAction(arg1, arg2) {\r\n    // decorator\r\n    if (typeof arguments[1] === \"string\") {\r\n        var name_1 = arguments[1];\r\n        var descriptor_1 = arguments[2];\r\n        if (descriptor_1 && descriptor_1.value) {\r\n            return Object.assign({}, descriptor_1, {\r\n                value: (0,mobx__WEBPACK_IMPORTED_MODULE_0__.flow)(descriptor_1.value),\r\n            });\r\n        }\r\n        else {\r\n            return Object.assign({}, descriptor_1, {\r\n                set: function (v) {\r\n                    Object.defineProperty(this, name_1, __assign$1(__assign$1({}, descriptor_1), { value: (0,mobx__WEBPACK_IMPORTED_MODULE_0__.flow)(v) }));\r\n                },\r\n            });\r\n        }\r\n    }\r\n    // direct invocation\r\n    var generator = typeof arg1 === \"string\" ? arg2 : arg1;\r\n    var name = typeof arg1 === \"string\" ? arg1 : generator.name || \"<unnamed async action>\";\r\n    deprecated(\"asyncAction is deprecated. use mobx.flow instead\");\r\n    return (0,mobx__WEBPACK_IMPORTED_MODULE_0__.flow)(generator); // name get's dropped..\r\n}\n\n/**\r\n * _deprecated_ whenAsync is deprecated, use mobx.when without effect instead.\r\n *\r\n * Like normal `when`, except that this `when` will return a promise that resolves when the expression becomes truthy\r\n *\r\n * @example\r\n * await whenAsync(() => !state.someBoolean)\r\n *\r\n * @export\r\n * @param {() => boolean} fn see when, the expression to await\r\n * @param {number} timeout maximum amount of time to wait, before the promise rejects\r\n * @returns Promise for when an observable eventually matches some condition. Rejects if timeout is provided and has expired\r\n */\r\nfunction whenAsync(fn, timeout) {\r\n    if (timeout === void 0) { timeout = 0; }\r\n    deprecated(\"whenAsync is deprecated, use mobx.when without effect instead\");\r\n    return (0,mobx__WEBPACK_IMPORTED_MODULE_0__.when)(fn, {\r\n        timeout: timeout,\r\n    });\r\n}\n\n/**\r\n * expr can be used to create temporarily views inside views.\r\n * This can be improved to improve performance if a value changes often, but usually doesn't affect the outcome of an expression.\r\n *\r\n * In the following example the expression prevents that a component is rerender _each time_ the selection changes;\r\n * instead it will only rerenders when the current todo is (de)selected.\r\n *\r\n * @example\r\n * const Todo = observer((props) => {\r\n *     const todo = props.todo;\r\n *     const isSelected = mobxUtils.expr(() => props.viewState.selection === todo);\r\n *     return <div className={isSelected ? \"todo todo-selected\" : \"todo\"}>{todo.title}</div>\r\n * });\r\n *\r\n */\r\nfunction expr(expr) {\r\n    if (!(0,mobx__WEBPACK_IMPORTED_MODULE_0__._isComputingDerivation)())\r\n        console.warn(\"'expr' should only be used inside other reactive functions.\");\r\n    // optimization: would be more efficient if the expr itself wouldn't be evaluated first on the next change, but just a 'changed' signal would be fired\r\n    return (0,mobx__WEBPACK_IMPORTED_MODULE_0__.computed)(expr).get();\r\n}\n\nvar __assign$2 = (undefined && undefined.__assign) || function () {\r\n    __assign$2 = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign$2.apply(this, arguments);\r\n};\r\nvar memoizationId = 0;\r\nfunction createTransformer(transformer, arg2) {\r\n    invariant(typeof transformer === \"function\" && transformer.length < 2, \"createTransformer expects a function that accepts one argument\");\r\n    // Memoizes: object id -> reactive view that applies transformer to the object\r\n    var views = {};\r\n    var onCleanup = undefined;\r\n    var keepAlive = false;\r\n    var debugNameGenerator = undefined;\r\n    if (typeof arg2 === \"object\") {\r\n        onCleanup = arg2.onCleanup;\r\n        keepAlive = arg2.keepAlive !== undefined ? arg2.keepAlive : false;\r\n        debugNameGenerator = arg2.debugNameGenerator;\r\n    }\r\n    else if (typeof arg2 === \"function\") {\r\n        onCleanup = arg2;\r\n    }\r\n    function createView(sourceIdentifier, sourceObject) {\r\n        var latestValue;\r\n        var computedValueOptions = {};\r\n        if (typeof arg2 === \"object\") {\r\n            onCleanup = arg2.onCleanup;\r\n            debugNameGenerator = arg2.debugNameGenerator;\r\n            computedValueOptions = arg2;\r\n        }\r\n        else if (typeof arg2 === \"function\") {\r\n            onCleanup = arg2;\r\n        }\r\n        else {\r\n            onCleanup = undefined;\r\n            debugNameGenerator = undefined;\r\n        }\r\n        var prettifiedName = debugNameGenerator\r\n            ? debugNameGenerator(sourceObject)\r\n            : \"Transformer-\" + transformer.name + \"-\" + sourceIdentifier;\r\n        var expr = (0,mobx__WEBPACK_IMPORTED_MODULE_0__.computed)(function () {\r\n            return (latestValue = transformer(sourceObject));\r\n        }, __assign$2(__assign$2({}, computedValueOptions), { name: prettifiedName }));\r\n        if (!keepAlive) {\r\n            var disposer_1 = (0,mobx__WEBPACK_IMPORTED_MODULE_0__.onBecomeUnobserved)(expr, function () {\r\n                delete views[sourceIdentifier];\r\n                disposer_1();\r\n                if (onCleanup)\r\n                    onCleanup(latestValue, sourceObject);\r\n            });\r\n        }\r\n        return expr;\r\n    }\r\n    var memoWarned = false;\r\n    return function (object) {\r\n        var identifier = getMemoizationId(object);\r\n        var reactiveView = views[identifier];\r\n        if (reactiveView)\r\n            return reactiveView.get();\r\n        if (!keepAlive && !(0,mobx__WEBPACK_IMPORTED_MODULE_0__._isComputingDerivation)()) {\r\n            if (!memoWarned) {\r\n                console.warn(\"invoking a transformer from outside a reactive context won't memorized \" +\r\n                    \"and is cleaned up immediately, unless keepAlive is set\");\r\n                memoWarned = true;\r\n            }\r\n            var value = transformer(object);\r\n            if (onCleanup)\r\n                onCleanup(value, object);\r\n            return value;\r\n        }\r\n        // Not in cache; create a reactive view\r\n        reactiveView = views[identifier] = createView(identifier, object);\r\n        return reactiveView.get();\r\n    };\r\n}\r\nfunction getMemoizationId(object) {\r\n    var objectType = typeof object;\r\n    if (objectType === \"string\")\r\n        return \"string:\" + object;\r\n    if (objectType === \"number\")\r\n        return \"number:\" + object;\r\n    if (object === null || (objectType !== \"object\" && objectType !== \"function\"))\r\n        throw new Error(\"[mobx-utils] transform expected an object, function, string or number, got: \" + String(object));\r\n    var tid = object.$transformId;\r\n    if (tid === undefined) {\r\n        tid = \"memoizationId:\" + ++memoizationId;\r\n        addHiddenProp(object, \"$transformId\", tid);\r\n    }\r\n    return tid;\r\n}\n\nfunction buildPath(entry) {\r\n    if (!entry)\r\n        return \"ROOT\";\r\n    var res = [];\r\n    while (entry.parent) {\r\n        res.push(entry.path);\r\n        entry = entry.parent;\r\n    }\r\n    return res.reverse().join(\"/\");\r\n}\r\nfunction isRecursivelyObservable(thing) {\r\n    return (0,mobx__WEBPACK_IMPORTED_MODULE_0__.isObservableObject)(thing) || (0,mobx__WEBPACK_IMPORTED_MODULE_0__.isObservableArray)(thing) || (0,mobx__WEBPACK_IMPORTED_MODULE_0__.isObservableMap)(thing);\r\n}\r\n/**\r\n * Given an object, deeply observes the given object.\r\n * It is like `observe` from mobx, but applied recursively, including all future children.\r\n *\r\n * Note that the given object cannot ever contain cycles and should be a tree.\r\n *\r\n * As benefit: path and root will be provided in the callback, so the signature of the listener is\r\n * (change, path, root) => void\r\n *\r\n * The returned disposer can be invoked to clean up the listener\r\n *\r\n * deepObserve cannot be used on computed values.\r\n *\r\n * @example\r\n * const disposer = deepObserve(target, (change, path) => {\r\n *    console.dir(change)\r\n * })\r\n */\r\nfunction deepObserve(target, listener) {\r\n    var entrySet = new WeakMap();\r\n    function genericListener(change) {\r\n        var entry = entrySet.get(change.object);\r\n        processChange(change, entry);\r\n        listener(change, buildPath(entry), target);\r\n    }\r\n    function processChange(change, parent) {\r\n        switch (change.type) {\r\n            // Object changes\r\n            case \"add\": // also for map\r\n                observeRecursively(change.newValue, parent, change.name);\r\n                break;\r\n            case \"update\": // also for array and map\r\n                unobserveRecursively(change.oldValue);\r\n                observeRecursively(change.newValue, parent, change.name || \"\" + change.index);\r\n                break;\r\n            case \"remove\": // object\r\n            case \"delete\": // map\r\n                unobserveRecursively(change.oldValue);\r\n                break;\r\n            // Array changes\r\n            case \"splice\":\r\n                change.removed.map(unobserveRecursively);\r\n                change.added.forEach(function (value, idx) {\r\n                    return observeRecursively(value, parent, \"\" + (change.index + idx));\r\n                });\r\n                // update paths\r\n                for (var i = change.index + change.addedCount; i < change.object.length; i++) {\r\n                    if (isRecursivelyObservable(change.object[i])) {\r\n                        var entry = entrySet.get(change.object[i]);\r\n                        if (entry)\r\n                            entry.path = \"\" + i;\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    function observeRecursively(thing, parent, path) {\r\n        if (isRecursivelyObservable(thing)) {\r\n            var entry = entrySet.get(thing);\r\n            if (entry) {\r\n                if (entry.parent !== parent || entry.path !== path)\r\n                    // MWE: this constraint is artificial, and this tool could be made to work with cycles,\r\n                    // but it increases administration complexity, has tricky edge cases and the meaning of 'path'\r\n                    // would become less clear. So doesn't seem to be needed for now\r\n                    throw new Error(\"The same observable object cannot appear twice in the same tree,\" +\r\n                        (\" trying to assign it to '\" + buildPath(parent) + \"/\" + path + \"',\") +\r\n                        (\" but it already exists at '\" + buildPath(entry.parent) + \"/\" + entry.path + \"'\"));\r\n            }\r\n            else {\r\n                var entry_1 = {\r\n                    parent: parent,\r\n                    path: path,\r\n                    dispose: (0,mobx__WEBPACK_IMPORTED_MODULE_0__.observe)(thing, genericListener),\r\n                };\r\n                entrySet.set(thing, entry_1);\r\n                (0,mobx__WEBPACK_IMPORTED_MODULE_0__.entries)(thing).forEach(function (_a) {\r\n                    var key = _a[0], value = _a[1];\r\n                    return observeRecursively(value, entry_1, key);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    function unobserveRecursively(thing) {\r\n        if (isRecursivelyObservable(thing)) {\r\n            var entry = entrySet.get(thing);\r\n            if (!entry)\r\n                return;\r\n            entrySet.delete(thing);\r\n            entry.dispose();\r\n            (0,mobx__WEBPACK_IMPORTED_MODULE_0__.values)(thing).forEach(unobserveRecursively);\r\n        }\r\n    }\r\n    observeRecursively(target, undefined, \"\");\r\n    return function () {\r\n        unobserveRecursively(target);\r\n    };\r\n}\n\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * Reactively sorts a base observable array into multiple observable arrays based on the value of a\r\n * `groupBy: (item: T) => G` function.\r\n *\r\n * This observes the individual computed groupBy values and only updates the source and dest arrays\r\n * when there is an actual change, so this is far more efficient than, for example\r\n * `base.filter(i => groupBy(i) === 'we')`. Call #dispose() to stop tracking.\r\n *\r\n * No guarantees are made about the order of items in the grouped arrays.\r\n *\r\n * The resulting map of arrays is read-only. clear(), set(), delete() are not supported and\r\n * modifying the group arrays will lead to undefined behavior.\r\n *\r\n * NB: ObservableGroupMap relies on `Symbol`s. If you are targeting a platform which doesn't\r\n * support these natively, you will need to provide a polyfill.\r\n *\r\n * @param {array} base The array to sort into groups.\r\n * @param {function} groupBy The function used for grouping.\r\n * @param options Object with properties:\r\n *  `name`: Debug name of this ObservableGroupMap.\r\n *  `keyToName`: Function to create the debug names of the observable group arrays.\r\n *\r\n * @example\r\n * const slices = observable([\r\n *     { day: \"mo\", hours: 12 },\r\n *     { day: \"tu\", hours: 2 },\r\n * ])\r\n * const slicesByDay = new ObservableGroupMap(slices, (slice) => slice.day)\r\n * autorun(() => console.log(\r\n *     slicesByDay.get(\"mo\")?.length ?? 0,\r\n *     slicesByDay.get(\"we\"))) // outputs 1, undefined\r\n * slices[0].day = \"we\" // outputs 0, [{ day: \"we\", hours: 12 }]\r\n */\r\nvar ObservableGroupMap = /** @class */ (function (_super) {\r\n    __extends(ObservableGroupMap, _super);\r\n    function ObservableGroupMap(base, groupBy, _a) {\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.name, name = _c === void 0 ? \"ogm\" + ((Math.random() * 1000) | 0) : _c, _d = _b.keyToName, keyToName = _d === void 0 ? function (x) { return \"\" + x; } : _d;\r\n        var _this = _super.call(this) || this;\r\n        _this._keyToName = keyToName;\r\n        _this._groupBy = groupBy;\r\n        _this._ogmInfoKey = Symbol(\"ogmInfo\" + name);\r\n        _this._base = base;\r\n        for (var i = 0; i < base.length; i++) {\r\n            _this._addItem(base[i]);\r\n        }\r\n        _this._disposeBaseObserver = (0,mobx__WEBPACK_IMPORTED_MODULE_0__.observe)(_this._base, function (change) {\r\n            if (\"splice\" === change.type) {\r\n                (0,mobx__WEBPACK_IMPORTED_MODULE_0__.transaction)(function () {\r\n                    for (var _i = 0, _a = change.removed; _i < _a.length; _i++) {\r\n                        var removed = _a[_i];\r\n                        _this._removeItem(removed);\r\n                    }\r\n                    for (var _b = 0, _c = change.added; _b < _c.length; _b++) {\r\n                        var added = _c[_b];\r\n                        _this._addItem(added);\r\n                    }\r\n                });\r\n            }\r\n            else if (\"update\" === change.type) {\r\n                (0,mobx__WEBPACK_IMPORTED_MODULE_0__.transaction)(function () {\r\n                    _this._removeItem(change.oldValue);\r\n                    _this._addItem(change.newValue);\r\n                });\r\n            }\r\n            else {\r\n                throw new Error(\"illegal state\");\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    ObservableGroupMap.prototype.clear = function () {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    ObservableGroupMap.prototype.delete = function (_key) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    ObservableGroupMap.prototype.set = function (_key, _value) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    /**\r\n     * Disposes all observers created during construction and removes state added to base array\r\n     * items.\r\n     */\r\n    ObservableGroupMap.prototype.dispose = function () {\r\n        this._disposeBaseObserver();\r\n        for (var i = 0; i < this._base.length; i++) {\r\n            var item = this._base[i];\r\n            var grouperItemInfo = item[this._ogmInfoKey];\r\n            grouperItemInfo.reaction();\r\n            delete item[this._ogmInfoKey];\r\n        }\r\n    };\r\n    ObservableGroupMap.prototype._getGroupArr = function (key) {\r\n        var result = _super.prototype.get.call(this, key);\r\n        if (undefined === result) {\r\n            result = (0,mobx__WEBPACK_IMPORTED_MODULE_0__.observable)([], { name: \"GroupArray[\" + this._keyToName(key) + \"]\", deep: false });\r\n            _super.prototype.set.call(this, key, result);\r\n        }\r\n        return result;\r\n    };\r\n    ObservableGroupMap.prototype._removeFromGroupArr = function (key, itemIndex) {\r\n        var arr = _super.prototype.get.call(this, key);\r\n        if (1 === arr.length) {\r\n            _super.prototype.delete.call(this, key);\r\n        }\r\n        else if (itemIndex === arr.length - 1) {\r\n            // last position in array\r\n            arr.length--;\r\n        }\r\n        else {\r\n            arr[itemIndex] = arr[arr.length - 1];\r\n            arr[itemIndex][this._ogmInfoKey].groupArrIndex = itemIndex;\r\n            arr.length--;\r\n        }\r\n    };\r\n    ObservableGroupMap.prototype._addItem = function (item) {\r\n        var _this = this;\r\n        var groupByValue = this._groupBy(item);\r\n        var groupArr = this._getGroupArr(groupByValue);\r\n        var value = {\r\n            groupByValue: groupByValue,\r\n            groupArrIndex: groupArr.length,\r\n            reaction: (0,mobx__WEBPACK_IMPORTED_MODULE_0__.reaction)(function () { return _this._groupBy(item); }, function (newGroupByValue, _r) {\r\n                var grouperItemInfo = item[_this._ogmInfoKey];\r\n                _this._removeFromGroupArr(grouperItemInfo.groupByValue, grouperItemInfo.groupArrIndex);\r\n                var newGroupArr = _this._getGroupArr(newGroupByValue);\r\n                var newGroupArrIndex = newGroupArr.length;\r\n                newGroupArr.push(item);\r\n                grouperItemInfo.groupByValue = newGroupByValue;\r\n                grouperItemInfo.groupArrIndex = newGroupArrIndex;\r\n            }),\r\n        };\r\n        Object.defineProperty(item, this._ogmInfoKey, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            value: value,\r\n        });\r\n        groupArr.push(item);\r\n    };\r\n    ObservableGroupMap.prototype._removeItem = function (item) {\r\n        var grouperItemInfo = item[this._ogmInfoKey];\r\n        this._removeFromGroupArr(grouperItemInfo.groupByValue, grouperItemInfo.groupArrIndex);\r\n        grouperItemInfo.reaction();\r\n        delete item[this._ogmInfoKey];\r\n    };\r\n    return ObservableGroupMap;\r\n}(mobx__WEBPACK_IMPORTED_MODULE_0__.ObservableMap));\n\n/**\r\n * @private\r\n */\r\nvar DeepMapEntry = /** @class */ (function () {\r\n    function DeepMapEntry(base, args) {\r\n        this.base = base;\r\n        this.args = args;\r\n        this.closestIdx = 0;\r\n        this.isDisposed = false;\r\n        var current = (this.closest = this.root = base);\r\n        var i = 0;\r\n        for (; i < this.args.length - 1; i++) {\r\n            current = current.get(args[i]);\r\n            if (current)\r\n                this.closest = current;\r\n            else\r\n                break;\r\n        }\r\n        this.closestIdx = i;\r\n    }\r\n    DeepMapEntry.prototype.exists = function () {\r\n        this.assertNotDisposed();\r\n        var l = this.args.length;\r\n        return this.closestIdx >= l - 1 && this.closest.has(this.args[l - 1]);\r\n    };\r\n    DeepMapEntry.prototype.get = function () {\r\n        this.assertNotDisposed();\r\n        if (!this.exists())\r\n            throw new Error(\"Entry doesn't exist\");\r\n        return this.closest.get(this.args[this.args.length - 1]);\r\n    };\r\n    DeepMapEntry.prototype.set = function (value) {\r\n        this.assertNotDisposed();\r\n        var l = this.args.length;\r\n        var current = this.closest;\r\n        // create remaining maps\r\n        for (var i = this.closestIdx; i < l - 1; i++) {\r\n            var m = new Map();\r\n            current.set(this.args[i], m);\r\n            current = m;\r\n        }\r\n        this.closestIdx = l - 1;\r\n        this.closest = current;\r\n        current.set(this.args[l - 1], value);\r\n    };\r\n    DeepMapEntry.prototype.delete = function () {\r\n        this.assertNotDisposed();\r\n        if (!this.exists())\r\n            throw new Error(\"Entry doesn't exist\");\r\n        var l = this.args.length;\r\n        this.closest.delete(this.args[l - 1]);\r\n        // clean up remaining maps if needed (reconstruct stack first)\r\n        var c = this.root;\r\n        var maps = [c];\r\n        for (var i = 0; i < l - 1; i++) {\r\n            c = c.get(this.args[i]);\r\n            maps.push(c);\r\n        }\r\n        for (var i = maps.length - 1; i > 0; i--) {\r\n            if (maps[i].size === 0)\r\n                maps[i - 1].delete(this.args[i - 1]);\r\n        }\r\n        this.isDisposed = true;\r\n    };\r\n    DeepMapEntry.prototype.assertNotDisposed = function () {\r\n        // TODO: once this becomes annoying, we should introduce a reset method to re-run the constructor logic\r\n        if (this.isDisposed)\r\n            throw new Error(\"Concurrent modification exception\");\r\n    };\r\n    return DeepMapEntry;\r\n}());\r\n/**\r\n * @private\r\n */\r\nvar DeepMap = /** @class */ (function () {\r\n    function DeepMap() {\r\n        this.store = new Map();\r\n        this.argsLength = -1;\r\n    }\r\n    DeepMap.prototype.entry = function (args) {\r\n        if (this.argsLength === -1)\r\n            this.argsLength = args.length;\r\n        else if (this.argsLength !== args.length)\r\n            throw new Error(\"DeepMap should be used with functions with a consistent length, expected: \" + this.argsLength + \", got: \" + args.length);\r\n        if (this.last)\r\n            this.last.isDisposed = true;\r\n        return (this.last = new DeepMapEntry(this.store, args));\r\n    };\r\n    return DeepMap;\r\n}());\n\nvar __assign$3 = (undefined && undefined.__assign) || function () {\r\n    __assign$3 = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign$3.apply(this, arguments);\r\n};\r\n/**\r\n * computedFn takes a function with an arbitrary amount of arguments,\r\n * and memoizes the output of the function based on the arguments passed in.\r\n *\r\n * computedFn(fn) returns a function with the very same signature. There is no limit on the amount of arguments\r\n * that is accepted. However, the amount of arguments must be constant and default arguments are not supported.\r\n *\r\n * By default the output of a function call will only be memoized as long as the\r\n * output is being observed.\r\n *\r\n * The function passes into `computedFn` should be pure, not be an action and only be relying on\r\n * observables.\r\n *\r\n * Setting `keepAlive` to `true` will cause the output to be forcefully cached forever.\r\n * Note that this might introduce memory leaks!\r\n *\r\n * @example\r\n * const store = observable({\r\n    a: 1,\r\n    b: 2,\r\n    c: 3,\r\n    m: computedFn(function(x) {\r\n      return this.a * this.b * x\r\n    })\r\n  })\r\n\r\n  const d = autorun(() => {\r\n    // store.m(3) will be cached as long as this autorun is running\r\n    console.log(store.m(3) * store.c)\r\n  })\r\n *\r\n * @param fn\r\n * @param keepAliveOrOptions\r\n */\r\nfunction computedFn(fn, keepAliveOrOptions) {\r\n    if (keepAliveOrOptions === void 0) { keepAliveOrOptions = false; }\r\n    if ((0,mobx__WEBPACK_IMPORTED_MODULE_0__.isAction)(fn))\r\n        throw new Error(\"computedFn shouldn't be used on actions\");\r\n    var memoWarned = false;\r\n    var i = 0;\r\n    var opts = typeof keepAliveOrOptions === \"boolean\"\r\n        ? { keepAlive: keepAliveOrOptions }\r\n        : keepAliveOrOptions;\r\n    var d = new DeepMap();\r\n    return function () {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var entry = d.entry(args);\r\n        // cache hit, return\r\n        if (entry.exists())\r\n            return entry.get().get();\r\n        // if function is invoked, and its a cache miss without reactive, there is no point in caching...\r\n        if (!opts.keepAlive && !(0,mobx__WEBPACK_IMPORTED_MODULE_0__._isComputingDerivation)()) {\r\n            if (!memoWarned) {\r\n                console.warn(\"invoking a computedFn from outside an reactive context won't be memoized, unless keepAlive is set\");\r\n                memoWarned = true;\r\n            }\r\n            return fn.apply(this, args);\r\n        }\r\n        // create new entry\r\n        var c = (0,mobx__WEBPACK_IMPORTED_MODULE_0__.computed)(function () {\r\n            return fn.apply(_this, args);\r\n        }, __assign$3(__assign$3({}, opts), { name: \"computedFn(\" + fn.name + \"#\" + ++i + \")\" }));\r\n        entry.set(c);\r\n        // clean up if no longer observed\r\n        if (!opts.keepAlive)\r\n            (0,mobx__WEBPACK_IMPORTED_MODULE_0__.onBecomeUnobserved)(c, function () {\r\n                d.entry(args).delete();\r\n            });\r\n        // return current val\r\n        return c.get();\r\n    };\r\n}\n\nfunction decorateMethodOrField(decoratorName, decorateFn, target, prop, descriptor) {\r\n    if (descriptor) {\r\n        return decorateMethod(decoratorName, decorateFn, prop, descriptor);\r\n    }\r\n    else {\r\n        decorateField(decorateFn, target, prop);\r\n    }\r\n}\r\nfunction decorateMethod(decoratorName, decorateFn, prop, descriptor) {\r\n    if (descriptor.get !== undefined) {\r\n        return fail(decoratorName + \" cannot be used with getters\");\r\n    }\r\n    // babel / typescript\r\n    // @action method() { }\r\n    if (descriptor.value) {\r\n        // typescript\r\n        return {\r\n            value: decorateFn(prop, descriptor.value),\r\n            enumerable: false,\r\n            configurable: true,\r\n            writable: true,\r\n        };\r\n    }\r\n    // babel only: @action method = () => {}\r\n    var initializer = descriptor.initializer;\r\n    return {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        initializer: function () {\r\n            // N.B: we can't immediately invoke initializer; this would be wrong\r\n            return decorateFn(prop, initializer.call(this));\r\n        },\r\n    };\r\n}\r\nfunction decorateField(decorateFn, target, prop) {\r\n    // Simple property that writes on first invocation to the current instance\r\n    Object.defineProperty(target, prop, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: function () {\r\n            return undefined;\r\n        },\r\n        set: function (value) {\r\n            addHiddenProp(this, prop, decorateFn(prop, value));\r\n        },\r\n    });\r\n}\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar runId = 0;\r\nvar unfinishedIds = new Set();\r\nvar currentlyActiveIds = new Set();\r\nvar inOrderExecution;\r\n{\r\n    var taskOrderPromise_1 = Promise.resolve();\r\n    var queueMicrotaskPolyfill_1;\r\n    if (typeof queueMicrotask !== \"undefined\") {\r\n        // use real implementation if possible in modern browsers/node\r\n        queueMicrotaskPolyfill_1 = queueMicrotask;\r\n    }\r\n    else if (typeof process !== \"undefined\" && process.nextTick) {\r\n        // fallback to node's process.nextTick in node <= 10\r\n        queueMicrotaskPolyfill_1 = function (cb) {\r\n            process.nextTick(cb);\r\n        };\r\n    }\r\n    else {\r\n        // use setTimeout for old browsers\r\n        queueMicrotaskPolyfill_1 = function (cb) {\r\n            setTimeout(cb, 0);\r\n        };\r\n    }\r\n    var idle_1 = function () {\r\n        return new Promise(function (r) {\r\n            queueMicrotaskPolyfill_1(r);\r\n        });\r\n    };\r\n    // we use this trick to force a proper order of execution\r\n    // even for immediately resolved promises\r\n    inOrderExecution = function () {\r\n        taskOrderPromise_1 = taskOrderPromise_1.then(idle_1);\r\n        return taskOrderPromise_1;\r\n    };\r\n}\r\nvar actionAsyncContextStack = [];\r\nfunction task(value) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var ctx, runId, actionName, args, scope, actionRunInfo, step, nextStep, ret, err_1, actionRunInfo_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ctx = actionAsyncContextStack[actionAsyncContextStack.length - 1];\r\n                    if (!ctx) {\r\n                        fail$1(\"'actionAsync' context not present when running 'task'. did you await inside an 'actionAsync' without using 'task(promise)'? did you forget to await the task?\");\r\n                    }\r\n                    runId = ctx.runId, actionName = ctx.actionName, args = ctx.args, scope = ctx.scope, actionRunInfo = ctx.actionRunInfo, step = ctx.step;\r\n                    nextStep = step + 1;\r\n                    actionAsyncContextStack.pop();\r\n                    (0,mobx__WEBPACK_IMPORTED_MODULE_0__._endAction)(actionRunInfo);\r\n                    currentlyActiveIds.delete(runId);\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 4, 6, 7]);\r\n                    return [4 /*yield*/, value];\r\n                case 2:\r\n                    ret = _a.sent();\r\n                    return [4 /*yield*/, inOrderExecution()];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/, ret];\r\n                case 4:\r\n                    err_1 = _a.sent();\r\n                    return [4 /*yield*/, inOrderExecution()];\r\n                case 5:\r\n                    _a.sent();\r\n                    throw err_1;\r\n                case 6:\r\n                    // only restart if it not a dangling promise (the action is not yet finished)\r\n                    if (unfinishedIds.has(runId)) {\r\n                        actionRunInfo_1 = (0,mobx__WEBPACK_IMPORTED_MODULE_0__._startAction)(getActionAsyncName(actionName, runId, nextStep), this, args);\r\n                        actionAsyncContextStack.push({\r\n                            runId: runId,\r\n                            step: nextStep,\r\n                            actionRunInfo: actionRunInfo_1,\r\n                            actionName: actionName,\r\n                            args: args,\r\n                            scope: scope,\r\n                        });\r\n                        currentlyActiveIds.add(runId);\r\n                    }\r\n                    return [7 /*endfinally*/];\r\n                case 7: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n// base\r\n/**\r\n * Alternative syntax for async actions, similar to `flow` but more compatible with\r\n * Typescript typings. Not to be confused with `asyncAction`, which is deprecated.\r\n *\r\n * `actionAsync` can be used either as a decorator or as a function.\r\n * It takes an async function that internally must use `await task(promise)` rather than\r\n * the standard `await promise`.\r\n *\r\n * When using the mobx devTools, an asyncAction will emit `action` events with names like:\r\n * * `\"fetchUsers - runid 6 - step 0\"`\r\n * * `\"fetchUsers - runid 6 - step 1\"`\r\n * * `\"fetchUsers - runid 6 - step 2\"`\r\n *\r\n * The `runId` represents the action instance. In other words, if `fetchUsers` is invoked\r\n * multiple times concurrently, the events with the same `runid` belong together.\r\n * The `step` number indicates the code block that is now being executed.\r\n *\r\n * @example\r\n * import {actionAsync, task} from \"mobx-utils\"\r\n *\r\n * let users = []\r\n *\r\n * const fetchUsers = actionAsync(\"fetchUsers\", async (url) => {\r\n *   const start = Date.now()\r\n *   // note the use of task when awaiting!\r\n *   const data = await task(window.fetch(url))\r\n *   users = await task(data.json())\r\n *   return start - Date.now()\r\n * })\r\n *\r\n * const time = await fetchUsers(\"http://users.com\")\r\n * console.log(\"Got users\", users, \"in \", time, \"ms\")\r\n *\r\n * @example\r\n * import {actionAsync, task} from \"mobx-utils\"\r\n *\r\n * mobx.configure({ enforceActions: \"observed\" }) // don't allow state modifications outside actions\r\n *\r\n * class Store {\r\n *   \\@observable githubProjects = []\r\n *   \\@observable = \"pending\" // \"pending\" / \"done\" / \"error\"\r\n *\r\n *   \\@actionAsync\r\n *   async fetchProjects() {\r\n *     this.githubProjects = []\r\n *     this.state = \"pending\"\r\n *     try {\r\n *       // note the use of task when awaiting!\r\n *       const projects = await task(fetchGithubProjectsSomehow())\r\n *       const filteredProjects = somePreprocessing(projects)\r\n *       // the asynchronous blocks will automatically be wrapped actions\r\n *       this.state = \"done\"\r\n *       this.githubProjects = filteredProjects\r\n *     } catch (error) {\r\n *        this.state = \"error\"\r\n *     }\r\n *   }\r\n * }\r\n */\r\nfunction actionAsync(arg1, arg2, arg3) {\r\n    // decorator\r\n    if (typeof arguments[1] === \"string\") {\r\n        return decorateMethodOrField(\"@actionAsync\", function (prop, v) {\r\n            return actionAsyncFn(prop, v);\r\n        }, arg1, arg2, arg3);\r\n    }\r\n    // direct invocation\r\n    var actionName = typeof arg1 === \"string\" ? arg1 : arg1.name || \"<unnamed action>\";\r\n    var fn = typeof arg1 === \"function\" ? arg1 : arg2;\r\n    return actionAsyncFn(actionName, fn);\r\n}\r\nfunction actionAsyncFn(actionName, fn) {\r\n    if (!mobx__WEBPACK_IMPORTED_MODULE_0__._startAction || !mobx__WEBPACK_IMPORTED_MODULE_0__._endAction) {\r\n        fail$1(\"'actionAsync' requires mobx >=5.13.1 or >=4.13.1\");\r\n    }\r\n    invariant(typeof fn === \"function\", \"'asyncAction' expects a function\");\r\n    if (typeof actionName !== \"string\" || !actionName)\r\n        fail$1(\"actions should have valid names, got: '\" + actionName + \"'\");\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var nextRunId, actionRunInfo, finish, promise, ret, err_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        nextRunId = runId++;\r\n                        unfinishedIds.add(nextRunId);\r\n                        actionRunInfo = (0,mobx__WEBPACK_IMPORTED_MODULE_0__._startAction)(getActionAsyncName(actionName, nextRunId, 0), this, args);\r\n                        actionAsyncContextStack.push({\r\n                            runId: nextRunId,\r\n                            step: 0,\r\n                            actionRunInfo: actionRunInfo,\r\n                            actionName: actionName,\r\n                            args: args,\r\n                            scope: this,\r\n                        });\r\n                        currentlyActiveIds.add(nextRunId);\r\n                        finish = function (err) {\r\n                            unfinishedIds.delete(nextRunId);\r\n                            var ctx = actionAsyncContextStack.pop();\r\n                            if (!ctx || ctx.runId !== nextRunId) {\r\n                                // push it back if invalid\r\n                                if (ctx) {\r\n                                    actionAsyncContextStack.push(ctx);\r\n                                }\r\n                                var msg = \"invalid 'actionAsync' context when finishing action '\" + actionName + \"'.\";\r\n                                if (!ctx) {\r\n                                    msg += \" no action context could be found instead.\";\r\n                                }\r\n                                else {\r\n                                    msg += \" an action context for '\" + ctx.actionName + \"' was found instead.\";\r\n                                }\r\n                                msg +=\r\n                                    \" did you await inside an 'actionAsync' without using 'task(promise)'? did you forget to await the task?\";\r\n                                fail$1(msg);\r\n                            }\r\n                            ctx.actionRunInfo.error = err;\r\n                            (0,mobx__WEBPACK_IMPORTED_MODULE_0__._endAction)(ctx.actionRunInfo);\r\n                            currentlyActiveIds.delete(nextRunId);\r\n                            if (err) {\r\n                                throw err;\r\n                            }\r\n                        };\r\n                        try {\r\n                            promise = fn.apply(this, args);\r\n                        }\r\n                        catch (err) {\r\n                            finish(err);\r\n                        }\r\n                        // are we done sync? (no task run)\r\n                        if (currentlyActiveIds.has(nextRunId)) {\r\n                            finish(undefined);\r\n                            return [2 /*return*/, promise];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, promise];\r\n                    case 2:\r\n                        ret = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        err_2 = _a.sent();\r\n                        finish(err_2);\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        finish(undefined);\r\n                        return [2 /*return*/, ret];\r\n                }\r\n            });\r\n        });\r\n    };\r\n}\r\nfunction getActionAsyncName(actionName, runId, step) {\r\n    return actionName + \" - runid \" + runId + \" - step \" + step;\r\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/mobx-utils/mobx-utils.module.js\n");

/***/ }),

/***/ "../../../node_modules/moment/moment.js":
/*!**********************************************!*\
  !*** ../../../node_modules/moment/moment.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n//! moment.js\n//! version : 2.29.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n     true ? module.exports = factory() :\n    0\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key;\n                for (i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i;\n            for (i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (\n                    matched,\n                    p1,\n                    p2,\n                    p3,\n                    p4\n                ) {\n                    return p1 || p2 || p3 || p4;\n                })\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(\n            '_'\n        ),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (\n        input,\n        week,\n        config,\n        token\n    ) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            \"object\" !== 'undefined' &&\n            module &&\n            module.exports\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = undefined;\n                Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'undefined'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (\n        input,\n        array,\n        config,\n        token\n    ) {\n        var era = config._locale.erasParse(input, token, config._strict);\n        if (era) {\n            getParsingFlags(config).era = era;\n        } else {\n            getParsingFlags(config).invalidEra = input;\n        }\n    });\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (\n        input,\n        week,\n        config,\n        token\n    ) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.1';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/moment/moment.js\n");

/***/ }),

/***/ "../../../node_modules/object-assign/index.js":
/*!****************************************************!*\
  !*** ../../../node_modules/object-assign/index.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvdHJhZGVyLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzPzNlMTMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/object-assign/index.js\n");

/***/ }),

/***/ "../../../node_modules/popmotion-pose/dist/popmotion-pose.es.js":
/*!**********************************************************************!*\
  !*** ../../../node_modules/popmotion-pose/dist/popmotion-pose.es.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! popmotion */ \"../../../node_modules/popmotion/dist/popmotion.es.js\");\n/* harmony import */ var _popmotion_easing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @popmotion/easing */ \"../../../node_modules/@popmotion/easing/dist/easing.es.js\");\n/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! style-value-types */ \"../../../node_modules/style-value-types/dist/style-value-types.es.js\");\n/* harmony import */ var pose_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! pose-core */ \"../../../node_modules/pose-core/dist/pose-core.es.js\");\n/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! hey-listen */ \"../../../node_modules/hey-listen/dist/hey-listen.es.js\");\n\n\n\n\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar __assign = function () {\n    __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\n\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\n\nvar measureWithoutTransform = function (element) {\n    var transform$$1 = element.style.transform;\n    element.style.transform = '';\n    var bbox = element.getBoundingClientRect();\n    element.style.transform = transform$$1;\n    return bbox;\n};\nvar resolveProp = function (target, props) {\n    return typeof target === 'function' ? target(props) : target;\n};\n\nvar interpolate = popmotion__WEBPACK_IMPORTED_MODULE_0__.transform.interpolate;\nvar singleAxisPointer = function (axis) {\n    return function (from) {\n        var _a;\n        return (0,popmotion__WEBPACK_IMPORTED_MODULE_0__.pointer)((_a = {}, _a[axis] = typeof from === 'string' ? parseFloat(from) : from, _a)).pipe(function (v) {\n            return v[axis];\n        });\n    };\n};\nvar pointerX = /*#__PURE__*/singleAxisPointer('x');\nvar pointerY = /*#__PURE__*/singleAxisPointer('y');\nvar createPointer = function (axisPointerCreator, min, max, measurement) {\n    return function (transitionProps) {\n        var from = transitionProps.from,\n            type = transitionProps.type,\n            dimensions = transitionProps.dimensions,\n            dragBounds = transitionProps.dragBounds;\n        var axisPointer = axisPointerCreator(dimensions.measurementAsPixels(measurement, from, type));\n        var transformQueue = [];\n        if (dragBounds) {\n            var resolvedDragBounds_1 = resolveProp(dragBounds, transitionProps);\n            if (resolvedDragBounds_1[min] !== undefined) {\n                transformQueue.push(function (v) {\n                    return Math.max(v, dimensions.measurementAsPixels(measurement, resolvedDragBounds_1[min], type));\n                });\n            }\n            if (resolvedDragBounds_1[max] !== undefined) {\n                transformQueue.push(function (v) {\n                    return Math.min(v, dimensions.measurementAsPixels(measurement, resolvedDragBounds_1[max], type));\n                });\n            }\n        }\n        if (type === style_value_types__WEBPACK_IMPORTED_MODULE_2__.percent) {\n            transformQueue.push(interpolate([0, dimensions.get(measurement)], [0, 100], { clamp: false }), function (v) {\n                return v + '%';\n            });\n        }\n        return transformQueue.length ? axisPointer.pipe.apply(axisPointer, transformQueue) : axisPointer;\n    };\n};\nvar just = function (from) {\n    return (0,popmotion__WEBPACK_IMPORTED_MODULE_0__.action)(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        update(from);\n        complete();\n    });\n};\nvar underDampedSpring = function (_a) {\n    var from = _a.from,\n        velocity = _a.velocity,\n        to = _a.to;\n    return (0,popmotion__WEBPACK_IMPORTED_MODULE_0__.spring)({\n        from: from,\n        to: to,\n        velocity: velocity,\n        stiffness: 500,\n        damping: 25,\n        restDelta: 0.5,\n        restSpeed: 10\n    });\n};\nvar overDampedSpring = function (_a) {\n    var from = _a.from,\n        velocity = _a.velocity,\n        to = _a.to;\n    return (0,popmotion__WEBPACK_IMPORTED_MODULE_0__.spring)({ from: from, to: to, velocity: velocity, stiffness: 700, damping: to === 0 ? 100 : 35 });\n};\nvar linearTween = function (_a) {\n    var from = _a.from,\n        to = _a.to;\n    return (0,popmotion__WEBPACK_IMPORTED_MODULE_0__.tween)({ from: from, to: to, ease: _popmotion_easing__WEBPACK_IMPORTED_MODULE_1__.linear });\n};\nvar intelligentTransition = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: overDampedSpring,\n    scaleY: overDampedSpring,\n    scale: overDampedSpring,\n    opacity: linearTween,\n    default: popmotion__WEBPACK_IMPORTED_MODULE_0__.tween\n};\nvar dragAction = /*#__PURE__*/__assign( /*#__PURE__*/__assign({}, intelligentTransition), { x: /*#__PURE__*/createPointer(pointerX, 'left', 'right', BoundingBoxDimension.width), y: /*#__PURE__*/createPointer(pointerY, 'top', 'bottom', BoundingBoxDimension.height) });\nvar justAxis = function (_a) {\n    var from = _a.from;\n    return just(from);\n};\nvar intelligentDragEnd = /*#__PURE__*/__assign( /*#__PURE__*/__assign({}, intelligentTransition), { x: justAxis, y: justAxis });\nvar defaultTransitions = /*#__PURE__*/new Map([['default', intelligentTransition], ['drag', dragAction], ['dragEnd', intelligentDragEnd]]);\n\nvar animationLookup = {\n    tween: popmotion__WEBPACK_IMPORTED_MODULE_0__.tween,\n    spring: popmotion__WEBPACK_IMPORTED_MODULE_0__.spring,\n    decay: popmotion__WEBPACK_IMPORTED_MODULE_0__.decay,\n    keyframes: popmotion__WEBPACK_IMPORTED_MODULE_0__.keyframes,\n    physics: popmotion__WEBPACK_IMPORTED_MODULE_0__.physics\n};\nvar easingLookup = {\n    linear: _popmotion_easing__WEBPACK_IMPORTED_MODULE_1__.linear,\n    easeIn: _popmotion_easing__WEBPACK_IMPORTED_MODULE_1__.easeIn,\n    easeOut: _popmotion_easing__WEBPACK_IMPORTED_MODULE_1__.easeOut,\n    easeInOut: _popmotion_easing__WEBPACK_IMPORTED_MODULE_1__.easeInOut,\n    circIn: _popmotion_easing__WEBPACK_IMPORTED_MODULE_1__.circIn,\n    circOut: _popmotion_easing__WEBPACK_IMPORTED_MODULE_1__.circOut,\n    circInOut: _popmotion_easing__WEBPACK_IMPORTED_MODULE_1__.circInOut,\n    backIn: _popmotion_easing__WEBPACK_IMPORTED_MODULE_1__.backIn,\n    backOut: _popmotion_easing__WEBPACK_IMPORTED_MODULE_1__.backOut,\n    backInOut: _popmotion_easing__WEBPACK_IMPORTED_MODULE_1__.backInOut,\n    anticipate: _popmotion_easing__WEBPACK_IMPORTED_MODULE_1__.anticipate\n};\n\nvar auto = {\n    test: function (v) {\n        return v === 'auto';\n    },\n    parse: function (v) {\n        return v;\n    }\n};\nvar valueTypeTests = [style_value_types__WEBPACK_IMPORTED_MODULE_2__.number, style_value_types__WEBPACK_IMPORTED_MODULE_2__.degrees, style_value_types__WEBPACK_IMPORTED_MODULE_2__.percent, style_value_types__WEBPACK_IMPORTED_MODULE_2__.px, style_value_types__WEBPACK_IMPORTED_MODULE_2__.vw, style_value_types__WEBPACK_IMPORTED_MODULE_2__.vh, auto];\nvar testValueType = function (v) {\n    return function (type) {\n        return type.test(v);\n    };\n};\nvar getValueType = function (v) {\n    return valueTypeTests.find(testValueType(v));\n};\n\nvar createPassiveValue = function (init, parent, transform$$1) {\n    var raw = (0,popmotion__WEBPACK_IMPORTED_MODULE_0__.value)(transform$$1(init));\n    parent.raw.subscribe(function (v) {\n        return raw.update(transform$$1(v));\n    });\n    return { raw: raw };\n};\nvar createValue = function (init) {\n    var type = getValueType(init);\n    var raw = (0,popmotion__WEBPACK_IMPORTED_MODULE_0__.value)(init);\n    return { raw: raw, type: type };\n};\nvar addActionDelay = function (delay$$1, transition) {\n    if (delay$$1 === void 0) {\n        delay$$1 = 0;\n    }\n    return (0,popmotion__WEBPACK_IMPORTED_MODULE_0__.chain)((0,popmotion__WEBPACK_IMPORTED_MODULE_0__.delay)(delay$$1), transition);\n};\nvar isCubicBezierArgs = function (args) {\n    return typeof args[0] === 'number';\n};\nvar getAction = function (v, _a, _b) {\n    var from = _b.from,\n        to = _b.to,\n        velocity = _b.velocity;\n    var _c = _a.type,\n        type = _c === void 0 ? 'tween' : _c,\n        definedEase = _a.ease,\n        def = __rest(_a, [\"type\", \"ease\"]);\n    (0,hey_listen__WEBPACK_IMPORTED_MODULE_4__.invariant)(animationLookup[type] !== undefined, \"Invalid transition type '\" + type + \"'. Valid transition types are: tween, spring, decay, physics and keyframes.\");\n    var ease;\n    if (type === 'tween') {\n        if (typeof definedEase !== 'function') {\n            if (typeof definedEase === 'string') {\n                (0,hey_listen__WEBPACK_IMPORTED_MODULE_4__.invariant)(easingLookup[definedEase] !== undefined, \"Invalid easing type '\" + definedEase + \"'. popmotion.io/pose/api/config\");\n                ease = easingLookup[definedEase];\n            } else if (Array.isArray(definedEase) && isCubicBezierArgs(definedEase)) {\n                (0,hey_listen__WEBPACK_IMPORTED_MODULE_4__.invariant)(definedEase.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\n                var x1 = definedEase[0],\n                    y1 = definedEase[1],\n                    x2 = definedEase[2],\n                    y2 = definedEase[3];\n                ease = (0,_popmotion_easing__WEBPACK_IMPORTED_MODULE_1__.cubicBezier)(x1, y1, x2, y2);\n            }\n        }\n    }\n    ease = ease || definedEase;\n    var baseProps = type !== 'keyframes' ? {\n        from: from,\n        to: to,\n        velocity: velocity,\n        ease: ease\n    } : { ease: ease };\n    return animationLookup[type](__assign(__assign({}, baseProps), def));\n};\nvar isAction = function (action$$1) {\n    return typeof action$$1.start !== 'undefined';\n};\nvar pose = function (_a) {\n    var transformPose = _a.transformPose,\n        addListenerToValue = _a.addListenerToValue,\n        extendAPI = _a.extendAPI,\n        readValueFromSource = _a.readValueFromSource,\n        posePriority = _a.posePriority,\n        setValueNative = _a.setValueNative;\n    return (0,pose_core__WEBPACK_IMPORTED_MODULE_3__.default)({\n        bindOnChange: function (values, onChange) {\n            return function (key) {\n                if (!values.has(key)) return;\n                var raw = values.get(key).raw;\n                raw.subscribe(onChange[key]);\n            };\n        },\n        readValue: function (_a) {\n            var raw = _a.raw;\n            return raw.get();\n        },\n        setValue: function (_a, to) {\n            var raw = _a.raw;\n            return raw.update(to);\n        },\n        createValue: function (init, key, _a, _b) {\n            var elementStyler = _a.elementStyler;\n            var _c = _b === void 0 ? {} : _b,\n                passiveParent = _c.passiveParent,\n                passiveProps = _c.passiveProps;\n            var val = passiveParent ? createPassiveValue(init, passiveParent, passiveProps) : createValue(init);\n            val.raw.subscribe(addListenerToValue(key, elementStyler));\n            return val;\n        },\n        convertValue: function (raw, key, _a) {\n            var elementStyler = _a.elementStyler;\n            raw.subscribe(addListenerToValue(key, elementStyler));\n            return {\n                raw: raw,\n                type: getValueType(raw.get())\n            };\n        },\n        getTransitionProps: function (_a, to) {\n            var raw = _a.raw,\n                type = _a.type;\n            return {\n                from: raw.get(),\n                velocity: raw.getVelocity(),\n                to: to,\n                type: type\n            };\n        },\n        resolveTarget: function (_, to) {\n            return to;\n        },\n        selectValueToRead: function (_a) {\n            var raw = _a.raw;\n            return raw;\n        },\n        startAction: function (_a, action$$1, complete) {\n            var raw = _a.raw;\n            var reaction = {\n                update: function (v) {\n                    return raw.update(v);\n                },\n                complete: complete\n            };\n            return action$$1.start(reaction);\n        },\n        stopAction: function (action$$1) {\n            return action$$1.stop();\n        },\n        getInstantTransition: function (_, _a) {\n            var to = _a.to;\n            return just(to);\n        },\n        convertTransitionDefinition: function (val, def, props) {\n            if (isAction(def)) return def;\n            var delay$$1 = def.delay,\n                min = def.min,\n                max = def.max,\n                round = def.round,\n                remainingDef = __rest(def, [\"delay\", \"min\", \"max\", \"round\"]);\n            var action$$1 = getAction(val, remainingDef, props);\n            var outputPipe = [];\n            if (delay$$1) action$$1 = addActionDelay(delay$$1, action$$1);\n            if (min !== undefined) outputPipe.push(function (v) {\n                return Math.max(v, min);\n            });\n            if (max !== undefined) outputPipe.push(function (v) {\n                return Math.min(v, max);\n            });\n            if (round) outputPipe.push(Math.round);\n            return outputPipe.length ? action$$1.pipe.apply(action$$1, outputPipe) : action$$1;\n        },\n        setValueNative: setValueNative,\n        addActionDelay: addActionDelay,\n        defaultTransitions: defaultTransitions,\n        transformPose: transformPose,\n        readValueFromSource: readValueFromSource,\n        posePriority: posePriority,\n        extendAPI: extendAPI\n    });\n};\n\nvar createDimensions = function (element) {\n    var hasMeasured = false;\n    var current = {\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0\n    };\n    return {\n        get: function (measurement) {\n            return measurement ? current[measurement] : current;\n        },\n        measure: function () {\n            current = element.getBoundingClientRect();\n            hasMeasured = true;\n            return current;\n        },\n        measurementAsPixels: function (measurement, value$$1, type) {\n            return type === style_value_types__WEBPACK_IMPORTED_MODULE_2__.percent ? (typeof value$$1 === 'string' ? parseFloat(value$$1) : value$$1) / 100 * current[measurement] : value$$1;\n        },\n        has: function () {\n            return hasMeasured;\n        }\n    };\n};\n\nvar makeUIEventApplicator = function (_a) {\n    var startEvents = _a.startEvents,\n        endEvents = _a.endEvents,\n        startPose = _a.startPose,\n        endPose = _a.endPose,\n        startCallback = _a.startCallback,\n        endCallback = _a.endCallback,\n        useDocumentToEnd = _a.useDocumentToEnd,\n        preventScroll = _a.preventScroll;\n    return function (element, activeActions, poser, config) {\n        var startListener = startPose + 'Start';\n        var endListener = startPose + 'End';\n        var moveListener = startPose + 'Move';\n        if (preventScroll) {\n            var touchMoveListener = (0,popmotion__WEBPACK_IMPORTED_MODULE_0__.listen)(element, 'touchmove', {\n                passive: false\n            }).start(function (e) {\n                e.preventDefault();\n            });\n            activeActions.set(moveListener, touchMoveListener);\n        }\n        var eventStartListener = (0,popmotion__WEBPACK_IMPORTED_MODULE_0__.listen)(element, startEvents).start(function (startEvent) {\n            poser.unset(endPose);\n            poser.set(startPose);\n            if (startCallback && config[startCallback]) config[startCallback](startEvent);\n            var eventEndListener = (0,popmotion__WEBPACK_IMPORTED_MODULE_0__.listen)(useDocumentToEnd ? document.documentElement : element, endEvents + (useDocumentToEnd ? ' mouseenter' : '')).start(function (endEvent) {\n                if (useDocumentToEnd && endEvent.type === 'mouseenter' && endEvent.buttons === 1) {\n                    return;\n                }\n                activeActions.get(endListener).stop();\n                poser.unset(startPose);\n                poser.set(endPose);\n                if (endCallback && config[endCallback]) config[endCallback](endEvent);\n            });\n            activeActions.set(endListener, eventEndListener);\n        });\n        activeActions.set(startListener, eventStartListener);\n    };\n};\nvar events = {\n    draggable: /*#__PURE__*/makeUIEventApplicator({\n        startEvents: 'mousedown touchstart',\n        endEvents: 'mouseup touchend',\n        startPose: 'drag',\n        endPose: 'dragEnd',\n        startCallback: 'onDragStart',\n        endCallback: 'onDragEnd',\n        useDocumentToEnd: true,\n        preventScroll: true\n    }),\n    hoverable: /*#__PURE__*/makeUIEventApplicator({\n        startEvents: 'mouseenter',\n        endEvents: 'mouseleave',\n        startPose: 'hover',\n        endPose: 'hoverEnd'\n    }),\n    focusable: /*#__PURE__*/makeUIEventApplicator({\n        startEvents: 'focus',\n        endEvents: 'blur',\n        startPose: 'focus',\n        endPose: 'blur'\n    }),\n    pressable: /*#__PURE__*/makeUIEventApplicator({\n        startEvents: 'mousedown touchstart',\n        endEvents: 'mouseup touchend',\n        startPose: 'press',\n        endPose: 'pressEnd',\n        startCallback: 'onPressStart',\n        endCallback: 'onPressEnd',\n        useDocumentToEnd: true\n    })\n};\nvar eventKeys = /*#__PURE__*/Object.keys(events);\nvar appendEventListeners = function (element, activeActions, poser, _a) {\n    var props = _a.props;\n    return eventKeys.forEach(function (key) {\n        if (props[key]) events[key](element, activeActions, poser, props);\n    });\n};\n\nvar ORIGIN_START = 0;\nvar ORIGIN_CENTER = '50%';\nvar ORIGIN_END = '100%';\nvar findCenter = function (_a) {\n    var top = _a.top,\n        right = _a.right,\n        bottom = _a.bottom,\n        left = _a.left;\n    return {\n        x: (left + right) / 2,\n        y: (top + bottom) / 2\n    };\n};\nvar positionalProps = ['width', 'height', 'top', 'left', 'bottom', 'right'];\nvar positionalPropsDict = /*#__PURE__*/new Set(positionalProps);\nvar checkPositionalProp = function (key) {\n    return positionalPropsDict.has(key);\n};\nvar hasPositionalProps = function (pose) {\n    return Object.keys(pose).some(checkPositionalProp);\n};\nvar isFlipPose = function (flip, key, state) {\n    return state.props.element instanceof HTMLElement && (flip === true || key === 'flip');\n};\nvar setValue = function (_a, key, to) {\n    var values = _a.values,\n        props = _a.props;\n    if (values.has(key)) {\n        var raw = values.get(key).raw;\n        raw.update(to);\n        raw.update(to);\n    } else {\n        values.set(key, {\n            raw: (0,popmotion__WEBPACK_IMPORTED_MODULE_0__.value)(to, function (v) {\n                return props.elementStyler.set(key, v);\n            })\n        });\n    }\n};\nvar explicitlyFlipPose = function (state, nextPose) {\n    var _a = state.props,\n        dimensions = _a.dimensions,\n        elementStyler = _a.elementStyler;\n    dimensions.measure();\n    var width = nextPose.width,\n        height = nextPose.height,\n        top = nextPose.top,\n        left = nextPose.left,\n        bottom = nextPose.bottom,\n        right = nextPose.right,\n        position = nextPose.position,\n        remainingPose = __rest(nextPose, [\"width\", \"height\", \"top\", \"left\", \"bottom\", \"right\", \"position\"]);\n    var propsToSet = positionalProps.concat('position').reduce(function (acc, key) {\n        if (nextPose[key] !== undefined) {\n            acc[key] = resolveProp(nextPose[key], state.props);\n        }\n        return acc;\n    }, {});\n    elementStyler.set(propsToSet).render();\n    return implicitlyFlipPose(state, remainingPose);\n};\nvar implicitlyFlipPose = function (state, nextPose) {\n    var _a = state.props,\n        dimensions = _a.dimensions,\n        element = _a.element,\n        elementStyler = _a.elementStyler;\n    if (!dimensions.has()) return {};\n    var prev = dimensions.get();\n    var next = measureWithoutTransform(element);\n    var originX = prev.left === next.left ? ORIGIN_START : prev.right === next.right ? ORIGIN_END : ORIGIN_CENTER;\n    var originY = prev.top === next.top ? ORIGIN_START : prev.bottom === next.bottom ? ORIGIN_END : ORIGIN_CENTER;\n    elementStyler.set({ originX: originX, originY: originY });\n    if (prev.width !== next.width) {\n        setValue(state, 'scaleX', prev.width / next.width);\n        nextPose.scaleX = 1;\n    }\n    if (prev.height !== next.height) {\n        setValue(state, 'scaleY', prev.height / next.height);\n        nextPose.scaleY = 1;\n    }\n    var prevCenter = findCenter(prev);\n    var nextCenter = findCenter(next);\n    if (originX === ORIGIN_CENTER) {\n        setValue(state, 'x', prevCenter.x - nextCenter.x);\n        nextPose.x = 0;\n    }\n    if (originY === ORIGIN_CENTER) {\n        setValue(state, 'y', prevCenter.y - nextCenter.y);\n        nextPose.y = 0;\n    }\n    elementStyler.render();\n    return nextPose;\n};\nvar flipPose = function (props, nextPose) {\n    return hasPositionalProps(nextPose) ? explicitlyFlipPose(props, nextPose) : implicitlyFlipPose(props, nextPose);\n};\n\nvar getPosFromMatrix = function (matrix, pos) {\n    return parseFloat(matrix.split(', ')[pos]);\n};\nvar getTranslateFromMatrix = function (pos2, pos3) {\n    return function (element, bbox, _a) {\n        var transform$$1 = _a.transform;\n        if (!transform$$1 || transform$$1 === 'none') return 0;\n        var matrix3d = transform$$1.match(/^matrix3d\\((.+)\\)$/);\n        if (matrix3d) return getPosFromMatrix(matrix3d[1], pos3);\n        return getPosFromMatrix(transform$$1.match(/^matrix\\((.+)\\)$/)[1], pos2);\n    };\n};\nvar positionalValues = {\n    width: function (element, _a) {\n        var width = _a.width;\n        return width;\n    },\n    height: function (element, _a) {\n        var height = _a.height;\n        return height;\n    },\n    top: function (element, bbox, _a) {\n        var top = _a.top;\n        return parseFloat(top);\n    },\n    left: function (element, bbox, _a) {\n        var left = _a.left;\n        return parseFloat(left);\n    },\n    bottom: function (element, _a, _b) {\n        var height = _a.height;\n        var top = _b.top;\n        return parseFloat(top) + height;\n    },\n    right: function (element, _a, _b) {\n        var width = _a.width;\n        var left = _b.left;\n        return parseFloat(left) + width;\n    },\n    x: /*#__PURE__*/getTranslateFromMatrix(4, 13),\n    y: /*#__PURE__*/getTranslateFromMatrix(5, 14)\n};\nvar isPositionalKey = function (v) {\n    return positionalValues[v] !== undefined;\n};\nvar isPositional = function (pose) {\n    return Object.keys(pose).some(isPositionalKey);\n};\nvar convertPositionalUnits = function (state, nextPose) {\n    var values = state.values,\n        props = state.props;\n    var element = props.element,\n        elementStyler = props.elementStyler;\n    var positionalPoseKeys = Object.keys(nextPose).filter(isPositionalKey);\n    var changedPositionalKeys = [];\n    var elementComputedStyle = getComputedStyle(element);\n    var applyAtEndHasBeenCopied = false;\n    positionalPoseKeys.forEach(function (key) {\n        var value$$1 = values.get(key);\n        var fromValueType = getValueType(value$$1.raw.get());\n        var to = resolveProp(nextPose[key], props);\n        var toValueType = getValueType(to);\n        if (fromValueType !== toValueType) {\n            changedPositionalKeys.push(key);\n            if (!applyAtEndHasBeenCopied) {\n                applyAtEndHasBeenCopied = true;\n                nextPose.applyAtEnd = nextPose.applyAtEnd ? __assign({}, nextPose.applyAtEnd) : {};\n            }\n            nextPose.applyAtEnd[key] = nextPose.applyAtEnd[key] || nextPose[key];\n            setValue(state, key, to);\n        }\n    });\n    if (!changedPositionalKeys.length) return nextPose;\n    var originBbox = element.getBoundingClientRect();\n    var top = elementComputedStyle.top,\n        left = elementComputedStyle.left,\n        bottom = elementComputedStyle.bottom,\n        right = elementComputedStyle.right,\n        transform$$1 = elementComputedStyle.transform;\n    var originComputedStyle = { top: top, left: left, bottom: bottom, right: right, transform: transform$$1 };\n    elementStyler.render();\n    var targetBbox = element.getBoundingClientRect();\n    changedPositionalKeys.forEach(function (key) {\n        setValue(state, key, positionalValues[key](element, originBbox, originComputedStyle));\n        nextPose[key] = positionalValues[key](element, targetBbox, elementComputedStyle);\n    });\n    elementStyler.render();\n    return nextPose;\n};\n\nvar getCurrent = function (prop) {\n    return function (_a) {\n        var elementStyler = _a.elementStyler;\n        return elementStyler.get(prop);\n    };\n};\nvar dragPoses = function (draggable) {\n    var drag = {\n        preTransition: function (_a) {\n            var dimensions = _a.dimensions;\n            return dimensions.measure();\n        }\n    };\n    var dragEnd = {};\n    if (draggable === true || draggable === 'x') {\n        drag.x = dragEnd.x = getCurrent('x');\n    }\n    if (draggable === true || draggable === 'y') {\n        drag.y = dragEnd.y = getCurrent('y');\n    }\n    return { drag: drag, dragEnd: dragEnd };\n};\nvar createPoseConfig = function (element, _a) {\n    var onDragStart = _a.onDragStart,\n        onDragEnd = _a.onDragEnd,\n        onPressStart = _a.onPressStart,\n        onPressEnd = _a.onPressEnd,\n        draggable = _a.draggable,\n        hoverable = _a.hoverable,\n        focusable = _a.focusable,\n        pressable = _a.pressable,\n        dragBounds = _a.dragBounds,\n        config = __rest(_a, [\"onDragStart\", \"onDragEnd\", \"onPressStart\", \"onPressEnd\", \"draggable\", \"hoverable\", \"focusable\", \"pressable\", \"dragBounds\"]);\n    var poseConfig = __assign(__assign({ flip: {} }, config), { props: __assign(__assign({}, config.props), { onDragStart: onDragStart,\n            onDragEnd: onDragEnd,\n            onPressStart: onPressStart,\n            onPressEnd: onPressEnd,\n            dragBounds: dragBounds,\n            draggable: draggable,\n            hoverable: hoverable,\n            focusable: focusable,\n            pressable: pressable,\n            element: element, elementStyler: (0,popmotion__WEBPACK_IMPORTED_MODULE_0__.styler)(element, { preparseOutput: false }), dimensions: createDimensions(element) }) });\n    if (draggable) {\n        var _b = dragPoses(draggable),\n            drag = _b.drag,\n            dragEnd = _b.dragEnd;\n        poseConfig.drag = __assign(__assign({}, drag), poseConfig.drag);\n        poseConfig.dragEnd = __assign(__assign({}, dragEnd), poseConfig.dragEnd);\n    }\n    return poseConfig;\n};\nvar domPose = /*#__PURE__*/pose({\n    posePriority: ['drag', 'press', 'focus', 'hover'],\n    transformPose: function (_a, name, state) {\n        var flip = _a.flip,\n            pose$$1 = __rest(_a, [\"flip\"]);\n        if (isFlipPose(flip, name, state)) {\n            return flipPose(state, pose$$1);\n        } else if (isPositional(pose$$1)) {\n            return convertPositionalUnits(state, pose$$1);\n        }\n        return pose$$1;\n    },\n    forceRender: function (_a) {\n        var elementStyler = _a.elementStyler;\n        elementStyler.render();\n    },\n    addListenerToValue: function (key, elementStyler) {\n        return function (v) {\n            return elementStyler.set(key, v);\n        };\n    },\n    readValueFromSource: function (key, _a) {\n        var elementStyler = _a.elementStyler,\n            dragBounds = _a.dragBounds;\n        var value$$1 = elementStyler.get(key);\n        if (dragBounds && (key === 'x' || key === 'y')) {\n            var bound = key === 'x' ? dragBounds.left || dragBounds.right : dragBounds.top || dragBounds.bottom;\n            if (bound) {\n                var boundType = getValueType(bound);\n                value$$1 = boundType.transform(value$$1);\n            }\n        }\n        return isNaN(value$$1) ? value$$1 : parseFloat(value$$1);\n    },\n    setValueNative: function (key, to, _a) {\n        var elementStyler = _a.elementStyler;\n        return elementStyler.set(key, to);\n    },\n    extendAPI: function (api, _a, config) {\n        var props = _a.props,\n            activeActions = _a.activeActions;\n        var measure = props.dimensions.measure;\n        var poserApi = __assign(__assign({}, api), { addChild: function (element, childConfig) {\n                return api._addChild(createPoseConfig(element, childConfig), domPose);\n            }, measure: measure, flip: function (op) {\n                if (op) {\n                    measure();\n                    op();\n                }\n                return api.set('flip');\n            } });\n        props.elementStyler.render();\n        appendEventListeners(props.element, activeActions, poserApi, config);\n        return poserApi;\n    }\n});\nvar domPose$1 = function (element, config) {\n    return domPose(createPoseConfig(element, config));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (domPose$1);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/popmotion-pose/dist/popmotion-pose.es.js\n");

/***/ }),

/***/ "../../../node_modules/popmotion/dist/popmotion.es.js":
/*!************************************************************!*\
  !*** ../../../node_modules/popmotion/dist/popmotion.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"valueTypes\": () => (/* reexport module object */ style_value_types__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   \"easing\": () => (/* reexport module object */ _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   \"styler\": () => (/* reexport safe */ stylefire__WEBPACK_IMPORTED_MODULE_4__.default),\n/* harmony export */   \"Action\": () => (/* binding */ Action),\n/* harmony export */   \"ValueReaction\": () => (/* binding */ ValueReaction),\n/* harmony export */   \"action\": () => (/* binding */ action),\n/* harmony export */   \"calc\": () => (/* binding */ calc),\n/* harmony export */   \"chain\": () => (/* binding */ chain),\n/* harmony export */   \"composite\": () => (/* binding */ composite),\n/* harmony export */   \"crossfade\": () => (/* binding */ crossfade),\n/* harmony export */   \"css\": () => (/* binding */ css),\n/* harmony export */   \"decay\": () => (/* binding */ vectorDecay),\n/* harmony export */   \"delay\": () => (/* binding */ delay),\n/* harmony export */   \"everyFrame\": () => (/* binding */ frame),\n/* harmony export */   \"inertia\": () => (/* binding */ index),\n/* harmony export */   \"keyframes\": () => (/* binding */ keyframes),\n/* harmony export */   \"listen\": () => (/* binding */ listen),\n/* harmony export */   \"merge\": () => (/* binding */ merge),\n/* harmony export */   \"mouse\": () => (/* binding */ mouse),\n/* harmony export */   \"multicast\": () => (/* binding */ multicast),\n/* harmony export */   \"multitouch\": () => (/* binding */ multitouch),\n/* harmony export */   \"parallel\": () => (/* binding */ parallel$1),\n/* harmony export */   \"physics\": () => (/* binding */ vectorPhysics),\n/* harmony export */   \"pointer\": () => (/* binding */ index$1),\n/* harmony export */   \"schedule\": () => (/* binding */ schedule),\n/* harmony export */   \"spring\": () => (/* binding */ vectorSpring),\n/* harmony export */   \"stagger\": () => (/* binding */ stagger),\n/* harmony export */   \"svg\": () => (/* binding */ svg),\n/* harmony export */   \"timeline\": () => (/* binding */ timeline),\n/* harmony export */   \"transform\": () => (/* binding */ transformers),\n/* harmony export */   \"tween\": () => (/* binding */ tween),\n/* harmony export */   \"value\": () => (/* binding */ value)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ \"../../../node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @popmotion/popcorn */ \"../../../node_modules/@popmotion/popcorn/dist/popcorn.es.js\");\n/* harmony import */ var framesync__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! framesync */ \"../../../node_modules/framesync/dist/framesync.es.js\");\n/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! style-value-types */ \"../../../node_modules/style-value-types/dist/style-value-types.es.js\");\n/* harmony import */ var _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @popmotion/easing */ \"../../../node_modules/@popmotion/easing/dist/easing.es.js\");\n/* harmony import */ var stylefire__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! stylefire */ \"../../../node_modules/stylefire/dist/stylefire.es.js\");\n/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! hey-listen */ \"../../../node_modules/hey-listen/dist/hey-listen.es.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Chainable = /*#__PURE__*/function () {\n    function Chainable(props) {\n        if (props === void 0) {\n            props = {};\n        }\n        this.props = props;\n    }\n    Chainable.prototype.applyMiddleware = function (middleware) {\n        return this.create((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, this.props), { middleware: this.props.middleware ? (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__spreadArrays)([middleware], this.props.middleware) : [middleware] }));\n    };\n    Chainable.prototype.pipe = function () {\n        var funcs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            funcs[_i] = arguments[_i];\n        }\n        var pipedUpdate = funcs.length === 1 ? funcs[0] : _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.pipe.apply(void 0, funcs);\n        return this.applyMiddleware(function (update) {\n            return function (v) {\n                return update(pipedUpdate(v));\n            };\n        });\n    };\n    Chainable.prototype.while = function (predicate) {\n        return this.applyMiddleware(function (update, complete) {\n            return function (v) {\n                return predicate(v) ? update(v) : complete();\n            };\n        });\n    };\n    Chainable.prototype.filter = function (predicate) {\n        return this.applyMiddleware(function (update) {\n            return function (v) {\n                return predicate(v) && update(v);\n            };\n        });\n    };\n    return Chainable;\n}();\n\nvar Observer = /*#__PURE__*/function () {\n    function Observer(_a, observer) {\n        var _this = this;\n        var middleware = _a.middleware,\n            onComplete = _a.onComplete;\n        this.isActive = true;\n        this.update = function (v) {\n            if (_this.observer.update) _this.updateObserver(v);\n        };\n        this.complete = function () {\n            if (_this.observer.complete && _this.isActive) _this.observer.complete();\n            if (_this.onComplete) _this.onComplete();\n            _this.isActive = false;\n        };\n        this.error = function (err) {\n            if (_this.observer.error && _this.isActive) _this.observer.error(err);\n            _this.isActive = false;\n        };\n        this.observer = observer;\n        this.updateObserver = function (v) {\n            return observer.update(v);\n        };\n        this.onComplete = onComplete;\n        if (observer.update && middleware && middleware.length) {\n            middleware.forEach(function (m) {\n                return _this.updateObserver = m(_this.updateObserver, _this.complete);\n            });\n        }\n    }\n    return Observer;\n}();\nvar createObserver = function (observerCandidate, _a, onComplete) {\n    var middleware = _a.middleware;\n    if (typeof observerCandidate === 'function') {\n        return new Observer({ middleware: middleware, onComplete: onComplete }, { update: observerCandidate });\n    } else {\n        return new Observer({ middleware: middleware, onComplete: onComplete }, observerCandidate);\n    }\n};\n\nvar Action = /*#__PURE__*/function (_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__extends)(Action, _super);\n    function Action() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Action.prototype.create = function (props) {\n        return new Action(props);\n    };\n    Action.prototype.start = function (observerCandidate) {\n        if (observerCandidate === void 0) {\n            observerCandidate = {};\n        }\n        var isComplete = false;\n        var subscription = {\n            stop: function () {\n                return undefined;\n            }\n        };\n        var _a = this.props,\n            init = _a.init,\n            observerProps = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__rest)(_a, [\"init\"]);\n        var observer = createObserver(observerCandidate, observerProps, function () {\n            isComplete = true;\n            subscription.stop();\n        });\n        var api = init(observer);\n        subscription = api ? (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, subscription), api) : subscription;\n        if (observerCandidate.registerParent) {\n            observerCandidate.registerParent(subscription);\n        }\n        if (isComplete) subscription.stop();\n        return subscription;\n    };\n    return Action;\n}(Chainable);\nvar action = function (init) {\n    return new Action({ init: init });\n};\n\nvar BaseMulticast = /*#__PURE__*/function (_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__extends)(BaseMulticast, _super);\n    function BaseMulticast() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.subscribers = [];\n        return _this;\n    }\n    BaseMulticast.prototype.complete = function () {\n        this.subscribers.forEach(function (subscriber) {\n            return subscriber.complete();\n        });\n    };\n    BaseMulticast.prototype.error = function (err) {\n        this.subscribers.forEach(function (subscriber) {\n            return subscriber.error(err);\n        });\n    };\n    BaseMulticast.prototype.update = function (v) {\n        for (var i = 0; i < this.subscribers.length; i++) {\n            this.subscribers[i].update(v);\n        }\n    };\n    BaseMulticast.prototype.subscribe = function (observerCandidate) {\n        var _this = this;\n        var observer = createObserver(observerCandidate, this.props);\n        this.subscribers.push(observer);\n        var subscription = {\n            unsubscribe: function () {\n                var index = _this.subscribers.indexOf(observer);\n                if (index !== -1) _this.subscribers.splice(index, 1);\n            }\n        };\n        return subscription;\n    };\n    BaseMulticast.prototype.stop = function () {\n        if (this.parent) this.parent.stop();\n    };\n    BaseMulticast.prototype.registerParent = function (subscription) {\n        this.stop();\n        this.parent = subscription;\n    };\n    return BaseMulticast;\n}(Chainable);\n\nvar Multicast = /*#__PURE__*/function (_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__extends)(Multicast, _super);\n    function Multicast() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Multicast.prototype.create = function (props) {\n        return new Multicast(props);\n    };\n    return Multicast;\n}(BaseMulticast);\nvar multicast = function () {\n    return new Multicast();\n};\n\nvar stepProgress = function (steps, progress) {\n    var segment = 1 / (steps - 1);\n    var subsegment = 1 / (2 * (steps - 1));\n    var percentProgressOfTarget = Math.min(progress, 1);\n    var subsegmentProgressOfTarget = percentProgressOfTarget / subsegment;\n    var segmentProgressOfTarget = Math.floor((subsegmentProgressOfTarget + 1) / 2);\n    return segmentProgressOfTarget * segment;\n};\n\nvar calc = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    angle: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.angle,\n    degreesToRadians: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.degreesToRadians,\n    distance: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.distance,\n    isPoint3D: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.isPoint3D,\n    isPoint: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.isPoint,\n    dilate: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.mix,\n    getValueFromProgress: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.mix,\n    pointFromAngleAndDistance: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.pointFromVector,\n    getProgressFromValue: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.progress,\n    radiansToDegrees: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.radiansToDegrees,\n    smooth: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.smoothFrame,\n    speedPerFrame: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.velocityPerFrame,\n    speedPerSecond: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.velocityPerSecond,\n    stepProgress: stepProgress\n});\n\nvar isValueList = function (v) {\n    return Array.isArray(v);\n};\nvar isSingleValue = function (v) {\n    var typeOfV = typeof v;\n    return typeOfV === 'string' || typeOfV === 'number';\n};\nvar ValueReaction = /*#__PURE__*/function (_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__extends)(ValueReaction, _super);\n    function ValueReaction(props) {\n        var _this = _super.call(this, props) || this;\n        _this.scheduleVelocityCheck = function () {\n            return framesync__WEBPACK_IMPORTED_MODULE_1__.default.postRender(_this.velocityCheck);\n        };\n        _this.velocityCheck = function (_a) {\n            var timestamp = _a.timestamp;\n            if (timestamp !== _this.lastUpdated) {\n                _this.prev = _this.current;\n            }\n        };\n        _this.prev = _this.current = props.value || 0;\n        if (isSingleValue(_this.current)) {\n            _this.updateCurrent = function (v) {\n                return _this.current = v;\n            };\n            _this.getVelocityOfCurrent = function () {\n                return _this.getSingleVelocity(_this.current, _this.prev);\n            };\n        } else if (isValueList(_this.current)) {\n            _this.updateCurrent = function (v) {\n                return _this.current = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__spreadArrays)(v);\n            };\n            _this.getVelocityOfCurrent = function () {\n                return _this.getListVelocity();\n            };\n        } else {\n            _this.updateCurrent = function (v) {\n                _this.current = {};\n                for (var key in v) {\n                    if (v.hasOwnProperty(key)) {\n                        _this.current[key] = v[key];\n                    }\n                }\n            };\n            _this.getVelocityOfCurrent = function () {\n                return _this.getMapVelocity();\n            };\n        }\n        if (props.initialSubscription) _this.subscribe(props.initialSubscription);\n        return _this;\n    }\n    ValueReaction.prototype.create = function (props) {\n        return new ValueReaction(props);\n    };\n    ValueReaction.prototype.get = function () {\n        return this.current;\n    };\n    ValueReaction.prototype.getVelocity = function () {\n        return this.getVelocityOfCurrent();\n    };\n    ValueReaction.prototype.update = function (v) {\n        _super.prototype.update.call(this, v);\n        this.prev = this.current;\n        this.updateCurrent(v);\n        var _a = (0,framesync__WEBPACK_IMPORTED_MODULE_1__.getFrameData)(),\n            delta = _a.delta,\n            timestamp = _a.timestamp;\n        this.timeDelta = delta;\n        this.lastUpdated = timestamp;\n        framesync__WEBPACK_IMPORTED_MODULE_1__.default.postRender(this.scheduleVelocityCheck);\n    };\n    ValueReaction.prototype.subscribe = function (observerCandidate) {\n        var sub = _super.prototype.subscribe.call(this, observerCandidate);\n        this.subscribers[this.subscribers.length - 1].update(this.current);\n        return sub;\n    };\n    ValueReaction.prototype.getSingleVelocity = function (current, prev) {\n        return typeof current === 'number' && typeof prev === 'number' ? (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.velocityPerSecond)(current - prev, this.timeDelta) : (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.velocityPerSecond)(parseFloat(current) - parseFloat(prev), this.timeDelta) || 0;\n    };\n    ValueReaction.prototype.getListVelocity = function () {\n        var _this = this;\n        return this.current.map(function (c, i) {\n            return _this.getSingleVelocity(c, _this.prev[i]);\n        });\n    };\n    ValueReaction.prototype.getMapVelocity = function () {\n        var velocity = {};\n        for (var key in this.current) {\n            if (this.current.hasOwnProperty(key)) {\n                velocity[key] = this.getSingleVelocity(this.current[key], this.prev[key]);\n            }\n        }\n        return velocity;\n    };\n    return ValueReaction;\n}(BaseMulticast);\nvar value = function (value, initialSubscription) {\n    return new ValueReaction({ value: value, initialSubscription: initialSubscription });\n};\n\nvar multi = function (_a) {\n    var getCount = _a.getCount,\n        getFirst = _a.getFirst,\n        getOutput = _a.getOutput,\n        mapApi = _a.mapApi,\n        setProp = _a.setProp,\n        startActions = _a.startActions;\n    return function (actions) {\n        return action(function (_a) {\n            var update = _a.update,\n                complete = _a.complete,\n                error = _a.error;\n            var numActions = getCount(actions);\n            var output = getOutput();\n            var updateOutput = function () {\n                return update(output);\n            };\n            var numCompletedActions = 0;\n            var subs = startActions(actions, function (a, name) {\n                var hasCompleted = false;\n                return a.start({\n                    complete: function () {\n                        if (!hasCompleted) {\n                            hasCompleted = true;\n                            numCompletedActions++;\n                            if (numCompletedActions === numActions) framesync__WEBPACK_IMPORTED_MODULE_1__.default.update(complete);\n                        }\n                    },\n                    error: error,\n                    update: function (v) {\n                        setProp(output, name, v);\n                        framesync__WEBPACK_IMPORTED_MODULE_1__.default.update(updateOutput, false, true);\n                    }\n                });\n            });\n            return Object.keys(getFirst(subs)).reduce(function (api, methodName) {\n                api[methodName] = mapApi(subs, methodName);\n                return api;\n            }, {});\n        });\n    };\n};\n\nvar composite = /*#__PURE__*/multi({\n    getOutput: function () {\n        return {};\n    },\n    getCount: function (subs) {\n        return Object.keys(subs).length;\n    },\n    getFirst: function (subs) {\n        return subs[Object.keys(subs)[0]];\n    },\n    mapApi: function (subs, methodName) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return Object.keys(subs).reduce(function (output, propKey) {\n                var _a;\n                if (subs[propKey][methodName]) {\n                    args[0] && args[0][propKey] !== undefined ? output[propKey] = subs[propKey][methodName](args[0][propKey]) : output[propKey] = (_a = subs[propKey])[methodName].apply(_a, args);\n                }\n                return output;\n            }, {});\n        };\n    },\n    setProp: function (output, name, v) {\n        return output[name] = v;\n    },\n    startActions: function (actions, starter) {\n        return Object.keys(actions).reduce(function (subs, key) {\n            subs[key] = starter(actions[key], key);\n            return subs;\n        }, {});\n    }\n});\n\nvar parallel = /*#__PURE__*/multi({\n    getOutput: function () {\n        return [];\n    },\n    getCount: function (subs) {\n        return subs.length;\n    },\n    getFirst: function (subs) {\n        return subs[0];\n    },\n    mapApi: function (subs, methodName) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return subs.map(function (sub, i) {\n                if (sub[methodName]) {\n                    return Array.isArray(args[0]) ? sub[methodName](args[0][i]) : sub[methodName].apply(sub, args);\n                }\n            });\n        };\n    },\n    setProp: function (output, name, v) {\n        return output[name] = v;\n    },\n    startActions: function (actions, starter) {\n        return actions.map(function (action, i) {\n            return starter(action, i);\n        });\n    }\n});\nvar parallel$1 = function () {\n    var actions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        actions[_i] = arguments[_i];\n    }\n    return parallel(actions);\n};\n\nvar createVectorTests = function (typeTests) {\n    var testNames = Object.keys(typeTests);\n    var isVectorProp = function (prop, key) {\n        return prop !== undefined && !typeTests[key](prop);\n    };\n    var getVectorKeys = function (props) {\n        return testNames.reduce(function (vectorKeys, key) {\n            if (isVectorProp(props[key], key)) vectorKeys.push(key);\n            return vectorKeys;\n        }, []);\n    };\n    var testVectorProps = function (props) {\n        return props && testNames.some(function (key) {\n            return isVectorProp(props[key], key);\n        });\n    };\n    return { getVectorKeys: getVectorKeys, testVectorProps: testVectorProps };\n};\nvar unitTypes = [style_value_types__WEBPACK_IMPORTED_MODULE_2__.px, style_value_types__WEBPACK_IMPORTED_MODULE_2__.percent, style_value_types__WEBPACK_IMPORTED_MODULE_2__.degrees, style_value_types__WEBPACK_IMPORTED_MODULE_2__.vh, style_value_types__WEBPACK_IMPORTED_MODULE_2__.vw];\nvar findUnitType = function (prop) {\n    return unitTypes.find(function (type) {\n        return type.test(prop);\n    });\n};\nvar isUnitProp = function (prop) {\n    return Boolean(findUnitType(prop));\n};\nvar createAction = function (action, props) {\n    return action(props);\n};\nvar reduceArrayValue = function (i) {\n    return function (props, key) {\n        props[key] = props[key][i];\n        return props;\n    };\n};\nvar createArrayAction = function (action, props, vectorKeys) {\n    var firstVectorKey = vectorKeys[0];\n    var actionList = props[firstVectorKey].map(function (v, i) {\n        var childActionProps = vectorKeys.reduce(reduceArrayValue(i), (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, props));\n        return getActionCreator(v)(action, childActionProps);\n    });\n    return parallel$1.apply(void 0, actionList);\n};\nvar reduceObjectValue = function (key) {\n    return function (props, propKey) {\n        props[propKey] = props[propKey][key];\n        return props;\n    };\n};\nvar createObjectAction = function (action, props, vectorKeys) {\n    var firstVectorKey = vectorKeys[0];\n    var actionMap = Object.keys(props[firstVectorKey]).reduce(function (map, key) {\n        var childActionProps = vectorKeys.reduce(reduceObjectValue(key), (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, props));\n        map[key] = getActionCreator(props[firstVectorKey][key])(action, childActionProps);\n        return map;\n    }, {});\n    return composite(actionMap);\n};\nvar createUnitAction = function (action, _a) {\n    var from = _a.from,\n        to = _a.to,\n        props = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__rest)(_a, [\"from\", \"to\"]);\n    var unitType = findUnitType(from) || findUnitType(to);\n    var transform = unitType.transform,\n        parse = unitType.parse;\n    return action((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, props), { from: typeof from === 'string' ? parse(from) : from, to: typeof to === 'string' ? parse(to) : to })).pipe(transform);\n};\nvar createMixerAction = function (mixer) {\n    return function (action, _a) {\n        var from = _a.from,\n            to = _a.to,\n            props = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__rest)(_a, [\"from\", \"to\"]);\n        return action((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, props), { from: 0, to: 1 })).pipe(mixer(from, to));\n    };\n};\nvar createColorAction = /*#__PURE__*/createMixerAction(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.mixColor);\nvar createComplexAction = /*#__PURE__*/createMixerAction(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.mixComplex);\nvar createVectorAction = function (action, typeTests) {\n    var _a = createVectorTests(typeTests),\n        testVectorProps = _a.testVectorProps,\n        getVectorKeys = _a.getVectorKeys;\n    var vectorAction = function (props) {\n        var isVector = testVectorProps(props);\n        if (!isVector) return action(props);\n        var vectorKeys = getVectorKeys(props);\n        var testKey = vectorKeys[0];\n        var testProp = props[testKey];\n        return getActionCreator(testProp)(action, props, vectorKeys);\n    };\n    return vectorAction;\n};\nvar getActionCreator = function (prop) {\n    if (typeof prop === 'number') {\n        return createAction;\n    } else if (Array.isArray(prop)) {\n        return createArrayAction;\n    } else if (isUnitProp(prop)) {\n        return createUnitAction;\n    } else if (style_value_types__WEBPACK_IMPORTED_MODULE_2__.color.test(prop)) {\n        return createColorAction;\n    } else if (style_value_types__WEBPACK_IMPORTED_MODULE_2__.complex.test(prop)) {\n        return createComplexAction;\n    } else if (typeof prop === 'object') {\n        return createObjectAction;\n    } else {\n        return createAction;\n    }\n};\n\nvar decay = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var complete = _a.complete,\n            update = _a.update;\n        var _b = props.velocity,\n            velocity = _b === void 0 ? 0 : _b,\n            _c = props.from,\n            from = _c === void 0 ? 0 : _c,\n            _d = props.power,\n            power = _d === void 0 ? 0.8 : _d,\n            _e = props.timeConstant,\n            timeConstant = _e === void 0 ? 350 : _e,\n            _f = props.restDelta,\n            restDelta = _f === void 0 ? 0.5 : _f,\n            modifyTarget = props.modifyTarget;\n        var elapsed = 0;\n        var amplitude = power * velocity;\n        var idealTarget = from + amplitude;\n        var target = typeof modifyTarget === 'undefined' ? idealTarget : modifyTarget(idealTarget);\n        if (target !== idealTarget) amplitude = target - from;\n        var process = framesync__WEBPACK_IMPORTED_MODULE_1__.default.update(function (_a) {\n            var frameDelta = _a.delta;\n            elapsed += frameDelta;\n            var delta = -amplitude * Math.exp(-elapsed / timeConstant);\n            var isMoving = delta > restDelta || delta < -restDelta;\n            var current = isMoving ? target + delta : target;\n            update(current);\n            if (!isMoving) {\n                framesync__WEBPACK_IMPORTED_MODULE_1__.cancelSync.update(process);\n                complete();\n            }\n        }, true);\n        return {\n            stop: function () {\n                return framesync__WEBPACK_IMPORTED_MODULE_1__.cancelSync.update(process);\n            }\n        };\n    });\n};\nvar vectorDecay = /*#__PURE__*/createVectorAction(decay, {\n    from: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    modifyTarget: function (func) {\n        return typeof func === 'function';\n    },\n    velocity: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test\n});\n\nvar spring = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var _b = props.velocity,\n            velocity = _b === void 0 ? 0.0 : _b;\n        var _c = props.from,\n            from = _c === void 0 ? 0.0 : _c,\n            _d = props.to,\n            to = _d === void 0 ? 0.0 : _d,\n            _e = props.stiffness,\n            stiffness = _e === void 0 ? 100 : _e,\n            _f = props.damping,\n            damping = _f === void 0 ? 10 : _f,\n            _g = props.mass,\n            mass = _g === void 0 ? 1.0 : _g,\n            _h = props.restSpeed,\n            restSpeed = _h === void 0 ? 0.01 : _h,\n            _j = props.restDelta,\n            restDelta = _j === void 0 ? 0.01 : _j;\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        var t = 0;\n        var delta = to - from;\n        var position = from;\n        var prevPosition = position;\n        var process = framesync__WEBPACK_IMPORTED_MODULE_1__.default.update(function (_a) {\n            var timeDelta = _a.delta;\n            t += timeDelta;\n            var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n            var angularFreq = Math.sqrt(stiffness / mass) / 1000;\n            prevPosition = position;\n            if (dampingRatio < 1) {\n                var envelope = Math.exp(-dampingRatio * angularFreq * t);\n                var expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\n                position = to - envelope * ((initialVelocity + dampingRatio * angularFreq * delta) / expoDecay * Math.sin(expoDecay * t) + delta * Math.cos(expoDecay * t));\n            } else {\n                var envelope = Math.exp(-angularFreq * t);\n                position = to - envelope * (delta + (initialVelocity + angularFreq * delta) * t);\n            }\n            velocity = (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.velocityPerSecond)(position - prevPosition, timeDelta);\n            var isBelowVelocityThreshold = Math.abs(velocity) <= restSpeed;\n            var isBelowDisplacementThreshold = Math.abs(to - position) <= restDelta;\n            if (isBelowVelocityThreshold && isBelowDisplacementThreshold) {\n                position = to;\n                update(position);\n                framesync__WEBPACK_IMPORTED_MODULE_1__.cancelSync.update(process);\n                complete();\n            } else {\n                update(position);\n            }\n        }, true);\n        return {\n            stop: function () {\n                return framesync__WEBPACK_IMPORTED_MODULE_1__.cancelSync.update(process);\n            }\n        };\n    });\n};\nvar vectorSpring = /*#__PURE__*/createVectorAction(spring, {\n    from: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    to: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    stiffness: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    damping: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    mass: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    velocity: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test\n});\n\nvar inertia = function (_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.velocity,\n        velocity = _c === void 0 ? 0 : _c,\n        min = _a.min,\n        max = _a.max,\n        _d = _a.power,\n        power = _d === void 0 ? 0.8 : _d,\n        _e = _a.timeConstant,\n        timeConstant = _e === void 0 ? 700 : _e,\n        _f = _a.bounceStiffness,\n        bounceStiffness = _f === void 0 ? 500 : _f,\n        _g = _a.bounceDamping,\n        bounceDamping = _g === void 0 ? 10 : _g,\n        _h = _a.restDelta,\n        restDelta = _h === void 0 ? 1 : _h,\n        modifyTarget = _a.modifyTarget;\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var prev = from;\n        var current = from;\n        var activeAnimation;\n        var isOutOfBounds = function (v) {\n            return min !== undefined && v < min || max !== undefined && v > max;\n        };\n        var boundaryNearest = function (v) {\n            return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n        };\n        var startAnimation = function (animation, next) {\n            activeAnimation && activeAnimation.stop();\n            activeAnimation = animation.start({\n                update: update,\n                complete: function () {\n                    if (next) {\n                        next();\n                        return;\n                    }\n                    complete();\n                }\n            });\n        };\n        var startSpring = function (props) {\n            startAnimation(spring((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, props), { stiffness: bounceStiffness, damping: bounceDamping, restDelta: restDelta })));\n        };\n        if (isOutOfBounds(from)) {\n            startSpring({ from: from, velocity: velocity, to: boundaryNearest(from) });\n        } else {\n            var to = power * velocity + from;\n            if (typeof modifyTarget !== 'undefined') {\n                to = modifyTarget(to);\n                modifyTarget = void 0;\n                velocity = (to - from) / power;\n            }\n            var animation = decay({\n                from: from,\n                velocity: velocity,\n                timeConstant: timeConstant,\n                power: power,\n                restDelta: restDelta,\n                modifyTarget: modifyTarget\n            });\n            var next = void 0;\n            if (isOutOfBounds(to)) {\n                var boundary_1 = boundaryNearest(to);\n                var heading_1 = boundary_1 == min ? -1 : 1;\n                animation = animation.while(function (v) {\n                    prev = current;\n                    velocity = (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.velocityPerSecond)(v - prev, (0,framesync__WEBPACK_IMPORTED_MODULE_1__.getFrameData)().delta);\n                    current = v;\n                    return boundary_1 - v * heading_1 > 0;\n                });\n                next = function () {\n                    return startSpring({ from: current, to: boundary_1, velocity: velocity });\n                };\n            }\n            startAnimation(animation, next);\n        }\n        return {\n            stop: function () {\n                return activeAnimation && activeAnimation.stop();\n            }\n        };\n    });\n};\nvar index = /*#__PURE__*/createVectorAction(inertia, {\n    from: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    velocity: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    min: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    max: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    damping: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    stiffness: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    modifyTarget: function (func) {\n        return typeof func === 'function';\n    }\n});\n\nvar frame = function () {\n    return action(function (_a) {\n        var update = _a.update;\n        var initialTime = 0;\n        var process = framesync__WEBPACK_IMPORTED_MODULE_1__.default.update(function (_a) {\n            var timestamp = _a.timestamp;\n            if (!initialTime) initialTime = timestamp;\n            update(timestamp - initialTime);\n        }, true, true);\n        return {\n            stop: function () {\n                return framesync__WEBPACK_IMPORTED_MODULE_1__.cancelSync.update(process);\n            }\n        };\n    });\n};\n\nvar scrubber = function (_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.to,\n        to = _c === void 0 ? 1 : _c,\n        _d = _a.ease,\n        ease = _d === void 0 ? _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.linear : _d,\n        _e = _a.reverseEase,\n        reverseEase = _e === void 0 ? false : _e;\n    if (reverseEase) {\n        ease = (0,_popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.createReversedEasing)(ease);\n    }\n    return action(function (_a) {\n        var update = _a.update;\n        return {\n            seek: function (progress) {\n                return update(progress);\n            }\n        };\n    }).pipe(ease, function (v) {\n        return (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.mix)(from, to, v);\n    });\n};\nvar vectorScrubber = /*#__PURE__*/createVectorAction(scrubber, {\n    ease: function (func) {\n        return typeof func === 'function';\n    },\n    from: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    to: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test\n});\n\nvar clampProgress = /*#__PURE__*/(0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.clamp)(0, 1);\nvar tween = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var _b = props.duration,\n            duration = _b === void 0 ? 300 : _b,\n            _c = props.ease,\n            ease = _c === void 0 ? _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.easeOut : _c,\n            _d = props.flip,\n            flip = _d === void 0 ? 0 : _d,\n            _e = props.loop,\n            loop = _e === void 0 ? 0 : _e,\n            _f = props.yoyo,\n            yoyo = _f === void 0 ? 0 : _f,\n            _g = props.repeatDelay,\n            repeatDelay = _g === void 0 ? 0 : _g;\n        var _h = props.from,\n            from = _h === void 0 ? 0 : _h,\n            _j = props.to,\n            to = _j === void 0 ? 1 : _j,\n            _k = props.elapsed,\n            elapsed = _k === void 0 ? 0 : _k,\n            _l = props.flipCount,\n            flipCount = _l === void 0 ? 0 : _l,\n            _m = props.yoyoCount,\n            yoyoCount = _m === void 0 ? 0 : _m,\n            _o = props.loopCount,\n            loopCount = _o === void 0 ? 0 : _o;\n        var playhead = vectorScrubber({ from: from, to: to, ease: ease }).start(update);\n        var currentProgress = 0;\n        var process;\n        var isActive = false;\n        var reverseAnimation = function (reverseEase) {\n            var _a;\n            if (reverseEase === void 0) {\n                reverseEase = false;\n            }\n            _a = [to, from], from = _a[0], to = _a[1];\n            playhead = vectorScrubber({ from: from, to: to, ease: ease, reverseEase: reverseEase }).start(update);\n        };\n        var isTweenComplete = function () {\n            var isComplete = isActive && elapsed > duration + repeatDelay;\n            if (!isComplete) return false;\n            if (isComplete && !loop && !flip && !yoyo) return true;\n            elapsed = duration - (elapsed - repeatDelay);\n            if (loop && loopCount < loop) {\n                loopCount++;\n                return false;\n            } else if (flip && flipCount < flip) {\n                flipCount++;\n                reverseAnimation();\n                return false;\n            } else if (yoyo && yoyoCount < yoyo) {\n                yoyoCount++;\n                reverseAnimation(yoyoCount % 2 !== 0);\n                return false;\n            }\n            return true;\n        };\n        var updateTween = function () {\n            currentProgress = clampProgress((0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.progress)(0, duration, elapsed));\n            playhead.seek(currentProgress);\n        };\n        var startTimer = function () {\n            isActive = true;\n            process = framesync__WEBPACK_IMPORTED_MODULE_1__.default.update(function (_a) {\n                var delta = _a.delta;\n                elapsed += delta;\n                updateTween();\n                if (isTweenComplete()) {\n                    framesync__WEBPACK_IMPORTED_MODULE_1__.cancelSync.update(process);\n                    complete && framesync__WEBPACK_IMPORTED_MODULE_1__.default.update(complete, false, true);\n                }\n            }, true);\n        };\n        var stopTimer = function () {\n            isActive = false;\n            if (process) framesync__WEBPACK_IMPORTED_MODULE_1__.cancelSync.update(process);\n        };\n        startTimer();\n        return {\n            isActive: function () {\n                return isActive;\n            },\n            getElapsed: function () {\n                return (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.clamp)(0, duration, elapsed);\n            },\n            getProgress: function () {\n                return currentProgress;\n            },\n            stop: function () {\n                stopTimer();\n            },\n            pause: function () {\n                stopTimer();\n                return this;\n            },\n            resume: function () {\n                if (!isActive) startTimer();\n                return this;\n            },\n            seek: function (newProgress) {\n                elapsed = (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.mix)(0, duration, newProgress);\n                framesync__WEBPACK_IMPORTED_MODULE_1__.default.update(updateTween, false, true);\n                return this;\n            },\n            reverse: function () {\n                reverseAnimation();\n                return this;\n            }\n        };\n    });\n};\n\nvar clampProgress$1 = /*#__PURE__*/(0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.clamp)(0, 1);\nvar defaultEasings = function (values, easing) {\n    return values.map(function () {\n        return easing || _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.easeOut;\n    }).splice(0, values.length - 1);\n};\nvar defaultTimings = function (values) {\n    var numValues = values.length;\n    return values.map(function (value, i) {\n        return i !== 0 ? i / (numValues - 1) : 0;\n    });\n};\nvar interpolateScrubbers = function (input, scrubbers, update) {\n    var rangeLength = input.length;\n    var finalInputIndex = rangeLength - 1;\n    var finalScrubberIndex = finalInputIndex - 1;\n    var subs = scrubbers.map(function (scrub) {\n        return scrub.start(update);\n    });\n    return function (v) {\n        if (v <= input[0]) {\n            subs[0].seek(0);\n        }\n        if (v >= input[finalInputIndex]) {\n            subs[finalScrubberIndex].seek(1);\n        }\n        var i = 1;\n        for (; i < rangeLength; i++) {\n            if (input[i] > v || i === finalInputIndex) break;\n        }\n        var progressInRange = (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.progress)(input[i - 1], input[i], v);\n        subs[i - 1].seek(clampProgress$1(progressInRange));\n    };\n};\nvar keyframes = function (_a) {\n    var easings = _a.easings,\n        _b = _a.ease,\n        ease = _b === void 0 ? _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.linear : _b,\n        times = _a.times,\n        values = _a.values,\n        tweenProps = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__rest)(_a, [\"easings\", \"ease\", \"times\", \"values\"]);\n    easings = Array.isArray(easings) ? easings : defaultEasings(values, easings);\n    times = times || defaultTimings(values);\n    var scrubbers = easings.map(function (easing, i) {\n        return vectorScrubber({\n            from: values[i],\n            to: values[i + 1],\n            ease: easing\n        });\n    });\n    return tween((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, tweenProps), { ease: ease })).applyMiddleware(function (update) {\n        return interpolateScrubbers(times, scrubbers, update);\n    });\n};\n\nvar physics = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var complete = _a.complete,\n            update = _a.update;\n        var _b = props.acceleration,\n            acceleration = _b === void 0 ? 0 : _b,\n            _c = props.friction,\n            friction = _c === void 0 ? 0 : _c,\n            _d = props.velocity,\n            velocity = _d === void 0 ? 0 : _d,\n            springStrength = props.springStrength,\n            to = props.to;\n        var _e = props.restSpeed,\n            restSpeed = _e === void 0 ? 0.001 : _e,\n            _f = props.from,\n            from = _f === void 0 ? 0 : _f;\n        var current = from;\n        var process = framesync__WEBPACK_IMPORTED_MODULE_1__.default.update(function (_a) {\n            var delta = _a.delta;\n            var elapsed = Math.max(delta, 16);\n            if (acceleration) velocity += (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.velocityPerFrame)(acceleration, elapsed);\n            if (friction) velocity *= Math.pow(1 - friction, elapsed / 100);\n            if (springStrength !== undefined && to !== undefined) {\n                var distanceToTarget = to - current;\n                velocity += distanceToTarget * (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.velocityPerFrame)(springStrength, elapsed);\n            }\n            current += (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.velocityPerFrame)(velocity, elapsed);\n            update(current);\n            var isComplete = restSpeed !== false && (!velocity || Math.abs(velocity) <= restSpeed);\n            if (isComplete) {\n                framesync__WEBPACK_IMPORTED_MODULE_1__.cancelSync.update(process);\n                complete();\n            }\n        }, true);\n        return {\n            set: function (v) {\n                current = v;\n                return this;\n            },\n            setAcceleration: function (v) {\n                acceleration = v;\n                return this;\n            },\n            setFriction: function (v) {\n                friction = v;\n                return this;\n            },\n            setSpringStrength: function (v) {\n                springStrength = v;\n                return this;\n            },\n            setSpringTarget: function (v) {\n                to = v;\n                return this;\n            },\n            setVelocity: function (v) {\n                velocity = v;\n                return this;\n            },\n            stop: function () {\n                return framesync__WEBPACK_IMPORTED_MODULE_1__.cancelSync.update(process);\n            }\n        };\n    });\n};\nvar vectorPhysics = /*#__PURE__*/createVectorAction(physics, {\n    acceleration: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    friction: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    velocity: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    from: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    to: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test,\n    springStrength: style_value_types__WEBPACK_IMPORTED_MODULE_2__.number.test\n});\n\nvar DEFAULT_DURATION = 300;\nvar flattenTimings = function (instructions) {\n    var flatInstructions = [];\n    var lastArg = instructions[instructions.length - 1];\n    var isStaggered = typeof lastArg === 'number';\n    var staggerDelay = isStaggered ? lastArg : 0;\n    var segments = isStaggered ? instructions.slice(0, -1) : instructions;\n    var numSegments = segments.length;\n    var offset = 0;\n    segments.forEach(function (item, i) {\n        flatInstructions.push(item);\n        if (i !== numSegments - 1) {\n            var duration = item.duration || DEFAULT_DURATION;\n            offset = staggerDelay;\n            flatInstructions.push(\"\" + (offset - duration));\n        }\n    });\n    return flatInstructions;\n};\nvar flattenArrayInstructions = function (instructions, instruction) {\n    Array.isArray(instruction) ? instructions.push.apply(instructions, flattenTimings(instruction)) : instructions.push(instruction);\n    return instructions;\n};\nvar convertDefToProps = function (props, def, i) {\n    var duration = props.duration,\n        easings = props.easings,\n        times = props.times,\n        values = props.values;\n    var numValues = values.length;\n    var prevTimeTo = times[numValues - 1];\n    var timeFrom = def.at === 0 ? 0 : def.at / duration;\n    var timeTo = (def.at + def.duration) / duration;\n    if (i === 0) {\n        values.push(def.from);\n        times.push(timeFrom);\n    } else {\n        if (prevTimeTo !== timeFrom) {\n            if (def.from !== undefined) {\n                values.push(values[numValues - 1]);\n                times.push(timeFrom);\n                easings.push(_popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.linear);\n            }\n            var from = def.from !== undefined ? def.from : values[numValues - 1];\n            values.push(from);\n            times.push(timeFrom);\n            easings.push(_popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.linear);\n        } else if (def.from !== undefined) {\n            values.push(def.from);\n            times.push(timeFrom);\n            easings.push(_popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.linear);\n        }\n    }\n    values.push(def.to);\n    times.push(timeTo);\n    easings.push(def.ease || _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__.easeInOut);\n    return props;\n};\nvar timeline = function (instructions, _a) {\n    var _b = _a === void 0 ? {} : _a,\n        duration = _b.duration,\n        elapsed = _b.elapsed,\n        ease = _b.ease,\n        loop = _b.loop,\n        flip = _b.flip,\n        yoyo = _b.yoyo;\n    var playhead = 0;\n    var calculatedDuration = 0;\n    var flatInstructions = instructions.reduce(flattenArrayInstructions, []);\n    var animationDefs = [];\n    flatInstructions.forEach(function (instruction) {\n        if (typeof instruction === 'string') {\n            playhead += parseFloat(instruction);\n        } else if (typeof instruction === 'number') {\n            playhead = instruction;\n        } else {\n            var def = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, instruction), { at: playhead });\n            def.duration = def.duration === undefined ? DEFAULT_DURATION : def.duration;\n            animationDefs.push(def);\n            playhead += def.duration;\n            calculatedDuration = Math.max(calculatedDuration, def.at + def.duration);\n        }\n    });\n    var tracks = {};\n    var numDefs = animationDefs.length;\n    for (var i = 0; i < numDefs; i++) {\n        var def = animationDefs[i];\n        var track = def.track;\n        if (track === undefined) {\n            throw new Error('No track defined');\n        }\n        if (!tracks.hasOwnProperty(track)) tracks[track] = [];\n        tracks[track].push(def);\n    }\n    var trackKeyframes = {};\n    for (var key in tracks) {\n        if (tracks.hasOwnProperty(key)) {\n            var keyframeProps = tracks[key].reduce(convertDefToProps, {\n                duration: calculatedDuration,\n                easings: [],\n                times: [],\n                values: []\n            });\n            trackKeyframes[key] = keyframes((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, keyframeProps), { duration: duration || calculatedDuration, ease: ease,\n                elapsed: elapsed,\n                loop: loop,\n                yoyo: yoyo,\n                flip: flip }));\n        }\n    }\n    return composite(trackKeyframes);\n};\n\nvar listen = function (element, events, options) {\n    return action(function (_a) {\n        var update = _a.update;\n        var eventNames = events.split(' ').map(function (eventName) {\n            element.addEventListener(eventName, update, options);\n            return eventName;\n        });\n        return {\n            stop: function () {\n                return eventNames.forEach(function (eventName) {\n                    return element.removeEventListener(eventName, update, options);\n                });\n            }\n        };\n    });\n};\n\nvar defaultPointerPos = function () {\n    return {\n        clientX: 0,\n        clientY: 0,\n        pageX: 0,\n        pageY: 0,\n        x: 0,\n        y: 0\n    };\n};\nvar eventToPoint = function (e, point) {\n    if (point === void 0) {\n        point = defaultPointerPos();\n    }\n    point.clientX = point.x = e.clientX;\n    point.clientY = point.y = e.clientY;\n    point.pageX = e.pageX;\n    point.pageY = e.pageY;\n    return point;\n};\n\nvar points = [/*#__PURE__*/defaultPointerPos()];\nvar isTouchDevice = false;\nif (typeof document !== 'undefined') {\n    var updatePointsLocation = function (_a) {\n        var touches = _a.touches;\n        isTouchDevice = true;\n        var numTouches = touches.length;\n        points.length = 0;\n        for (var i = 0; i < numTouches; i++) {\n            var thisTouch = touches[i];\n            points.push(eventToPoint(thisTouch));\n        }\n    };\n    listen(document, 'touchstart touchmove', {\n        passive: true,\n        capture: true\n    }).start(updatePointsLocation);\n}\nvar multitouch = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.preventDefault,\n        preventDefault = _c === void 0 ? true : _c,\n        _d = _b.scale,\n        scale = _d === void 0 ? 1.0 : _d,\n        _e = _b.rotate,\n        rotate = _e === void 0 ? 0.0 : _e;\n    return action(function (_a) {\n        var update = _a.update;\n        var output = {\n            touches: points,\n            scale: scale,\n            rotate: rotate\n        };\n        var initialDistance = 0.0;\n        var initialRotation = 0.0;\n        var isGesture = points.length > 1;\n        if (isGesture) {\n            var firstTouch = points[0],\n                secondTouch = points[1];\n            initialDistance = (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.distance)(firstTouch, secondTouch);\n            initialRotation = (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.angle)(firstTouch, secondTouch);\n        }\n        var updatePoint = function () {\n            if (isGesture) {\n                var firstTouch = points[0],\n                    secondTouch = points[1];\n                var newDistance = (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.distance)(firstTouch, secondTouch);\n                var newRotation = (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.angle)(firstTouch, secondTouch);\n                output.scale = scale * (newDistance / initialDistance);\n                output.rotate = rotate + (newRotation - initialRotation);\n            }\n            update(output);\n        };\n        var onMove = function (e) {\n            if (preventDefault || e.touches.length > 1) e.preventDefault();\n            framesync__WEBPACK_IMPORTED_MODULE_1__.default.update(updatePoint);\n        };\n        var updateOnMove = listen(document, 'touchmove', {\n            passive: !preventDefault\n        }).start(onMove);\n        if (isTouchDevice) framesync__WEBPACK_IMPORTED_MODULE_1__.default.update(updatePoint);\n        return {\n            stop: function () {\n                framesync__WEBPACK_IMPORTED_MODULE_1__.cancelSync.update(updatePoint);\n                updateOnMove.stop();\n            }\n        };\n    });\n};\nvar getIsTouchDevice = function () {\n    return isTouchDevice;\n};\n\nvar point = /*#__PURE__*/defaultPointerPos();\nvar isMouseDevice = false;\nif (typeof document !== 'undefined') {\n    var updatePointLocation = function (e) {\n        isMouseDevice = true;\n        eventToPoint(e, point);\n    };\n    listen(document, 'mousedown mousemove', true).start(updatePointLocation);\n}\nvar mouse = function (_a) {\n    var _b = (_a === void 0 ? {} : _a).preventDefault,\n        preventDefault = _b === void 0 ? true : _b;\n    return action(function (_a) {\n        var update = _a.update;\n        var updatePoint = function () {\n            return update(point);\n        };\n        var onMove = function (e) {\n            if (preventDefault) e.preventDefault();\n            framesync__WEBPACK_IMPORTED_MODULE_1__.default.update(updatePoint);\n        };\n        var updateOnMove = listen(document, 'mousemove').start(onMove);\n        if (isMouseDevice) framesync__WEBPACK_IMPORTED_MODULE_1__.default.update(updatePoint);\n        return {\n            stop: function () {\n                framesync__WEBPACK_IMPORTED_MODULE_1__.cancelSync.update(updatePoint);\n                updateOnMove.stop();\n            }\n        };\n    });\n};\n\nvar getFirstTouch = function (_a) {\n    var firstTouch = _a[0];\n    return firstTouch;\n};\nvar pointer = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return getIsTouchDevice() ? multitouch(props).pipe(function (_a) {\n        var touches = _a.touches;\n        return touches;\n    }, getFirstTouch) : mouse(props);\n};\nvar index$1 = function (_a) {\n    if (_a === void 0) {\n        _a = {};\n    }\n    var x = _a.x,\n        y = _a.y,\n        props = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__rest)(_a, [\"x\", \"y\"]);\n    if (x !== undefined || y !== undefined) {\n        var applyXOffset_1 = (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.applyOffset)(x || 0);\n        var applyYOffset_1 = (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.applyOffset)(y || 0);\n        var delta_1 = { x: 0, y: 0 };\n        return pointer(props).pipe(function (point) {\n            delta_1.x = applyXOffset_1(point.x);\n            delta_1.y = applyYOffset_1(point.y);\n            return delta_1;\n        });\n    } else {\n        return pointer(props);\n    }\n};\n\nvar chain = function () {\n    var actions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        actions[_i] = arguments[_i];\n    }\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var i = 0;\n        var current;\n        var playCurrent = function () {\n            current = actions[i].start({\n                complete: function () {\n                    i++;\n                    i >= actions.length ? complete() : playCurrent();\n                },\n                update: update\n            });\n        };\n        playCurrent();\n        return {\n            stop: function () {\n                return current && current.stop();\n            }\n        };\n    });\n};\n\nvar crossfade = function (a, b) {\n    return action(function (observer) {\n        var balance = 0;\n        var fadable = parallel$1(a, b).start((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, observer), { update: function (_a) {\n                var va = _a[0],\n                    vb = _a[1];\n                observer.update((0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.mix)(va, vb, balance));\n            } }));\n        return {\n            setBalance: function (v) {\n                return balance = v;\n            },\n            stop: function () {\n                return fadable.stop();\n            }\n        };\n    });\n};\n\nvar delay = function (timeToDelay) {\n    return action(function (_a) {\n        var complete = _a.complete;\n        var timeout = setTimeout(complete, timeToDelay);\n        return {\n            stop: function () {\n                return clearTimeout(timeout);\n            }\n        };\n    });\n};\n\nvar merge = function () {\n    var actions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        actions[_i] = arguments[_i];\n    }\n    return action(function (observer) {\n        var subs = actions.map(function (thisAction) {\n            return thisAction.start(observer);\n        });\n        return {\n            stop: function () {\n                return subs.forEach(function (sub) {\n                    return sub.stop();\n                });\n            }\n        };\n    });\n};\n\nvar schedule = function (scheduler, schedulee) {\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var latest;\n        var schedulerSub = scheduler.start({\n            update: function () {\n                return latest !== undefined && update(latest);\n            },\n            complete: complete\n        });\n        var scheduleeSub = schedulee.start({\n            update: function (v) {\n                return latest = v;\n            },\n            complete: complete\n        });\n        return {\n            stop: function () {\n                schedulerSub.stop();\n                scheduleeSub.stop();\n            }\n        };\n    });\n};\n\nvar stagger = function (actions, interval) {\n    var intervalIsNumber = typeof interval === 'number';\n    var actionsWithDelay = actions.map(function (a, i) {\n        var timeToDelay = intervalIsNumber ? interval * i : interval(i);\n        return chain(delay(timeToDelay), a);\n    });\n    return parallel$1.apply(void 0, actionsWithDelay);\n};\n\nvar appendUnit = function (unit) {\n    return function (v) {\n        return \"\" + v + unit;\n    };\n};\nvar steps = function (st, min, max) {\n    if (min === void 0) {\n        min = 0;\n    }\n    if (max === void 0) {\n        max = 1;\n    }\n    return function (v) {\n        var current = (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.progress)(min, max, v);\n        return (0,_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.mix)(min, max, stepProgress(st, current));\n    };\n};\nvar transformMap = function (childTransformers) {\n    return function (v) {\n        var output = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, v);\n        for (var key in childTransformers) {\n            if (childTransformers.hasOwnProperty(key)) {\n                var childTransformer = childTransformers[key];\n                output[key] = childTransformer(v[key]);\n            }\n        }\n        return output;\n    };\n};\n\nvar transformers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    applyOffset: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.applyOffset,\n    clamp: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.clamp,\n    conditional: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.conditional,\n    interpolate: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.interpolate,\n    blendArray: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.mixArray,\n    blendColor: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.mixColor,\n    pipe: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.pipe,\n    smooth: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.smooth,\n    snap: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.snap,\n    generateStaticSpring: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.springForce,\n    nonlinearSpring: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.springForceExpo,\n    linearSpring: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.springForceLinear,\n    wrap: _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_0__.wrap,\n    appendUnit: appendUnit,\n    steps: steps,\n    transformMap: transformMap\n});\n\nvar css = function (element, props) {\n    (0,hey_listen__WEBPACK_IMPORTED_MODULE_5__.warning)(false, 'css() is deprecated, use styler instead');\n    return (0,stylefire__WEBPACK_IMPORTED_MODULE_4__.default)(element, props);\n};\nvar svg = function (element, props) {\n    (0,hey_listen__WEBPACK_IMPORTED_MODULE_5__.warning)(false, 'svg() is deprecated, use styler instead');\n    return (0,stylefire__WEBPACK_IMPORTED_MODULE_4__.default)(element, props);\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/popmotion/dist/popmotion.es.js\n");

/***/ }),

/***/ "../../../node_modules/pose-core/dist/pose-core.es.js":
/*!************************************************************!*\
  !*** ../../../node_modules/pose-core/dist/pose-core.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"../../../node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hey-listen */ \"../../../node_modules/hey-listen/dist/hey-listen.es.js\");\n\n\n\nvar getPoseValues = function (_a) {\n    var transition = _a.transition,\n        flip = _a.flip,\n        delay = _a.delay,\n        delayChildren = _a.delayChildren,\n        staggerChildren = _a.staggerChildren,\n        staggerDirection = _a.staggerDirection,\n        afterChildren = _a.afterChildren,\n        beforeChildren = _a.beforeChildren,\n        preTransition = _a.preTransition,\n        applyAtStart = _a.applyAtStart,\n        applyAtEnd = _a.applyAtEnd,\n        props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, [\"transition\", \"flip\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\", \"afterChildren\", \"beforeChildren\", \"preTransition\", \"applyAtStart\", \"applyAtEnd\"]);\n    return props;\n};\nvar selectPoses = function (_a) {\n    var label = _a.label,\n        props = _a.props,\n        values = _a.values,\n        parentValues = _a.parentValues,\n        ancestorValues = _a.ancestorValues,\n        onChange = _a.onChange,\n        passive = _a.passive,\n        initialPose = _a.initialPose,\n        poses = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, [\"label\", \"props\", \"values\", \"parentValues\", \"ancestorValues\", \"onChange\", \"passive\", \"initialPose\"]);\n    return poses;\n};\nvar selectAllValues = function (values, selectValue) {\n    var allValues = {};\n    values.forEach(function (value, key) {\n        return allValues[key] = selectValue(value);\n    });\n    return allValues;\n};\n\nvar resolveProp = function (target, props) {\n    return typeof target === 'function' ? target(props) : target;\n};\nvar poseDefault = function (pose, prop, defaultValue, resolveProps) {\n    return pose && pose[prop] !== undefined ? resolveProp(pose[prop], resolveProps) : defaultValue;\n};\nvar startChildAnimations = function (children, next, pose, props) {\n    var animations = [];\n    var delay = poseDefault(pose, 'delayChildren', 0, props);\n    var stagger = poseDefault(pose, 'staggerChildren', 0, props);\n    var staggerDirection = poseDefault(pose, 'staggerDirection', 1, props);\n    var maxStaggerDuration = (children.size - 1) * stagger;\n    var generateStaggerDuration = staggerDirection === 1 ? function (i) {\n        return i * stagger;\n    } : function (i) {\n        return maxStaggerDuration - i * stagger;\n    };\n    Array.from(children).forEach(function (child, i) {\n        animations.push(child.set(next, {\n            delay: delay + generateStaggerDuration(i)\n        }));\n    });\n    return animations;\n};\nvar resolveTransition = function (transition, key, value, props, convertTransitionDefinition, getInstantTransition) {\n    var resolvedTransition;\n    if (typeof transition === 'function') {\n        var resolvedTransitionMap = transition(props);\n        resolvedTransition = resolveTransition(resolvedTransitionMap, key, value, props, convertTransitionDefinition, getInstantTransition);\n    } else if (transition[key] || transition.default) {\n        var keyTransition = transition[key] || transition.default;\n        if (typeof keyTransition === 'function') {\n            resolvedTransition = keyTransition(props);\n        } else {\n            resolvedTransition = keyTransition;\n        }\n    } else {\n        resolvedTransition = transition;\n    }\n    return resolvedTransition === false ? getInstantTransition(value, props) : convertTransitionDefinition(value, resolvedTransition, props);\n};\nvar findInsertionIndex = function (poseList, priorityList, priorityIndex) {\n    var insertionIndex = 0;\n    for (var i = priorityIndex - 1; i >= 0; i--) {\n        var nextHighestPriorityIndex = poseList.indexOf(priorityList[i]);\n        if (nextHighestPriorityIndex !== -1) {\n            insertionIndex = nextHighestPriorityIndex + 1;\n            break;\n        }\n    }\n    return insertionIndex;\n};\nvar applyValues = function (toApply, values, props, setValue, setValueNative) {\n    (0,hey_listen__WEBPACK_IMPORTED_MODULE_0__.invariant)(typeof toApply === 'object', 'applyAtStart and applyAtEnd must be of type object');\n    return Object.keys(toApply).forEach(function (key) {\n        var valueToSet = resolveProp(toApply[key], props);\n        values.has(key) ? setValue(values.get(key), valueToSet) : setValueNative(key, valueToSet, props);\n    });\n};\nvar createPoseSetter = function (setterProps) {\n    var state = setterProps.state,\n        poses = setterProps.poses,\n        startAction = setterProps.startAction,\n        stopAction = setterProps.stopAction,\n        getInstantTransition = setterProps.getInstantTransition,\n        addActionDelay = setterProps.addActionDelay,\n        getTransitionProps = setterProps.getTransitionProps,\n        resolveTarget = setterProps.resolveTarget,\n        transformPose = setterProps.transformPose,\n        posePriority = setterProps.posePriority,\n        convertTransitionDefinition = setterProps.convertTransitionDefinition,\n        setValue = setterProps.setValue,\n        setValueNative = setterProps.setValueNative,\n        forceRender = setterProps.forceRender;\n    return function (next, nextProps, propagate) {\n        if (nextProps === void 0) {\n            nextProps = {};\n        }\n        if (propagate === void 0) {\n            propagate = true;\n        }\n        var children = state.children,\n            values = state.values,\n            props = state.props,\n            activeActions = state.activeActions,\n            activePoses = state.activePoses;\n        var _a = nextProps.delay,\n            delay = _a === void 0 ? 0 : _a;\n        var hasChildren = children.size;\n        var baseTransitionProps = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, props), nextProps);\n        var nextPose = poses[next];\n        var getChildAnimations = function () {\n            return hasChildren && propagate ? startChildAnimations(children, next, nextPose, baseTransitionProps) : [];\n        };\n        var getParentAnimations = function () {\n            if (!nextPose) return [];\n            var applyAtStart = nextPose.applyAtStart;\n            if (applyAtStart) {\n                applyValues(applyAtStart, values, baseTransitionProps, setValue, setValueNative);\n                if (forceRender) forceRender(baseTransitionProps);\n            }\n            if (transformPose) nextPose = transformPose(nextPose, next, state);\n            var preTransition = nextPose.preTransition,\n                getTransition = nextPose.transition,\n                applyAtEnd = nextPose.applyAtEnd;\n            if (preTransition) preTransition(baseTransitionProps);\n            var animations = Object.keys(getPoseValues(nextPose)).map(function (key) {\n                var valuePoses = activePoses.has(key) ? activePoses.get(key) : (activePoses.set(key, []), activePoses.get(key));\n                var existingIndex = valuePoses.indexOf(next);\n                if (existingIndex !== -1) valuePoses.splice(existingIndex, 1);\n                var priority = posePriority ? posePriority.indexOf(next) : 0;\n                var insertionIndex = priority <= 0 ? 0 : findInsertionIndex(valuePoses, posePriority, priority);\n                valuePoses.splice(insertionIndex, 0, next);\n                return insertionIndex === 0 ? new Promise(function (complete) {\n                    var value = values.get(key);\n                    var transitionProps = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, baseTransitionProps), { key: key,\n                        value: value });\n                    var target = resolveTarget(value, resolveProp(nextPose[key], transitionProps));\n                    if (activeActions.has(key)) stopAction(activeActions.get(key));\n                    var resolveTransitionProps = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ to: target }, transitionProps), getTransitionProps(value, target, transitionProps));\n                    var transition = resolveTransition(getTransition, key, value, resolveTransitionProps, convertTransitionDefinition, getInstantTransition);\n                    var poseDelay = delay || resolveProp(nextPose.delay, transitionProps);\n                    if (poseDelay) {\n                        transition = addActionDelay(poseDelay, transition);\n                    }\n                    activeActions.set(key, startAction(value, transition, complete));\n                }) : Promise.resolve();\n            });\n            return applyAtEnd ? [Promise.all(animations).then(function () {\n                applyValues(applyAtEnd, values, baseTransitionProps, setValue, setValueNative);\n            })] : animations;\n        };\n        if (nextPose && hasChildren) {\n            if (resolveProp(nextPose.beforeChildren, baseTransitionProps)) {\n                return Promise.all(getParentAnimations()).then(function () {\n                    return Promise.all(getChildAnimations());\n                });\n            } else if (resolveProp(nextPose.afterChildren, baseTransitionProps)) {\n                return Promise.all(getChildAnimations()).then(function () {\n                    return Promise.all(getParentAnimations());\n                });\n            }\n        }\n        return Promise.all((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArrays)(getParentAnimations(), getChildAnimations()));\n    };\n};\n\nvar DEFAULT_INITIAL_POSE = 'init';\nvar isScale = function (key) {\n    return key.includes('scale');\n};\nvar defaultReadValueFromSource = function (key) {\n    return isScale(key) ? 1 : 0;\n};\nvar readValueFromPose = function (pose, key, props) {\n    var valueToResolve = pose.applyAtEnd && pose.applyAtEnd[key] !== undefined ? pose.applyAtEnd[key] : pose[key] !== undefined ? pose[key] : pose.applyAtStart && pose.applyAtStart[key] !== undefined ? pose.applyAtStart[key] : 0;\n    return resolveProp(valueToResolve, props);\n};\nvar getPosesToSearch = function (pose) {\n    var posesToSearch = Array.isArray(pose) ? pose : [pose];\n    posesToSearch.push(DEFAULT_INITIAL_POSE);\n    return posesToSearch;\n};\nvar getInitialValue = function (poses, key, initialPose, props, readValueFromSource, activePoses) {\n    if (readValueFromSource === void 0) {\n        readValueFromSource = defaultReadValueFromSource;\n    }\n    var posesToSearch = getPosesToSearch(initialPose);\n    var pose = posesToSearch.filter(Boolean).find(function (name) {\n        var thisPose = poses[name];\n        return thisPose && (thisPose[key] !== undefined || thisPose.applyAtStart && thisPose.applyAtStart[key] !== undefined || thisPose.applyAtEnd && thisPose.applyAtEnd[key] !== undefined);\n    });\n    activePoses.set(key, [pose || DEFAULT_INITIAL_POSE]);\n    return pose ? readValueFromPose(poses[pose], key, props) : readValueFromSource(key, props);\n};\nvar createValues = function (values, _a) {\n    var userSetValues = _a.userSetValues,\n        createValue = _a.createValue,\n        convertValue = _a.convertValue,\n        readValueFromSource = _a.readValueFromSource,\n        initialPose = _a.initialPose,\n        poses = _a.poses,\n        activePoses = _a.activePoses,\n        props = _a.props;\n    return function (key) {\n        if (values.has(key)) return;\n        var value;\n        if (userSetValues && userSetValues[key] !== undefined) {\n            value = convertValue(userSetValues[key], key, props);\n        } else {\n            var initValue = getInitialValue(poses, key, initialPose, props, readValueFromSource, activePoses);\n            value = createValue(initValue, key, props);\n        }\n        values.set(key, value);\n    };\n};\nvar scrapeValuesFromPose = function (values, props) {\n    return function (key) {\n        var pose = props.poses[key];\n        Object.keys(getPoseValues(pose)).forEach(createValues(values, props));\n    };\n};\nvar getAncestorValue = function (key, fromParent, ancestors) {\n    if (fromParent === true) {\n        return ancestors[0] && ancestors[0].values.get(key);\n    } else {\n        var foundAncestor = ancestors.find(function (_a) {\n            var label = _a.label;\n            return label === fromParent;\n        });\n        return foundAncestor && foundAncestor.values.get(key);\n    }\n};\nvar bindPassiveValues = function (values, _a) {\n    var passive = _a.passive,\n        ancestorValues = _a.ancestorValues,\n        createValue = _a.createValue,\n        readValue = _a.readValue,\n        props = _a.props;\n    return function (key) {\n        var _a = passive[key],\n            valueKey = _a[0],\n            passiveProps = _a[1],\n            fromParent = _a[2];\n        var valueToBind = fromParent && ancestorValues.length ? getAncestorValue(valueKey, fromParent, ancestorValues) : values.has(valueKey) ? values.get(valueKey) : false;\n        if (!valueToBind) return;\n        var newValue = createValue(readValue(valueToBind), key, props, {\n            passiveParentKey: valueKey,\n            passiveParent: valueToBind,\n            passiveProps: passiveProps\n        });\n        values.set(key, newValue);\n    };\n};\nvar setNativeValues = function (_a) {\n    var setValueNative = _a.setValueNative,\n        initialPose = _a.initialPose,\n        props = _a.props,\n        poses = _a.poses;\n    var valuesHaveSet = new Set();\n    var setValues = function (pose, propKey) {\n        if (pose[propKey]) {\n            for (var key in pose[propKey]) {\n                if (!valuesHaveSet.has(key)) {\n                    valuesHaveSet.add(key);\n                    setValueNative(key, resolveProp(pose[propKey][key], props), props);\n                }\n            }\n        }\n    };\n    getPosesToSearch(initialPose).forEach(function (poseKey) {\n        var pose = poses[poseKey];\n        if (pose) {\n            setValues(pose, 'applyAtEnd');\n            setValues(pose, 'applyAtStart');\n        }\n    });\n};\nvar createValueMap = function (props) {\n    var poses = props.poses,\n        passive = props.passive;\n    var values = new Map();\n    Object.keys(poses).forEach(scrapeValuesFromPose(values, props));\n    setNativeValues(props);\n    if (passive) Object.keys(passive).forEach(bindPassiveValues(values, props));\n    return values;\n};\n\nvar applyDefaultTransition = function (pose, key, defaultTransitions) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, pose), { transition: defaultTransitions.has(key) ? defaultTransitions.get(key) : defaultTransitions.get('default') });\n};\nvar generateTransitions = function (poses, defaultTransitions) {\n    Object.keys(poses).forEach(function (key) {\n        var pose = poses[key];\n        (0,hey_listen__WEBPACK_IMPORTED_MODULE_0__.invariant)(typeof pose === 'object', \"Pose '\" + key + \"' is of invalid type. All poses should be objects.\");\n        poses[key] = pose.transition !== undefined ? pose : applyDefaultTransition(pose, key, defaultTransitions);\n    });\n    return poses;\n};\n\nvar sortByReversePriority = function (priorityOrder) {\n    return function (a, b) {\n        var aP = priorityOrder.indexOf(a);\n        var bP = priorityOrder.indexOf(b);\n        if (aP === -1 && bP !== -1) return -1;\n        if (aP !== -1 && bP === -1) return 1;\n        return aP - bP;\n    };\n};\n\nvar poseFactory = function (_a) {\n    var getDefaultProps = _a.getDefaultProps,\n        defaultTransitions = _a.defaultTransitions,\n        bindOnChange = _a.bindOnChange,\n        startAction = _a.startAction,\n        stopAction = _a.stopAction,\n        readValue = _a.readValue,\n        readValueFromSource = _a.readValueFromSource,\n        resolveTarget = _a.resolveTarget,\n        setValue = _a.setValue,\n        setValueNative = _a.setValueNative,\n        createValue = _a.createValue,\n        convertValue = _a.convertValue,\n        getInstantTransition = _a.getInstantTransition,\n        getTransitionProps = _a.getTransitionProps,\n        addActionDelay = _a.addActionDelay,\n        selectValueToRead = _a.selectValueToRead,\n        convertTransitionDefinition = _a.convertTransitionDefinition,\n        transformPose = _a.transformPose,\n        posePriority = _a.posePriority,\n        forceRender = _a.forceRender,\n        extendAPI = _a.extendAPI;\n    return function (config) {\n        var parentValues = config.parentValues,\n            _a = config.ancestorValues,\n            ancestorValues = _a === void 0 ? [] : _a;\n        if (parentValues) ancestorValues.unshift({ values: parentValues });\n        var activeActions = new Map();\n        var activePoses = new Map();\n        var children = new Set();\n        var poses = generateTransitions(selectPoses(config), defaultTransitions);\n        var _b = config.props,\n            props = _b === void 0 ? {} : _b;\n        if (getDefaultProps) props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, getDefaultProps(config)), props);\n        var passive = config.passive,\n            userSetValues = config.values,\n            _c = config.initialPose,\n            initialPose = _c === void 0 ? DEFAULT_INITIAL_POSE : _c;\n        var values = createValueMap({\n            poses: poses,\n            passive: passive,\n            ancestorValues: ancestorValues,\n            readValue: readValue,\n            setValueNative: setValueNative,\n            createValue: createValue,\n            convertValue: convertValue,\n            readValueFromSource: readValueFromSource,\n            userSetValues: userSetValues,\n            initialPose: initialPose,\n            activePoses: activePoses,\n            props: props\n        });\n        var state = {\n            activeActions: activeActions,\n            activePoses: activePoses,\n            children: children,\n            props: props,\n            values: values\n        };\n        var onChange = config.onChange;\n        if (onChange) Object.keys(onChange).forEach(bindOnChange(values, onChange));\n        var set = createPoseSetter({\n            state: state,\n            poses: poses,\n            getInstantTransition: getInstantTransition,\n            getTransitionProps: getTransitionProps,\n            convertTransitionDefinition: convertTransitionDefinition,\n            setValue: setValue,\n            setValueNative: setValueNative,\n            startAction: startAction,\n            stopAction: stopAction,\n            resolveTarget: resolveTarget,\n            addActionDelay: addActionDelay,\n            transformPose: transformPose,\n            posePriority: posePriority,\n            forceRender: forceRender\n        });\n        var has = function (poseName) {\n            return !!poses[poseName];\n        };\n        var api = {\n            set: set,\n            unset: function (poseName, poseProps) {\n                var posesToSet = [];\n                activePoses.forEach(function (valuePoses) {\n                    var poseIndex = valuePoses.indexOf(poseName);\n                    if (poseIndex === -1) return;\n                    var currentPose = valuePoses[0];\n                    valuePoses.splice(poseIndex, 1);\n                    var nextPose = valuePoses[0];\n                    if (nextPose === currentPose) return;\n                    if (posesToSet.indexOf(nextPose) === -1) {\n                        posesToSet.push(nextPose);\n                    }\n                });\n                var animationsToResolve = posesToSet.sort(sortByReversePriority(posePriority)).map(function (poseToSet) {\n                    return set(poseToSet, poseProps, false);\n                });\n                children.forEach(function (child) {\n                    return animationsToResolve.push(child.unset(poseName));\n                });\n                return Promise.all(animationsToResolve);\n            },\n            get: function (valueName) {\n                return valueName ? selectValueToRead(values.get(valueName)) : selectAllValues(values, selectValueToRead);\n            },\n            has: has,\n            setProps: function (newProps) {\n                return state.props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, state.props), newProps);\n            },\n            _addChild: function (childConfig, factory) {\n                var child = factory((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ initialPose: initialPose }, childConfig), { ancestorValues: (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArrays)([{ label: config.label, values: values }], ancestorValues) }));\n                children.add(child);\n                return child;\n            },\n            removeChild: function (child) {\n                return children.delete(child);\n            },\n            clearChildren: function () {\n                children.forEach(function (child) {\n                    return child.destroy();\n                });\n                children.clear();\n            },\n            destroy: function () {\n                activeActions.forEach(stopAction);\n                children.forEach(function (child) {\n                    return child.destroy();\n                });\n            }\n        };\n        return extendAPI(api, state, config);\n    };\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (poseFactory);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/pose-core/dist/pose-core.es.js\n");

/***/ }),

/***/ "../../../node_modules/prop-types/checkPropTypes.js":
/*!**********************************************************!*\
  !*** ../../../node_modules/prop-types/checkPropTypes.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar printWarning = function() {};\n\nif (true) {\n  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"../../../node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (true) {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvY2hlY2tQcm9wVHlwZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvdHJhZGVyLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2NoZWNrUHJvcFR5cGVzLmpzP2EzNWMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuICB2YXIgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG4gIHZhciBoYXMgPSBGdW5jdGlvbi5jYWxsLmJpbmQoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSk7XG5cbiAgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24odGV4dCkge1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgKyB0ZXh0O1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH07XG59XG5cbi8qKlxuICogQXNzZXJ0IHRoYXQgdGhlIHZhbHVlcyBtYXRjaCB3aXRoIHRoZSB0eXBlIHNwZWNzLlxuICogRXJyb3IgbWVzc2FnZXMgYXJlIG1lbW9yaXplZCBhbmQgd2lsbCBvbmx5IGJlIHNob3duIG9uY2UuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHR5cGVTcGVjcyBNYXAgb2YgbmFtZSB0byBhIFJlYWN0UHJvcFR5cGVcbiAqIEBwYXJhbSB7b2JqZWN0fSB2YWx1ZXMgUnVudGltZSB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIHR5cGUtY2hlY2tlZFxuICogQHBhcmFtIHtzdHJpbmd9IGxvY2F0aW9uIGUuZy4gXCJwcm9wXCIsIFwiY29udGV4dFwiLCBcImNoaWxkIGNvbnRleHRcIlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbXBvbmVudE5hbWUgTmFtZSBvZiB0aGUgY29tcG9uZW50IGZvciBlcnJvciBtZXNzYWdlcy5cbiAqIEBwYXJhbSB7P0Z1bmN0aW9ufSBnZXRTdGFjayBSZXR1cm5zIHRoZSBjb21wb25lbnQgc3RhY2suXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBjaGVja1Byb3BUeXBlcyh0eXBlU3BlY3MsIHZhbHVlcywgbG9jYXRpb24sIGNvbXBvbmVudE5hbWUsIGdldFN0YWNrKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgZm9yICh2YXIgdHlwZVNwZWNOYW1lIGluIHR5cGVTcGVjcykge1xuICAgICAgaWYgKGhhcyh0eXBlU3BlY3MsIHR5cGVTcGVjTmFtZSkpIHtcbiAgICAgICAgdmFyIGVycm9yO1xuICAgICAgICAvLyBQcm9wIHR5cGUgdmFsaWRhdGlvbiBtYXkgdGhyb3cuIEluIGNhc2UgdGhleSBkbywgd2UgZG9uJ3Qgd2FudCB0b1xuICAgICAgICAvLyBmYWlsIHRoZSByZW5kZXIgcGhhc2Ugd2hlcmUgaXQgZGlkbid0IGZhaWwgYmVmb3JlLiBTbyB3ZSBsb2cgaXQuXG4gICAgICAgIC8vIEFmdGVyIHRoZXNlIGhhdmUgYmVlbiBjbGVhbmVkIHVwLCB3ZSdsbCBsZXQgdGhlbSB0aHJvdy5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIGlzIGludGVudGlvbmFsbHkgYW4gaW52YXJpYW50IHRoYXQgZ2V0cyBjYXVnaHQuIEl0J3MgdGhlIHNhbWVcbiAgICAgICAgICAvLyBiZWhhdmlvciBhcyB3aXRob3V0IHRoaXMgc3RhdGVtZW50IGV4Y2VwdCB3aXRoIGEgYmV0dGVyIG1lc3NhZ2UuXG4gICAgICAgICAgaWYgKHR5cGVvZiB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdmFyIGVyciA9IEVycm9yKFxuICAgICAgICAgICAgICAoY29tcG9uZW50TmFtZSB8fCAnUmVhY3QgY2xhc3MnKSArICc6ICcgKyBsb2NhdGlvbiArICcgdHlwZSBgJyArIHR5cGVTcGVjTmFtZSArICdgIGlzIGludmFsaWQ7ICcgK1xuICAgICAgICAgICAgICAnaXQgbXVzdCBiZSBhIGZ1bmN0aW9uLCB1c3VhbGx5IGZyb20gdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLCBidXQgcmVjZWl2ZWQgYCcgKyB0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0gKyAnYC4nXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVycm9yID0gdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0odmFsdWVzLCB0eXBlU3BlY05hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBudWxsLCBSZWFjdFByb3BUeXBlc1NlY3JldCk7XG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgZXJyb3IgPSBleDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyb3IgJiYgIShlcnJvciBpbnN0YW5jZW9mIEVycm9yKSkge1xuICAgICAgICAgIHByaW50V2FybmluZyhcbiAgICAgICAgICAgIChjb21wb25lbnROYW1lIHx8ICdSZWFjdCBjbGFzcycpICsgJzogdHlwZSBzcGVjaWZpY2F0aW9uIG9mICcgK1xuICAgICAgICAgICAgbG9jYXRpb24gKyAnIGAnICsgdHlwZVNwZWNOYW1lICsgJ2AgaXMgaW52YWxpZDsgdGhlIHR5cGUgY2hlY2tlciAnICtcbiAgICAgICAgICAgICdmdW5jdGlvbiBtdXN0IHJldHVybiBgbnVsbGAgb3IgYW4gYEVycm9yYCBidXQgcmV0dXJuZWQgYSAnICsgdHlwZW9mIGVycm9yICsgJy4gJyArXG4gICAgICAgICAgICAnWW91IG1heSBoYXZlIGZvcmdvdHRlbiB0byBwYXNzIGFuIGFyZ3VtZW50IHRvIHRoZSB0eXBlIGNoZWNrZXIgJyArXG4gICAgICAgICAgICAnY3JlYXRvciAoYXJyYXlPZiwgaW5zdGFuY2VPZiwgb2JqZWN0T2YsIG9uZU9mLCBvbmVPZlR5cGUsIGFuZCAnICtcbiAgICAgICAgICAgICdzaGFwZSBhbGwgcmVxdWlyZSBhbiBhcmd1bWVudCkuJ1xuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IgJiYgIShlcnJvci5tZXNzYWdlIGluIGxvZ2dlZFR5cGVGYWlsdXJlcykpIHtcbiAgICAgICAgICAvLyBPbmx5IG1vbml0b3IgdGhpcyBmYWlsdXJlIG9uY2UgYmVjYXVzZSB0aGVyZSB0ZW5kcyB0byBiZSBhIGxvdCBvZiB0aGVcbiAgICAgICAgICAvLyBzYW1lIGVycm9yLlxuICAgICAgICAgIGxvZ2dlZFR5cGVGYWlsdXJlc1tlcnJvci5tZXNzYWdlXSA9IHRydWU7XG5cbiAgICAgICAgICB2YXIgc3RhY2sgPSBnZXRTdGFjayA/IGdldFN0YWNrKCkgOiAnJztcblxuICAgICAgICAgIHByaW50V2FybmluZyhcbiAgICAgICAgICAgICdGYWlsZWQgJyArIGxvY2F0aW9uICsgJyB0eXBlOiAnICsgZXJyb3IubWVzc2FnZSArIChzdGFjayAhPSBudWxsID8gc3RhY2sgOiAnJylcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogUmVzZXRzIHdhcm5pbmcgY2FjaGUgd2hlbiB0ZXN0aW5nLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmNoZWNrUHJvcFR5cGVzLnJlc2V0V2FybmluZ0NhY2hlID0gZnVuY3Rpb24oKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjaGVja1Byb3BUeXBlcztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/prop-types/checkPropTypes.js\n");

/***/ }),

/***/ "../../../node_modules/prop-types/factoryWithTypeCheckers.js":
/*!*******************************************************************!*\
  !*** ../../../node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactIs = __webpack_require__(/*! react-is */ \"../../../node_modules/react-is/index.js\");\nvar assign = __webpack_require__(/*! object-assign */ \"../../../node_modules/object-assign/index.js\");\n\nvar ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"../../../node_modules/prop-types/lib/ReactPropTypesSecret.js\");\nvar checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ \"../../../node_modules/prop-types/checkPropTypes.js\");\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (true) {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (true) {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if ( true && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (true) {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/prop-types/factoryWithTypeCheckers.js\n");

/***/ }),

/***/ "../../../node_modules/prop-types/index.js":
/*!*************************************************!*\
  !*** ../../../node_modules/prop-types/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (true) {\n  var ReactIs = __webpack_require__(/*! react-is */ \"../../../node_modules/react-is/index.js\");\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ \"../../../node_modules/prop-types/factoryWithTypeCheckers.js\")(ReactIs.isElement, throwOnDirectAccess);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvdHJhZGVyLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzPzcwZDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FJQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/prop-types/index.js\n");

/***/ }),

/***/ "../../../node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!********************************************************************!*\
  !*** ../../../node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L3RyYWRlci8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanM/YWQ4MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/prop-types/lib/ReactPropTypesSecret.js\n");

/***/ }),

/***/ "../../../node_modules/react-content-loader/dist/react-content-loader.es.js":
/*!**********************************************************************************!*\
  !*** ../../../node_modules/react-content-loader/dist/react-content-loader.es.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"BulletList\": () => (/* binding */ ReactContentLoaderBulletList),\n/* harmony export */   \"Code\": () => (/* binding */ ReactContentLoaderCode),\n/* harmony export */   \"Facebook\": () => (/* binding */ ReactContentLoaderFacebook),\n/* harmony export */   \"Instagram\": () => (/* binding */ ReactContentLoaderInstagram),\n/* harmony export */   \"List\": () => (/* binding */ ReactContentLoaderListStyle)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nvar uid = (function () {\r\n    return Math.random()\r\n        .toString(36)\r\n        .substring(2);\r\n});\n\nvar Svg = (function (_a) {\r\n    var rtl = _a.rtl, speed = _a.speed, interval = _a.interval, style = _a.style, width = _a.width, height = _a.height, baseUrl = _a.baseUrl, gradientRatio = _a.gradientRatio, animate = _a.animate, ariaLabel = _a.ariaLabel, children = _a.children, className = _a.className, uniquekey = _a.uniquekey, primaryColor = _a.primaryColor, primaryOpacity = _a.primaryOpacity, secondaryColor = _a.secondaryColor, secondaryOpacity = _a.secondaryOpacity, preserveAspectRatio = _a.preserveAspectRatio, props = __rest(_a, [\"rtl\", \"speed\", \"interval\", \"style\", \"width\", \"height\", \"baseUrl\", \"gradientRatio\", \"animate\", \"ariaLabel\", \"children\", \"className\", \"uniquekey\", \"primaryColor\", \"primaryOpacity\", \"secondaryColor\", \"secondaryOpacity\", \"preserveAspectRatio\"]);\r\n    var idClip = uniquekey ? uniquekey + \"-idClip\" : uid();\r\n    var idGradient = uniquekey ? uniquekey + \"-idGradient\" : uid();\r\n    var rtlStyle = rtl ? { transform: 'scaleX(-1)' } : {};\r\n    var keyTimes = \"0; \" + interval + \"; 1\";\r\n    var dur = speed + \"s\";\r\n    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"svg\", __assign({ role: \"img\", style: __assign(__assign({}, style), rtlStyle), className: className, \"aria-label\": ariaLabel ? ariaLabel : null, viewBox: \"0 0 \" + width + \" \" + height, preserveAspectRatio: preserveAspectRatio }, props),\r\n        ariaLabel ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"title\", null, ariaLabel) : null,\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"0\", y: \"0\", width: width, height: height, clipPath: \"url(\" + baseUrl + \"#\" + idClip + \")\", style: { fill: \"url(\" + baseUrl + \"#\" + idGradient + \")\" } }),\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"defs\", null,\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"clipPath\", { id: idClip }, children),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"linearGradient\", { id: idGradient },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"stop\", { offset: \"0%\", stopColor: primaryColor, stopOpacity: primaryOpacity }, animate && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"animate\", { attributeName: \"offset\", values: -gradientRatio + \"; \" + -gradientRatio + \"; 1\", keyTimes: keyTimes, dur: dur, repeatCount: \"indefinite\" }))),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"stop\", { offset: \"50%\", stopColor: secondaryColor, stopOpacity: secondaryOpacity }, animate && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"animate\", { attributeName: \"offset\", values: -gradientRatio / 2 + \"; \" + -gradientRatio / 2 + \"; \" + (1 +\r\n                        gradientRatio / 2), keyTimes: keyTimes, dur: dur, repeatCount: \"indefinite\" }))),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"stop\", { offset: \"100%\", stopColor: primaryColor, stopOpacity: primaryOpacity }, animate && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"animate\", { attributeName: \"offset\", values: \"0; 0; \" + (1 + gradientRatio), keyTimes: keyTimes, dur: dur, repeatCount: \"indefinite\" })))))));\r\n});\n\nvar defaultProps = {\r\n    animate: true,\r\n    ariaLabel: 'Loading interface...',\r\n    baseUrl: '',\r\n    gradientRatio: 2,\r\n    height: 130,\r\n    interval: 0.25,\r\n    preserveAspectRatio: 'none',\r\n    primaryColor: '#f0f0f0',\r\n    primaryOpacity: 1,\r\n    rtl: false,\r\n    secondaryColor: '#e0e0e0',\r\n    secondaryOpacity: 1,\r\n    speed: 2,\r\n    style: {},\r\n    width: 400,\r\n};\r\nvar InitialComponent = function (props) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"0\", y: \"0\", rx: \"5\", ry: \"5\", width: props.width, height: props.height })); };\r\nvar ContentLoader = function (props) {\r\n    var mergedProps = __assign(__assign({}, defaultProps), props);\r\n    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Svg, __assign({}, mergedProps), props.children || (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(InitialComponent, __assign({}, mergedProps))));\r\n};\n\nvar ReactContentLoaderFacebook = function (props) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContentLoader, __assign({}, props),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"70\", y: \"15\", rx: \"4\", ry: \"4\", width: \"117\", height: \"6.4\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"70\", y: \"35\", rx: \"3\", ry: \"3\", width: \"85\", height: \"6.4\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"0\", y: \"80\", rx: \"3\", ry: \"3\", width: \"350\", height: \"6.4\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"0\", y: \"100\", rx: \"3\", ry: \"3\", width: \"380\", height: \"6.4\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"0\", y: \"120\", rx: \"3\", ry: \"3\", width: \"201\", height: \"6.4\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\", { cx: \"30\", cy: \"30\", r: \"30\" }))); };\n\nvar ReactContentLoaderInstagram = function (props) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContentLoader, __assign({}, props, { height: 480 }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\", { cx: \"30\", cy: \"30\", r: \"30\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"75\", y: \"13\", rx: \"4\", ry: \"4\", width: \"100\", height: \"13\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"75\", y: \"37\", rx: \"4\", ry: \"4\", width: \"50\", height: \"8\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"0\", y: \"70\", rx: \"5\", ry: \"5\", width: \"400\", height: \"400\" }))); };\n\nvar ReactContentLoaderCode = function (props) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContentLoader, __assign({}, props),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"0\", y: \"0\", rx: \"3\", ry: \"3\", width: \"70\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"80\", y: \"0\", rx: \"3\", ry: \"3\", width: \"100\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"190\", y: \"0\", rx: \"3\", ry: \"3\", width: \"10\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"15\", y: \"20\", rx: \"3\", ry: \"3\", width: \"130\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"155\", y: \"20\", rx: \"3\", ry: \"3\", width: \"130\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"15\", y: \"40\", rx: \"3\", ry: \"3\", width: \"90\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"115\", y: \"40\", rx: \"3\", ry: \"3\", width: \"60\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"185\", y: \"40\", rx: \"3\", ry: \"3\", width: \"60\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"0\", y: \"60\", rx: \"3\", ry: \"3\", width: \"30\", height: \"10\" }))); };\n\nvar ReactContentLoaderListStyle = function (props) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContentLoader, __assign({}, props),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"0\", y: \"0\", rx: \"3\", ry: \"3\", width: \"250\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"20\", y: \"20\", rx: \"3\", ry: \"3\", width: \"220\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"20\", y: \"40\", rx: \"3\", ry: \"3\", width: \"170\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"0\", y: \"60\", rx: \"3\", ry: \"3\", width: \"250\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"20\", y: \"80\", rx: \"3\", ry: \"3\", width: \"200\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"20\", y: \"100\", rx: \"3\", ry: \"3\", width: \"80\", height: \"10\" }))); };\n\nvar ReactContentLoaderBulletList = function (props) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContentLoader, __assign({}, props),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\", { cx: \"10\", cy: \"20\", r: \"8\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"25\", y: \"15\", rx: \"5\", ry: \"5\", width: \"220\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\", { cx: \"10\", cy: \"50\", r: \"8\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"25\", y: \"45\", rx: \"5\", ry: \"5\", width: \"220\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\", { cx: \"10\", cy: \"80\", r: \"8\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"25\", y: \"75\", rx: \"5\", ry: \"5\", width: \"220\", height: \"10\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\", { cx: \"10\", cy: \"110\", r: \"8\" }),\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"rect\", { x: \"25\", y: \"105\", rx: \"5\", ry: \"5\", width: \"220\", height: \"10\" }))); };\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ContentLoader);\n\n//# sourceMappingURL=react-content-loader.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/react-content-loader/dist/react-content-loader.es.js\n");

/***/ }),

/***/ "../../../node_modules/react-is/cjs/react-is.development.js":
/*!******************************************************************!*\
  !*** ../../../node_modules/react-is/cjs/react-is.development.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/react-is/cjs/react-is.development.js\n");

/***/ }),

/***/ "../../../node_modules/react-is/index.js":
/*!***********************************************!*\
  !*** ../../../node_modules/react-is/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"../../../node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L3RyYWRlci8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/NzZkZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLGFBRUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/react-is/index.js\n");

/***/ }),

/***/ "../../../node_modules/react-loadable/lib/index.js":
/*!*********************************************************!*\
  !*** ../../../node_modules/react-loadable/lib/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar React = __webpack_require__(/*! react */ \"react\");\nvar PropTypes = __webpack_require__(/*! prop-types */ \"../../../node_modules/prop-types/index.js\");\n\nvar ALL_INITIALIZERS = [];\nvar READY_INITIALIZERS = [];\n\nfunction isWebpackReady(getModuleIds) {\n  if (( false ? 0 : _typeof(__webpack_require__.m)) !== \"object\") {\n    return false;\n  }\n\n  return getModuleIds().every(function (moduleId) {\n    return typeof moduleId !== \"undefined\" && typeof __webpack_require__.m[moduleId] !== \"undefined\";\n  });\n}\n\nfunction load(loader) {\n  var promise = loader();\n\n  var state = {\n    loading: true,\n    loaded: null,\n    error: null\n  };\n\n  state.promise = promise.then(function (loaded) {\n    state.loading = false;\n    state.loaded = loaded;\n    return loaded;\n  }).catch(function (err) {\n    state.loading = false;\n    state.error = err;\n    throw err;\n  });\n\n  return state;\n}\n\nfunction loadMap(obj) {\n  var state = {\n    loading: false,\n    loaded: {},\n    error: null\n  };\n\n  var promises = [];\n\n  try {\n    Object.keys(obj).forEach(function (key) {\n      var result = load(obj[key]);\n\n      if (!result.loading) {\n        state.loaded[key] = result.loaded;\n        state.error = result.error;\n      } else {\n        state.loading = true;\n      }\n\n      promises.push(result.promise);\n\n      result.promise.then(function (res) {\n        state.loaded[key] = res;\n      }).catch(function (err) {\n        state.error = err;\n      });\n    });\n  } catch (err) {\n    state.error = err;\n  }\n\n  state.promise = Promise.all(promises).then(function (res) {\n    state.loading = false;\n    return res;\n  }).catch(function (err) {\n    state.loading = false;\n    throw err;\n  });\n\n  return state;\n}\n\nfunction resolve(obj) {\n  return obj && obj.__esModule ? obj.default : obj;\n}\n\nfunction render(loaded, props) {\n  return React.createElement(resolve(loaded), props);\n}\n\nfunction createLoadableComponent(loadFn, options) {\n  var _class, _temp;\n\n  if (!options.loading) {\n    throw new Error(\"react-loadable requires a `loading` component\");\n  }\n\n  var opts = Object.assign({\n    loader: null,\n    loading: null,\n    delay: 200,\n    timeout: null,\n    render: render,\n    webpack: null,\n    modules: null\n  }, options);\n\n  var res = null;\n\n  function init() {\n    if (!res) {\n      res = loadFn(opts.loader);\n    }\n    return res.promise;\n  }\n\n  ALL_INITIALIZERS.push(init);\n\n  if (typeof opts.webpack === \"function\") {\n    READY_INITIALIZERS.push(function () {\n      if (isWebpackReady(opts.webpack)) {\n        return init();\n      }\n    });\n  }\n\n  return _temp = _class = function (_React$Component) {\n    _inherits(LoadableComponent, _React$Component);\n\n    function LoadableComponent(props) {\n      _classCallCheck(this, LoadableComponent);\n\n      var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n      _this.retry = function () {\n        _this.setState({ error: null, loading: true, timedOut: false });\n        res = loadFn(opts.loader);\n        _this._loadModule();\n      };\n\n      init();\n\n      _this.state = {\n        error: res.error,\n        pastDelay: false,\n        timedOut: false,\n        loading: res.loading,\n        loaded: res.loaded\n      };\n      return _this;\n    }\n\n    LoadableComponent.preload = function preload() {\n      return init();\n    };\n\n    LoadableComponent.prototype.componentWillMount = function componentWillMount() {\n      this._mounted = true;\n      this._loadModule();\n    };\n\n    LoadableComponent.prototype._loadModule = function _loadModule() {\n      var _this2 = this;\n\n      if (this.context.loadable && Array.isArray(opts.modules)) {\n        opts.modules.forEach(function (moduleName) {\n          _this2.context.loadable.report(moduleName);\n        });\n      }\n\n      if (!res.loading) {\n        return;\n      }\n\n      if (typeof opts.delay === \"number\") {\n        if (opts.delay === 0) {\n          this.setState({ pastDelay: true });\n        } else {\n          this._delay = setTimeout(function () {\n            _this2.setState({ pastDelay: true });\n          }, opts.delay);\n        }\n      }\n\n      if (typeof opts.timeout === \"number\") {\n        this._timeout = setTimeout(function () {\n          _this2.setState({ timedOut: true });\n        }, opts.timeout);\n      }\n\n      var update = function update() {\n        if (!_this2._mounted) {\n          return;\n        }\n\n        _this2.setState({\n          error: res.error,\n          loaded: res.loaded,\n          loading: res.loading\n        });\n\n        _this2._clearTimeouts();\n      };\n\n      res.promise.then(function () {\n        update();\n      }).catch(function (err) {\n        update();\n      });\n    };\n\n    LoadableComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n      this._mounted = false;\n      this._clearTimeouts();\n    };\n\n    LoadableComponent.prototype._clearTimeouts = function _clearTimeouts() {\n      clearTimeout(this._delay);\n      clearTimeout(this._timeout);\n    };\n\n    LoadableComponent.prototype.render = function render() {\n      if (this.state.loading || this.state.error) {\n        return React.createElement(opts.loading, {\n          isLoading: this.state.loading,\n          pastDelay: this.state.pastDelay,\n          timedOut: this.state.timedOut,\n          error: this.state.error,\n          retry: this.retry\n        });\n      } else if (this.state.loaded) {\n        return opts.render(this.state.loaded, this.props);\n      } else {\n        return null;\n      }\n    };\n\n    return LoadableComponent;\n  }(React.Component), _class.contextTypes = {\n    loadable: PropTypes.shape({\n      report: PropTypes.func.isRequired\n    })\n  }, _temp;\n}\n\nfunction Loadable(opts) {\n  return createLoadableComponent(load, opts);\n}\n\nfunction LoadableMap(opts) {\n  if (typeof opts.render !== \"function\") {\n    throw new Error(\"LoadableMap requires a `render(loaded, props)` function\");\n  }\n\n  return createLoadableComponent(loadMap, opts);\n}\n\nLoadable.Map = LoadableMap;\n\nvar Capture = function (_React$Component2) {\n  _inherits(Capture, _React$Component2);\n\n  function Capture() {\n    _classCallCheck(this, Capture);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Capture.prototype.getChildContext = function getChildContext() {\n    return {\n      loadable: {\n        report: this.props.report\n      }\n    };\n  };\n\n  Capture.prototype.render = function render() {\n    return React.Children.only(this.props.children);\n  };\n\n  return Capture;\n}(React.Component);\n\nCapture.propTypes = {\n  report: PropTypes.func.isRequired\n};\nCapture.childContextTypes = {\n  loadable: PropTypes.shape({\n    report: PropTypes.func.isRequired\n  }).isRequired\n};\n\n\nLoadable.Capture = Capture;\n\nfunction flushInitializers(initializers) {\n  var promises = [];\n\n  while (initializers.length) {\n    var init = initializers.pop();\n    promises.push(init());\n  }\n\n  return Promise.all(promises).then(function () {\n    if (initializers.length) {\n      return flushInitializers(initializers);\n    }\n  });\n}\n\nLoadable.preloadAll = function () {\n  return new Promise(function (resolve, reject) {\n    flushInitializers(ALL_INITIALIZERS).then(resolve, reject);\n  });\n};\n\nLoadable.preloadReady = function () {\n  return new Promise(function (resolve, reject) {\n    // We always will resolve, errors should be handled within loading UIs.\n    flushInitializers(READY_INITIALIZERS).then(resolve, resolve);\n  });\n};\n\nmodule.exports = Loadable;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/react-loadable/lib/index.js\n");

/***/ }),

/***/ "../../../node_modules/react-pose/dist/react-pose.es.js":
/*!**************************************************************!*\
  !*** ../../../node_modules/react-pose/dist/react-pose.es.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"Transition\": () => (/* binding */ Transition),\n/* harmony export */   \"PoseGroup\": () => (/* binding */ PoseGroup)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ \"../../../node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var popmotion_pose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! popmotion-pose */ \"../../../node_modules/popmotion-pose/dist/popmotion-pose.es.js\");\n/* harmony import */ var _emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/is-prop-valid */ \"../../../node_modules/react-pose/node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js\");\n/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! hey-listen */ \"../../../node_modules/hey-listen/dist/hey-listen.es.js\");\n\n\n\n\n\n\nvar hasChanged = function (prev, next) {\r\n    if (prev === next)\r\n        return false;\r\n    var prevIsArray = Array.isArray(prev);\r\n    var nextIsArray = Array.isArray(next);\r\n    if (prevIsArray !== nextIsArray || (!prevIsArray && !nextIsArray)) {\r\n        return true;\r\n    }\r\n    else if (prevIsArray && nextIsArray) {\r\n        var numPrev = prev.length;\r\n        var numNext = next.length;\r\n        if (numPrev !== numNext)\r\n            return true;\r\n        for (var i = 0; i < numPrev; i++) {\r\n            if (prev[i] !== next[i])\r\n                return true;\r\n        }\r\n    }\r\n    return false;\r\n};\n\nvar pickAssign = function (shouldPick, sources) {\r\n    return sources.reduce(function (picked, source) {\r\n        for (var key in source) {\r\n            if (shouldPick(key)) {\r\n                picked[key] = source[key];\r\n            }\r\n        }\r\n        return picked;\r\n    }, {});\r\n};\n\nvar _a = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({}), PoseParentConsumer = _a.Consumer, PoseParentProvider = _a.Provider;\r\nvar calcPopFromFlowStyle = function (el) {\r\n    var offsetTop = el.offsetTop, offsetLeft = el.offsetLeft, offsetWidth = el.offsetWidth, offsetHeight = el.offsetHeight;\r\n    return {\r\n        position: 'absolute',\r\n        top: offsetTop,\r\n        left: offsetLeft,\r\n        width: offsetWidth,\r\n        height: offsetHeight\r\n    };\r\n};\r\nvar hasPose = function (pose, key) {\r\n    return Array.isArray(pose) ? pose.indexOf(key) !== -1 : pose === key;\r\n};\r\nvar objectToMap = function (obj) {\r\n    return Object.keys(obj).reduce(function (map, key) {\r\n        map.set(key, { raw: obj[key] });\r\n        return map;\r\n    }, new Map());\r\n};\r\nvar testAlwaysTrue = function () { return true; };\r\nvar filterProps = function (_a) {\r\n    var elementType = _a.elementType, poseConfig = _a.poseConfig, onValueChange = _a.onValueChange, innerRef = _a.innerRef, _pose = _a._pose, pose = _a.pose, initialPose = _a.initialPose, poseKey = _a.poseKey, onPoseComplete = _a.onPoseComplete, getParentPoseConfig = _a.getParentPoseConfig, registerChild = _a.registerChild, onUnmount = _a.onUnmount, getInitialPoseFromParent = _a.getInitialPoseFromParent, popFromFlow = _a.popFromFlow, values = _a.values, parentValues = _a.parentValues, onDragStart = _a.onDragStart, onDragEnd = _a.onDragEnd, onPressStart = _a.onPressStart, onPressEnd = _a.onPressEnd, props = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__rest)(_a, [\"elementType\", \"poseConfig\", \"onValueChange\", \"innerRef\", \"_pose\", \"pose\", \"initialPose\", \"poseKey\", \"onPoseComplete\", \"getParentPoseConfig\", \"registerChild\", \"onUnmount\", \"getInitialPoseFromParent\", \"popFromFlow\", \"values\", \"parentValues\", \"onDragStart\", \"onDragEnd\", \"onPressStart\", \"onPressEnd\"]);\r\n    return props;\r\n};\r\nvar PoseElement = (function (_super) {\r\n    (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__extends)(PoseElement, _super);\r\n    function PoseElement(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.children = new Set();\r\n        _this.childrenHandlers = {\r\n            registerChild: function (props) {\r\n                _this.children.add(props);\r\n                if (_this.poser)\r\n                    _this.flushChildren();\r\n            },\r\n            onUnmount: function (child) { return _this.poser.removeChild(child); },\r\n            getParentPoseConfig: function () { return _this.poseConfig; },\r\n            getInitialPoseFromParent: function () { return _this.getInitialPose(); }\r\n        };\r\n        _this.setRef = function (ref) {\r\n            (0,hey_listen__WEBPACK_IMPORTED_MODULE_3__.warning)(ref === null || (ref instanceof Element && _this.ref === undefined), 'ref must be provided to the same DOM component for the entire lifecycle of a posed component.');\r\n            _this.ref = ref;\r\n            var innerRef = _this.props.innerRef;\r\n            if (!innerRef)\r\n                return;\r\n            if (typeof innerRef === 'function') {\r\n                innerRef(ref);\r\n            }\r\n            else {\r\n                innerRef.current = ref;\r\n            }\r\n        };\r\n        _this.shouldForwardProp =\r\n            typeof _this.props.elementType === 'string' ? _emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_2__.default : testAlwaysTrue;\r\n        var poseConfig = _this.props.poseConfig;\r\n        _this.poseConfig =\r\n            typeof poseConfig === 'function'\r\n                ? poseConfig(filterProps(props))\r\n                : poseConfig;\r\n        return _this;\r\n    }\r\n    PoseElement.prototype.getInitialPose = function () {\r\n        var _a = this.props, getInitialPoseFromParent = _a.getInitialPoseFromParent, pose = _a.pose, _pose = _a._pose, initialPose = _a.initialPose;\r\n        if (initialPose) {\r\n            return initialPose;\r\n        }\r\n        else {\r\n            var parentPose = getInitialPoseFromParent && getInitialPoseFromParent();\r\n            var initialPoses = (Array.isArray(parentPose)\r\n                ? parentPose\r\n                : [parentPose])\r\n                .concat(pose, _pose)\r\n                .filter(Boolean);\r\n            return initialPoses.length > 0 ? initialPoses : undefined;\r\n        }\r\n    };\r\n    PoseElement.prototype.getFirstPose = function () {\r\n        var _a = this.props, initialPose = _a.initialPose, pose = _a.pose, _pose = _a._pose;\r\n        if (!initialPose)\r\n            return;\r\n        var firstPose = (Array.isArray(pose) ? pose : [pose])\r\n            .concat(_pose)\r\n            .filter(Boolean);\r\n        return firstPose.length === 1 ? firstPose[0] : firstPose;\r\n    };\r\n    PoseElement.prototype.getSetProps = function () {\r\n        var props = filterProps(this.props);\r\n        if (this.props.popFromFlow && this.ref && this.ref instanceof HTMLElement) {\r\n            if (!this.popStyle) {\r\n                props.style = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, props.style), calcPopFromFlowStyle(this.ref));\r\n                this.popStyle = props.style;\r\n            }\r\n            else {\r\n                props.style = this.popStyle;\r\n            }\r\n        }\r\n        else {\r\n            this.popStyle = null;\r\n        }\r\n        return props;\r\n    };\r\n    PoseElement.prototype.componentDidMount = function () {\r\n        var _this = this;\r\n        (0,hey_listen__WEBPACK_IMPORTED_MODULE_3__.invariant)(this.ref instanceof Element, \"No valid DOM ref found. If you're converting an existing component via posed(Component), you must ensure you're passing the ref to the host DOM node via the React.forwardRef function.\");\r\n        var _a = this.props, onValueChange = _a.onValueChange, registerChild = _a.registerChild, values = _a.values, parentValues = _a.parentValues, onDragStart = _a.onDragStart, onDragEnd = _a.onDragEnd, onPressStart = _a.onPressStart, onPressEnd = _a.onPressEnd;\r\n        var config = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, this.poseConfig), { initialPose: this.getInitialPose(), values: values || this.poseConfig.values, parentValues: parentValues ? objectToMap(parentValues) : undefined, props: this.getSetProps(), onDragStart: onDragStart,\r\n            onDragEnd: onDragEnd,\r\n            onPressStart: onPressStart,\r\n            onPressEnd: onPressEnd, onChange: onValueChange });\r\n        if (!registerChild) {\r\n            this.initPoser((0,popmotion_pose__WEBPACK_IMPORTED_MODULE_1__.default)(this.ref, config));\r\n        }\r\n        else {\r\n            registerChild({\r\n                element: this.ref,\r\n                poseConfig: config,\r\n                onRegistered: function (poser) { return _this.initPoser(poser); }\r\n            });\r\n        }\r\n    };\r\n    PoseElement.prototype.getSnapshotBeforeUpdate = function () {\r\n        var _a = this.props, pose = _a.pose, _pose = _a._pose;\r\n        if (hasPose(pose, 'flip') || hasPose(_pose, 'flip'))\r\n            this.poser.measure();\r\n        return null;\r\n    };\r\n    PoseElement.prototype.componentDidUpdate = function (prevProps) {\r\n        var _a = this.props, pose = _a.pose, _pose = _a._pose, poseKey = _a.poseKey;\r\n        this.poser.setProps(this.getSetProps());\r\n        if (poseKey !== prevProps.poseKey ||\r\n            hasChanged(prevProps.pose, pose) ||\r\n            pose === 'flip') {\r\n            this.setPose(pose);\r\n        }\r\n        if (_pose !== prevProps._pose || _pose === 'flip')\r\n            this.setPose(_pose);\r\n    };\r\n    PoseElement.prototype.componentWillUnmount = function () {\r\n        if (!this.poser)\r\n            return;\r\n        var onUnmount = this.props.onUnmount;\r\n        if (onUnmount)\r\n            onUnmount(this.poser);\r\n        this.poser.destroy();\r\n    };\r\n    PoseElement.prototype.initPoser = function (poser) {\r\n        this.poser = poser;\r\n        this.flushChildren();\r\n        var firstPose = this.getFirstPose();\r\n        if (firstPose)\r\n            this.setPose(firstPose);\r\n    };\r\n    PoseElement.prototype.setPose = function (pose) {\r\n        var _this = this;\r\n        var onPoseComplete = this.props.onPoseComplete;\r\n        var poseList = Array.isArray(pose) ? pose : [pose];\r\n        Promise.all(poseList.map(function (key) { return key && _this.poser.set(key); })).then(function () { return onPoseComplete && onPoseComplete(pose); });\r\n    };\r\n    PoseElement.prototype.flushChildren = function () {\r\n        var _this = this;\r\n        this.children.forEach(function (_a) {\r\n            var element = _a.element, poseConfig = _a.poseConfig, onRegistered = _a.onRegistered;\r\n            return onRegistered(_this.poser.addChild(element, poseConfig));\r\n        });\r\n        this.children.clear();\r\n    };\r\n    PoseElement.prototype.render = function () {\r\n        var elementType = this.props.elementType;\r\n        return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(PoseParentProvider, { value: this.childrenHandlers }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(elementType, pickAssign(this.shouldForwardProp, [\r\n            this.getSetProps(),\r\n            { ref: this.setRef }\r\n        ]))));\r\n    };\r\n    return PoseElement;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\n\nvar supportedElements = [\r\n    'a',\r\n    'article',\r\n    'aside',\r\n    'audio',\r\n    'b',\r\n    'blockquote',\r\n    'body',\r\n    'br',\r\n    'button',\r\n    'canvas',\r\n    'caption',\r\n    'cite',\r\n    'code',\r\n    'col',\r\n    'colgroup',\r\n    'data',\r\n    'datalist',\r\n    'dialog',\r\n    'div',\r\n    'em',\r\n    'embed',\r\n    'fieldset',\r\n    'figcaption',\r\n    'figure',\r\n    'footer',\r\n    'form',\r\n    'h1',\r\n    'h2',\r\n    'h3',\r\n    'h4',\r\n    'h5',\r\n    'h6',\r\n    'head',\r\n    'header',\r\n    'hgroup',\r\n    'hr',\r\n    'i',\r\n    'iframe',\r\n    'img',\r\n    'input',\r\n    'label',\r\n    'legend',\r\n    'li',\r\n    'nav',\r\n    'object',\r\n    'ol',\r\n    'option',\r\n    'p',\r\n    'param',\r\n    'picture',\r\n    'pre',\r\n    'progress',\r\n    'q',\r\n    'section',\r\n    'select',\r\n    'span',\r\n    'strong',\r\n    'table',\r\n    'tbody',\r\n    'td',\r\n    'textarea',\r\n    'tfoot',\r\n    'th',\r\n    'thead',\r\n    'time',\r\n    'title',\r\n    'tr',\r\n    'ul',\r\n    'video',\r\n    'circle',\r\n    'clipPath',\r\n    'defs',\r\n    'ellipse',\r\n    'g',\r\n    'image',\r\n    'line',\r\n    'linearGradient',\r\n    'mask',\r\n    'path',\r\n    'pattern',\r\n    'polygon',\r\n    'polyline',\r\n    'radialGradient',\r\n    'rect',\r\n    'stop',\r\n    'svg',\r\n    'text',\r\n    'tspan'\r\n];\n\nvar componentCache = new Map();\r\nvar createComponentFactory = function (key) {\r\n    var componentFactory = function (poseConfig) {\r\n        if (poseConfig === void 0) { poseConfig = {}; }\r\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function (_a, ref) {\r\n            var _b = _a.withParent, withParent = _b === void 0 ? true : _b, props = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__rest)(_a, [\"withParent\"]);\r\n            (0,hey_listen__WEBPACK_IMPORTED_MODULE_3__.warning)(props.innerRef === undefined, 'innerRef is deprecated. Please use ref instead.');\r\n            return !withParent || props.parentValues ? (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(PoseElement, (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ poseConfig: poseConfig, innerRef: ref, elementType: key }, props))) : (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(PoseParentConsumer, null, function (parentCtx) { return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(PoseElement, (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ poseConfig: poseConfig, elementType: key, innerRef: ref }, props, parentCtx))); }));\r\n        });\r\n    };\r\n    componentCache.set(key, componentFactory);\r\n    return componentFactory;\r\n};\r\nvar getComponentFactory = function (key) {\r\n    return componentCache.has(key)\r\n        ? componentCache.get(key)\r\n        : createComponentFactory(key);\r\n};\r\nvar posed = (function (component) {\r\n    return getComponentFactory(component);\r\n});\r\nsupportedElements.reduce(function (acc, key) {\r\n    acc[key] = createComponentFactory(key);\r\n    return acc;\r\n}, posed);\n\nvar getKey = function (child) {\r\n    (0,hey_listen__WEBPACK_IMPORTED_MODULE_3__.invariant)(child && child.key !== null, 'Every child of Transition must be given a unique key');\r\n    var childKey = typeof child.key === 'number' ? child.key.toString() : child.key;\r\n    return childKey.replace('.$', '');\r\n};\r\nvar prependProps = function (element, props) {\r\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(element.type, (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ key: element.key, ref: element.ref }, props), element.props));\r\n};\r\nvar handleTransition = function (_a, _b) {\r\n    var displayedChildren = _b.displayedChildren, finishedLeaving = _b.finishedLeaving, hasInitialized = _b.hasInitialized, indexedChildren = _b.indexedChildren, scheduleChildRemoval = _b.scheduleChildRemoval;\r\n    var incomingChildren = _a.children, preEnterPose = _a.preEnterPose, enterPose = _a.enterPose, exitPose = _a.exitPose, animateOnMount = _a.animateOnMount, enterAfterExit = _a.enterAfterExit, flipMove = _a.flipMove, onRest = _a.onRest, propsForChildren = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__rest)(_a, [\"children\", \"preEnterPose\", \"enterPose\", \"exitPose\", \"animateOnMount\", \"enterAfterExit\", \"flipMove\", \"onRest\"]);\r\n    var targetChildren = makeChildList(incomingChildren);\r\n    var nextState = {\r\n        displayedChildren: []\r\n    };\r\n    if (true) {\r\n        (0,hey_listen__WEBPACK_IMPORTED_MODULE_3__.warning)(!propsForChildren.onPoseComplete, \"<Transition/> (or <PoseGroup/>) doesn't accept onPoseComplete prop.\");\r\n    }\r\n    var prevKeys = displayedChildren.map(getKey);\r\n    var nextKeys = targetChildren.map(getKey);\r\n    var hasPropsForChildren = Object.keys(propsForChildren).length !== 0;\r\n    var entering = new Set(nextKeys.filter(function (key) { return finishedLeaving.hasOwnProperty(key) || prevKeys.indexOf(key) === -1; }));\r\n    entering.forEach(function (key) { return delete finishedLeaving[key]; });\r\n    var leaving = [];\r\n    var newlyLeaving = {};\r\n    prevKeys.forEach(function (key) {\r\n        if (entering.has(key)) {\r\n            return;\r\n        }\r\n        var isLeaving = finishedLeaving.hasOwnProperty(key);\r\n        if (!isLeaving && nextKeys.indexOf(key) !== -1) {\r\n            return;\r\n        }\r\n        leaving.push(key);\r\n        if (!isLeaving) {\r\n            finishedLeaving[key] = false;\r\n            newlyLeaving[key] = true;\r\n        }\r\n    });\r\n    var moving = new Set(prevKeys.filter(function (key, i) {\r\n        return !entering.has(key) || leaving.indexOf(key) === -1;\r\n    }));\r\n    targetChildren.forEach(function (child) {\r\n        var newChildProps = {};\r\n        if (entering.has(child.key)) {\r\n            if (hasInitialized || animateOnMount) {\r\n                newChildProps.initialPose = preEnterPose;\r\n            }\r\n            newChildProps._pose = enterPose;\r\n        }\r\n        else if (moving.has(child.key) && flipMove) {\r\n            newChildProps._pose = [enterPose, 'flip'];\r\n        }\r\n        else {\r\n            newChildProps._pose = enterPose;\r\n        }\r\n        var newChild = (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, newChildProps);\r\n        indexedChildren[child.key] = newChild;\r\n        nextState.displayedChildren.push(hasPropsForChildren ? prependProps(newChild, propsForChildren) : newChild);\r\n    });\r\n    leaving.forEach(function (key) {\r\n        var child = indexedChildren[key];\r\n        var newChild = newlyLeaving[key]\r\n            ? (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, {\r\n                _pose: exitPose,\r\n                onPoseComplete: function (pose) {\r\n                    if (pose === exitPose)\r\n                        scheduleChildRemoval(key);\r\n                    var onPoseComplete = child.props.onPoseComplete;\r\n                    if (onPoseComplete)\r\n                        onPoseComplete(pose);\r\n                },\r\n                popFromFlow: flipMove\r\n            })\r\n            : child;\r\n        var insertionIndex = prevKeys.indexOf(key);\r\n        indexedChildren[child.key] = newChild;\r\n        nextState.displayedChildren.splice(insertionIndex, 0, hasPropsForChildren ? prependProps(newChild, propsForChildren) : newChild);\r\n    });\r\n    return nextState;\r\n};\r\nvar handleChildrenTransitions = (function (props, state) {\r\n    var newState = handleTransition(props, state);\r\n    newState.hasInitialized = true;\r\n    return newState;\r\n});\r\nvar makeChildList = function (children) {\r\n    var list = [];\r\n    react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(children, function (child) { return child && list.push(child); });\r\n    return list;\r\n};\n\nvar Transition = (function (_super) {\r\n    (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__extends)(Transition, _super);\r\n    function Transition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            displayedChildren: [],\r\n            finishedLeaving: {},\r\n            hasInitialized: false,\r\n            indexedChildren: {},\r\n            scheduleChildRemoval: function (key) { return _this.removeChild(key); }\r\n        };\r\n        return _this;\r\n    }\r\n    Transition.prototype.removeChild = function (key) {\r\n        var _a = this.state, displayedChildren = _a.displayedChildren, finishedLeaving = _a.finishedLeaving;\r\n        var _b = this.props, enterAfterExit = _b.enterAfterExit, onRest = _b.onRest;\r\n        if (!finishedLeaving.hasOwnProperty(key))\r\n            return;\r\n        finishedLeaving[key] = true;\r\n        if (!Object.keys(finishedLeaving).every(function (leavingKey) { return finishedLeaving[leavingKey]; })) {\r\n            return;\r\n        }\r\n        var targetChildren = displayedChildren.filter(function (child) { return !finishedLeaving.hasOwnProperty(child.key); });\r\n        var newState = enterAfterExit\r\n            ? (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ finishedLeaving: {} }, handleChildrenTransitions((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, this.props), { enterAfterExit: false }), (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, this.state), { displayedChildren: targetChildren }))) : {\r\n            finishedLeaving: {},\r\n            displayedChildren: targetChildren\r\n        };\r\n        this.setState(newState, onRest);\r\n    };\r\n    Transition.prototype.shouldComponentUpdate = function (nextProps, nextState) {\r\n        return this.state !== nextState;\r\n    };\r\n    Transition.prototype.render = function () {\r\n        return this.state.displayedChildren;\r\n    };\r\n    Transition.defaultProps = {\r\n        flipMove: false,\r\n        enterAfterExit: false,\r\n        preEnterPose: 'exit',\r\n        enterPose: 'enter',\r\n        exitPose: 'exit'\r\n    };\r\n    Transition.getDerivedStateFromProps = handleChildrenTransitions;\r\n    return Transition;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component));\n\nvar PoseGroup = (function (_super) {\r\n    (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__extends)(PoseGroup, _super);\r\n    function PoseGroup() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PoseGroup.prototype.render = function () {\r\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Transition, (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, this.props));\r\n    };\r\n    PoseGroup.defaultProps = {\r\n        flipMove: true\r\n    };\r\n    return PoseGroup;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (posed);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/react-pose/dist/react-pose.es.js\n");

/***/ }),

/***/ "../../../node_modules/react-pose/node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js":
/*!**************************************************************************************************************!*\
  !*** ../../../node_modules/react-pose/node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/memoize */ \"../../../node_modules/react-pose/node_modules/@emotion/memoize/dist/memoize.browser.esm.js\");\n\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|default|defer|dir|disabled|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|itemProp|itemScope|itemType|itemID|itemRef|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar index = (0,_emotion_memoize__WEBPACK_IMPORTED_MODULE_0__.default)(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (index);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXBvc2Uvbm9kZV9tb2R1bGVzL0BlbW90aW9uL2lzLXByb3AtdmFsaWQvZGlzdC9pcy1wcm9wLXZhbGlkLmJyb3dzZXIuZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L3RyYWRlci8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QtcG9zZS9ub2RlX21vZHVsZXMvQGVtb3Rpb24vaXMtcHJvcC12YWxpZC9kaXN0L2lzLXByb3AtdmFsaWQuYnJvd3Nlci5lc20uanM/ZjkxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbWVtb2l6ZSBmcm9tICdAZW1vdGlvbi9tZW1vaXplJztcblxudmFyIHJlYWN0UHJvcHNSZWdleCA9IC9eKChjaGlsZHJlbnxkYW5nZXJvdXNseVNldElubmVySFRNTHxrZXl8cmVmfGF1dG9Gb2N1c3xkZWZhdWx0VmFsdWV8ZGVmYXVsdENoZWNrZWR8aW5uZXJIVE1MfHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ3xzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmd8dmFsdWVMaW5rfGFjY2VwdHxhY2NlcHRDaGFyc2V0fGFjY2Vzc0tleXxhY3Rpb258YWxsb3d8YWxsb3dVc2VyTWVkaWF8YWxsb3dQYXltZW50UmVxdWVzdHxhbGxvd0Z1bGxTY3JlZW58YWxsb3dUcmFuc3BhcmVuY3l8YWx0fGFzeW5jfGF1dG9Db21wbGV0ZXxhdXRvUGxheXxjYXB0dXJlfGNlbGxQYWRkaW5nfGNlbGxTcGFjaW5nfGNoYWxsZW5nZXxjaGFyU2V0fGNoZWNrZWR8Y2l0ZXxjbGFzc0lEfGNsYXNzTmFtZXxjb2xzfGNvbFNwYW58Y29udGVudHxjb250ZW50RWRpdGFibGV8Y29udGV4dE1lbnV8Y29udHJvbHN8Y29udHJvbHNMaXN0fGNvb3Jkc3xjcm9zc09yaWdpbnxkYXRhfGRhdGVUaW1lfGRlZmF1bHR8ZGVmZXJ8ZGlyfGRpc2FibGVkfGRvd25sb2FkfGRyYWdnYWJsZXxlbmNUeXBlfGZvcm18Zm9ybUFjdGlvbnxmb3JtRW5jVHlwZXxmb3JtTWV0aG9kfGZvcm1Ob1ZhbGlkYXRlfGZvcm1UYXJnZXR8ZnJhbWVCb3JkZXJ8aGVhZGVyc3xoZWlnaHR8aGlkZGVufGhpZ2h8aHJlZnxocmVmTGFuZ3xodG1sRm9yfGh0dHBFcXVpdnxpZHxpbnB1dE1vZGV8aW50ZWdyaXR5fGlzfGtleVBhcmFtc3xrZXlUeXBlfGtpbmR8bGFiZWx8bGFuZ3xsaXN0fGxvb3B8bG93fG1hcmdpbkhlaWdodHxtYXJnaW5XaWR0aHxtYXh8bWF4TGVuZ3RofG1lZGlhfG1lZGlhR3JvdXB8bWV0aG9kfG1pbnxtaW5MZW5ndGh8bXVsdGlwbGV8bXV0ZWR8bmFtZXxub25jZXxub1ZhbGlkYXRlfG9wZW58b3B0aW11bXxwYXR0ZXJufHBsYWNlaG9sZGVyfHBsYXlzSW5saW5lfHBvc3RlcnxwcmVsb2FkfHByb2ZpbGV8cmFkaW9Hcm91cHxyZWFkT25seXxyZWZlcnJlclBvbGljeXxyZWx8cmVxdWlyZWR8cmV2ZXJzZWR8cm9sZXxyb3dzfHJvd1NwYW58c2FuZGJveHxzY29wZXxzY29wZWR8c2Nyb2xsaW5nfHNlYW1sZXNzfHNlbGVjdGVkfHNoYXBlfHNpemV8c2l6ZXN8c2xvdHxzcGFufHNwZWxsQ2hlY2t8c3JjfHNyY0RvY3xzcmNMYW5nfHNyY1NldHxzdGFydHxzdGVwfHN0eWxlfHN1bW1hcnl8dGFiSW5kZXh8dGFyZ2V0fHRpdGxlfHR5cGV8dXNlTWFwfHZhbHVlfHdpZHRofHdtb2RlfHdyYXB8YWJvdXR8ZGF0YXR5cGV8aW5saXN0fHByZWZpeHxwcm9wZXJ0eXxyZXNvdXJjZXx0eXBlb2Z8dm9jYWJ8YXV0b0NhcGl0YWxpemV8YXV0b0NvcnJlY3R8YXV0b1NhdmV8Y29sb3J8aXRlbVByb3B8aXRlbVNjb3BlfGl0ZW1UeXBlfGl0ZW1JRHxpdGVtUmVmfHJlc3VsdHN8c2VjdXJpdHl8dW5zZWxlY3RhYmxlfGFjY2VudEhlaWdodHxhY2N1bXVsYXRlfGFkZGl0aXZlfGFsaWdubWVudEJhc2VsaW5lfGFsbG93UmVvcmRlcnxhbHBoYWJldGljfGFtcGxpdHVkZXxhcmFiaWNGb3JtfGFzY2VudHxhdHRyaWJ1dGVOYW1lfGF0dHJpYnV0ZVR5cGV8YXV0b1JldmVyc2V8YXppbXV0aHxiYXNlRnJlcXVlbmN5fGJhc2VsaW5lU2hpZnR8YmFzZVByb2ZpbGV8YmJveHxiZWdpbnxiaWFzfGJ5fGNhbGNNb2RlfGNhcEhlaWdodHxjbGlwfGNsaXBQYXRoVW5pdHN8Y2xpcFBhdGh8Y2xpcFJ1bGV8Y29sb3JJbnRlcnBvbGF0aW9ufGNvbG9ySW50ZXJwb2xhdGlvbkZpbHRlcnN8Y29sb3JQcm9maWxlfGNvbG9yUmVuZGVyaW5nfGNvbnRlbnRTY3JpcHRUeXBlfGNvbnRlbnRTdHlsZVR5cGV8Y3Vyc29yfGN4fGN5fGR8ZGVjZWxlcmF0ZXxkZXNjZW50fGRpZmZ1c2VDb25zdGFudHxkaXJlY3Rpb258ZGlzcGxheXxkaXZpc29yfGRvbWluYW50QmFzZWxpbmV8ZHVyfGR4fGR5fGVkZ2VNb2RlfGVsZXZhdGlvbnxlbmFibGVCYWNrZ3JvdW5kfGVuZHxleHBvbmVudHxleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkfGZpbGx8ZmlsbE9wYWNpdHl8ZmlsbFJ1bGV8ZmlsdGVyfGZpbHRlclJlc3xmaWx0ZXJVbml0c3xmbG9vZENvbG9yfGZsb29kT3BhY2l0eXxmb2N1c2FibGV8Zm9udEZhbWlseXxmb250U2l6ZXxmb250U2l6ZUFkanVzdHxmb250U3RyZXRjaHxmb250U3R5bGV8Zm9udFZhcmlhbnR8Zm9udFdlaWdodHxmb3JtYXR8ZnJvbXxmcnxmeHxmeXxnMXxnMnxnbHlwaE5hbWV8Z2x5cGhPcmllbnRhdGlvbkhvcml6b250YWx8Z2x5cGhPcmllbnRhdGlvblZlcnRpY2FsfGdseXBoUmVmfGdyYWRpZW50VHJhbnNmb3JtfGdyYWRpZW50VW5pdHN8aGFuZ2luZ3xob3JpekFkdlh8aG9yaXpPcmlnaW5YfGlkZW9ncmFwaGljfGltYWdlUmVuZGVyaW5nfGlufGluMnxpbnRlcmNlcHR8a3xrMXxrMnxrM3xrNHxrZXJuZWxNYXRyaXh8a2VybmVsVW5pdExlbmd0aHxrZXJuaW5nfGtleVBvaW50c3xrZXlTcGxpbmVzfGtleVRpbWVzfGxlbmd0aEFkanVzdHxsZXR0ZXJTcGFjaW5nfGxpZ2h0aW5nQ29sb3J8bGltaXRpbmdDb25lQW5nbGV8bG9jYWx8bWFya2VyRW5kfG1hcmtlck1pZHxtYXJrZXJTdGFydHxtYXJrZXJIZWlnaHR8bWFya2VyVW5pdHN8bWFya2VyV2lkdGh8bWFza3xtYXNrQ29udGVudFVuaXRzfG1hc2tVbml0c3xtYXRoZW1hdGljYWx8bW9kZXxudW1PY3RhdmVzfG9mZnNldHxvcGFjaXR5fG9wZXJhdG9yfG9yZGVyfG9yaWVudHxvcmllbnRhdGlvbnxvcmlnaW58b3ZlcmZsb3d8b3ZlcmxpbmVQb3NpdGlvbnxvdmVybGluZVRoaWNrbmVzc3xwYW5vc2UxfHBhaW50T3JkZXJ8cGF0aExlbmd0aHxwYXR0ZXJuQ29udGVudFVuaXRzfHBhdHRlcm5UcmFuc2Zvcm18cGF0dGVyblVuaXRzfHBvaW50ZXJFdmVudHN8cG9pbnRzfHBvaW50c0F0WHxwb2ludHNBdFl8cG9pbnRzQXRafHByZXNlcnZlQWxwaGF8cHJlc2VydmVBc3BlY3RSYXRpb3xwcmltaXRpdmVVbml0c3xyfHJhZGl1c3xyZWZYfHJlZll8cmVuZGVyaW5nSW50ZW50fHJlcGVhdENvdW50fHJlcGVhdER1cnxyZXF1aXJlZEV4dGVuc2lvbnN8cmVxdWlyZWRGZWF0dXJlc3xyZXN0YXJ0fHJlc3VsdHxyb3RhdGV8cnh8cnl8c2NhbGV8c2VlZHxzaGFwZVJlbmRlcmluZ3xzbG9wZXxzcGFjaW5nfHNwZWN1bGFyQ29uc3RhbnR8c3BlY3VsYXJFeHBvbmVudHxzcGVlZHxzcHJlYWRNZXRob2R8c3RhcnRPZmZzZXR8c3RkRGV2aWF0aW9ufHN0ZW1ofHN0ZW12fHN0aXRjaFRpbGVzfHN0b3BDb2xvcnxzdG9wT3BhY2l0eXxzdHJpa2V0aHJvdWdoUG9zaXRpb258c3RyaWtldGhyb3VnaFRoaWNrbmVzc3xzdHJpbmd8c3Ryb2tlfHN0cm9rZURhc2hhcnJheXxzdHJva2VEYXNob2Zmc2V0fHN0cm9rZUxpbmVjYXB8c3Ryb2tlTGluZWpvaW58c3Ryb2tlTWl0ZXJsaW1pdHxzdHJva2VPcGFjaXR5fHN0cm9rZVdpZHRofHN1cmZhY2VTY2FsZXxzeXN0ZW1MYW5ndWFnZXx0YWJsZVZhbHVlc3x0YXJnZXRYfHRhcmdldFl8dGV4dEFuY2hvcnx0ZXh0RGVjb3JhdGlvbnx0ZXh0UmVuZGVyaW5nfHRleHRMZW5ndGh8dG98dHJhbnNmb3JtfHUxfHUyfHVuZGVybGluZVBvc2l0aW9ufHVuZGVybGluZVRoaWNrbmVzc3x1bmljb2RlfHVuaWNvZGVCaWRpfHVuaWNvZGVSYW5nZXx1bml0c1BlckVtfHZBbHBoYWJldGljfHZIYW5naW5nfHZJZGVvZ3JhcGhpY3x2TWF0aGVtYXRpY2FsfHZhbHVlc3x2ZWN0b3JFZmZlY3R8dmVyc2lvbnx2ZXJ0QWR2WXx2ZXJ0T3JpZ2luWHx2ZXJ0T3JpZ2luWXx2aWV3Qm94fHZpZXdUYXJnZXR8dmlzaWJpbGl0eXx3aWR0aHN8d29yZFNwYWNpbmd8d3JpdGluZ01vZGV8eHx4SGVpZ2h0fHgxfHgyfHhDaGFubmVsU2VsZWN0b3J8eGxpbmtBY3R1YXRlfHhsaW5rQXJjcm9sZXx4bGlua0hyZWZ8eGxpbmtSb2xlfHhsaW5rU2hvd3x4bGlua1RpdGxlfHhsaW5rVHlwZXx4bWxCYXNlfHhtbG5zfHhtbG5zWGxpbmt8eG1sTGFuZ3x4bWxTcGFjZXx5fHkxfHkyfHlDaGFubmVsU2VsZWN0b3J8enx6b29tQW5kUGFufGZvcnxjbGFzc3xhdXRvZm9jdXMpfCgoW0RkXVtBYV1bVHRdW0FhXXxbQWFdW1JyXVtJaV1bQWFdfHgpLS4qKSkkLzsgLy8gaHR0cHM6Ly9lc2JlbmNoLmNvbS9iZW5jaC81YmZlZTY4YTRjZDdlNjAwOWVmNjFkMjNcblxudmFyIGluZGV4ID0gbWVtb2l6ZShmdW5jdGlvbiAocHJvcCkge1xuICByZXR1cm4gcmVhY3RQcm9wc1JlZ2V4LnRlc3QocHJvcCkgfHwgcHJvcC5jaGFyQ29kZUF0KDApID09PSAxMTFcbiAgLyogbyAqL1xuICAmJiBwcm9wLmNoYXJDb2RlQXQoMSkgPT09IDExMFxuICAvKiBuICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgyKSA8IDkxO1xufVxuLyogWisxICovXG4pO1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../node_modules/react-pose/node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js\n");

/***/ }),

/***/ "../../../node_modules/react-pose/node_modules/@emotion/memoize/dist/memoize.browser.esm.js":
/*!**************************************************************************************************!*\
  !*** ../../../node_modules/react-pose/node_modules/@emotion/memoize/dist/memoize.browser.esm.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (memoize);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXBvc2Uvbm9kZV9tb2R1bGVzL0BlbW90aW9uL21lbW9pemUvZGlzdC9tZW1vaXplLmJyb3dzZXIuZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L3RyYWRlci8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QtcG9zZS9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanM/MmZmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBtZW1vaXplKGZuKSB7XG4gIHZhciBjYWNoZSA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgIGlmIChjYWNoZVthcmddID09PSB1bmRlZmluZWQpIGNhY2hlW2FyZ10gPSBmbihhcmcpO1xuICAgIHJldHVybiBjYWNoZVthcmddO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplO1xuIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/react-pose/node_modules/@emotion/memoize/dist/memoize.browser.esm.js\n");

/***/ }),

/***/ "../../../node_modules/react-transition-group/esm/CSSTransition.js":
/*!*************************************************************************!*\
  !*** ../../../node_modules/react-transition-group/esm/CSSTransition.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"../../../node_modules/@babel/runtime/helpers/extends/_index.mjs\");\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ \"../../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose/_index.mjs\");\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"../../../node_modules/@babel/runtime/helpers/inheritsLoose/_index.mjs\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ \"../../../node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var dom_helpers_addClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dom-helpers/addClass */ \"../../../node_modules/dom-helpers/esm/addClass.js\");\n/* harmony import */ var dom_helpers_removeClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! dom-helpers/removeClass */ \"../../../node_modules/dom-helpers/esm/removeClass.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _Transition__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Transition */ \"../../../node_modules/react-transition-group/esm/Transition.js\");\n/* harmony import */ var _utils_PropTypes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/PropTypes */ \"../../../node_modules/react-transition-group/esm/utils/PropTypes.js\");\n\n\n\n\n\n\n\n\n\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0,dom_helpers_addClass__WEBPACK_IMPORTED_MODULE_4__.default)(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0,dom_helpers_removeClass__WEBPACK_IMPORTED_MODULE_5__.default)(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__.default)(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default().createElement(_Transition__WEBPACK_IMPORTED_MODULE_7__.default, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}((react__WEBPACK_IMPORTED_MODULE_6___default().Component));\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes =  true ? (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, _Transition__WEBPACK_IMPORTED_MODULE_7__.default.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: _utils_PropTypes__WEBPACK_IMPORTED_MODULE_8__.classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func)\n}) : 0;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CSSTransition);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/react-transition-group/esm/CSSTransition.js\n");

/***/ }),

/***/ "../../../node_modules/react-transition-group/esm/Transition.js":
/*!**********************************************************************!*\
  !*** ../../../node_modules/react-transition-group/esm/Transition.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UNMOUNTED\": () => (/* binding */ UNMOUNTED),\n/* harmony export */   \"EXITED\": () => (/* binding */ EXITED),\n/* harmony export */   \"ENTERING\": () => (/* binding */ ENTERING),\n/* harmony export */   \"ENTERED\": () => (/* binding */ ENTERED),\n/* harmony export */   \"EXITING\": () => (/* binding */ EXITING),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ \"../../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose/_index.mjs\");\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"../../../node_modules/@babel/runtime/helpers/inheritsLoose/_index.mjs\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"../../../node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./config */ \"../../../node_modules/react-transition-group/esm/config.js\");\n/* harmony import */ var _utils_PropTypes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/PropTypes */ \"../../../node_modules/react-transition-group/esm/utils/PropTypes.js\");\n/* harmony import */ var _TransitionGroupContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TransitionGroupContext */ \"../../../node_modules/react-transition-group/esm/TransitionGroupContext.js\");\n\n\n\n\n\n\n\n\nvar UNMOUNTED = 'unmounted';\nvar EXITED = 'exited';\nvar ENTERING = 'entering';\nvar ENTERED = 'entered';\nvar EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__.default)(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [react_dom__WEBPACK_IMPORTED_MODULE_4___default().findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || _config__WEBPACK_IMPORTED_MODULE_5__.default.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : react_dom__WEBPACK_IMPORTED_MODULE_4___default().findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || _config__WEBPACK_IMPORTED_MODULE_5__.default.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : react_dom__WEBPACK_IMPORTED_MODULE_4___default().findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_TransitionGroupContext__WEBPACK_IMPORTED_MODULE_6__.default.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : react__WEBPACK_IMPORTED_MODULE_3___default().cloneElement(react__WEBPACK_IMPORTED_MODULE_3___default().Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}((react__WEBPACK_IMPORTED_MODULE_3___default().Component));\n\nTransition.contextType = _TransitionGroupContext__WEBPACK_IMPORTED_MODULE_6__.default;\nTransition.propTypes =  true ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: prop_types__WEBPACK_IMPORTED_MODULE_2___default().shape({\n    current: typeof Element === 'undefined' ? (prop_types__WEBPACK_IMPORTED_MODULE_2___default().any) : prop_types__WEBPACK_IMPORTED_MODULE_2___default().instanceOf(Element)\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_2___default().func.isRequired), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().element.isRequired)]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = _utils_PropTypes__WEBPACK_IMPORTED_MODULE_7__.timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func),\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func),\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func),\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func),\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func),\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func),\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func)\n} : 0; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Transition);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/react-transition-group/esm/Transition.js\n");

/***/ }),

/***/ "../../../node_modules/react-transition-group/esm/TransitionGroup.js":
/*!***************************************************************************!*\
  !*** ../../../node_modules/react-transition-group/esm/TransitionGroup.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ \"../../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose/_index.mjs\");\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"../../../node_modules/@babel/runtime/helpers/extends/_index.mjs\");\n/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ \"../../../node_modules/@babel/runtime/helpers/assertThisInitialized/_index.mjs\");\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"../../../node_modules/@babel/runtime/helpers/inheritsLoose/_index.mjs\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prop-types */ \"../../../node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _TransitionGroupContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./TransitionGroupContext */ \"../../../node_modules/react-transition-group/esm/TransitionGroupContext.js\");\n/* harmony import */ var _utils_ChildMapping__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/ChildMapping */ \"../../../node_modules/react-transition-group/esm/utils/ChildMapping.js\");\n\n\n\n\n\n\n\n\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__.default)(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__.default)(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? (0,_utils_ChildMapping__WEBPACK_IMPORTED_MODULE_6__.getInitialChildMapping)(nextProps, handleExited) : (0,_utils_ChildMapping__WEBPACK_IMPORTED_MODULE_6__.getNextChildMapping)(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = (0,_utils_ChildMapping__WEBPACK_IMPORTED_MODULE_6__.getChildMapping)(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default().createElement(_TransitionGroupContext__WEBPACK_IMPORTED_MODULE_7__.default.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default().createElement(_TransitionGroupContext__WEBPACK_IMPORTED_MODULE_7__.default.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default().createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}((react__WEBPACK_IMPORTED_MODULE_5___default().Component));\n\nTransitionGroup.propTypes =  true ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().any),\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().node),\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().func)\n} : 0;\nTransitionGroup.defaultProps = defaultProps;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TransitionGroup);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/react-transition-group/esm/TransitionGroup.js\n");

/***/ }),

/***/ "../../../node_modules/react-transition-group/esm/TransitionGroupContext.js":
/*!**********************************************************************************!*\
  !*** ../../../node_modules/react-transition-group/esm/TransitionGroupContext.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvZXNtL1RyYW5zaXRpb25Hcm91cENvbnRleHQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvdHJhZGVyLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9yZWFjdC10cmFuc2l0aW9uLWdyb3VwL2VzbS9UcmFuc2l0aW9uR3JvdXBDb250ZXh0LmpzPzgzNzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmV4cG9ydCBkZWZhdWx0IFJlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../node_modules/react-transition-group/esm/TransitionGroupContext.js\n");

/***/ }),

/***/ "../../../node_modules/react-transition-group/esm/config.js":
/*!******************************************************************!*\
  !*** ../../../node_modules/react-transition-group/esm/config.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  disabled: false\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvZXNtL2NvbmZpZy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi90cmFkZXIvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvZXNtL2NvbmZpZy5qcz83NDI4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgZGlzYWJsZWQ6IGZhbHNlXG59OyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/react-transition-group/esm/config.js\n");

/***/ }),

/***/ "../../../node_modules/react-transition-group/esm/utils/ChildMapping.js":
/*!******************************************************************************!*\
  !*** ../../../node_modules/react-transition-group/esm/utils/ChildMapping.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getChildMapping\": () => (/* binding */ getChildMapping),\n/* harmony export */   \"mergeChildMappings\": () => (/* binding */ mergeChildMappings),\n/* harmony export */   \"getInitialChildMapping\": () => (/* binding */ getInitialChildMapping),\n/* harmony export */   \"getNextChildMapping\": () => (/* binding */ getNextChildMapping)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nfunction getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nfunction mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nfunction getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nfunction getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvZXNtL3V0aWxzL0NoaWxkTWFwcGluZy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi90cmFkZXIvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvZXNtL3V0aWxzL0NoaWxkTWFwcGluZy5qcz9lNDVhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoaWxkcmVuLCBjbG9uZUVsZW1lbnQsIGlzVmFsaWRFbGVtZW50IH0gZnJvbSAncmVhY3QnO1xuLyoqXG4gKiBHaXZlbiBgdGhpcy5wcm9wcy5jaGlsZHJlbmAsIHJldHVybiBhbiBvYmplY3QgbWFwcGluZyBrZXkgdG8gY2hpbGQuXG4gKlxuICogQHBhcmFtIHsqfSBjaGlsZHJlbiBgdGhpcy5wcm9wcy5jaGlsZHJlbmBcbiAqIEByZXR1cm4ge29iamVjdH0gTWFwcGluZyBvZiBrZXkgdG8gY2hpbGRcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2hpbGRNYXBwaW5nKGNoaWxkcmVuLCBtYXBGbikge1xuICB2YXIgbWFwcGVyID0gZnVuY3Rpb24gbWFwcGVyKGNoaWxkKSB7XG4gICAgcmV0dXJuIG1hcEZuICYmIGlzVmFsaWRFbGVtZW50KGNoaWxkKSA/IG1hcEZuKGNoaWxkKSA6IGNoaWxkO1xuICB9O1xuXG4gIHZhciByZXN1bHQgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICBpZiAoY2hpbGRyZW4pIENoaWxkcmVuLm1hcChjaGlsZHJlbiwgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gYztcbiAgfSkuZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAvLyBydW4gdGhlIG1hcCBmdW5jdGlvbiBoZXJlIGluc3RlYWQgc28gdGhhdCB0aGUga2V5IGlzIHRoZSBjb21wdXRlZCBvbmVcbiAgICByZXN1bHRbY2hpbGQua2V5XSA9IG1hcHBlcihjaGlsZCk7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBXaGVuIHlvdSdyZSBhZGRpbmcgb3IgcmVtb3ZpbmcgY2hpbGRyZW4gc29tZSBtYXkgYmUgYWRkZWQgb3IgcmVtb3ZlZCBpbiB0aGVcbiAqIHNhbWUgcmVuZGVyIHBhc3MuIFdlIHdhbnQgdG8gc2hvdyAqYm90aCogc2luY2Ugd2Ugd2FudCB0byBzaW11bHRhbmVvdXNseVxuICogYW5pbWF0ZSBlbGVtZW50cyBpbiBhbmQgb3V0LiBUaGlzIGZ1bmN0aW9uIHRha2VzIGEgcHJldmlvdXMgc2V0IG9mIGtleXNcbiAqIGFuZCBhIG5ldyBzZXQgb2Yga2V5cyBhbmQgbWVyZ2VzIHRoZW0gd2l0aCBpdHMgYmVzdCBndWVzcyBvZiB0aGUgY29ycmVjdFxuICogb3JkZXJpbmcuIEluIHRoZSBmdXR1cmUgd2UgbWF5IGV4cG9zZSBzb21lIG9mIHRoZSB1dGlsaXRpZXMgaW5cbiAqIFJlYWN0TXVsdGlDaGlsZCB0byBtYWtlIHRoaXMgZWFzeSwgYnV0IGZvciBub3cgUmVhY3QgaXRzZWxmIGRvZXMgbm90XG4gKiBkaXJlY3RseSBoYXZlIHRoaXMgY29uY2VwdCBvZiB0aGUgdW5pb24gb2YgcHJldkNoaWxkcmVuIGFuZCBuZXh0Q2hpbGRyZW5cbiAqIHNvIHdlIGltcGxlbWVudCBpdCBoZXJlLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBwcmV2IHByZXYgY2hpbGRyZW4gYXMgcmV0dXJuZWQgZnJvbVxuICogYFJlYWN0VHJhbnNpdGlvbkNoaWxkTWFwcGluZy5nZXRDaGlsZE1hcHBpbmcoKWAuXG4gKiBAcGFyYW0ge29iamVjdH0gbmV4dCBuZXh0IGNoaWxkcmVuIGFzIHJldHVybmVkIGZyb21cbiAqIGBSZWFjdFRyYW5zaXRpb25DaGlsZE1hcHBpbmcuZ2V0Q2hpbGRNYXBwaW5nKClgLlxuICogQHJldHVybiB7b2JqZWN0fSBhIGtleSBzZXQgdGhhdCBjb250YWlucyBhbGwga2V5cyBpbiBgcHJldmAgYW5kIGFsbCBrZXlzXG4gKiBpbiBgbmV4dGAgaW4gYSByZWFzb25hYmxlIG9yZGVyLlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZUNoaWxkTWFwcGluZ3MocHJldiwgbmV4dCkge1xuICBwcmV2ID0gcHJldiB8fCB7fTtcbiAgbmV4dCA9IG5leHQgfHwge307XG5cbiAgZnVuY3Rpb24gZ2V0VmFsdWVGb3JLZXkoa2V5KSB7XG4gICAgcmV0dXJuIGtleSBpbiBuZXh0ID8gbmV4dFtrZXldIDogcHJldltrZXldO1xuICB9IC8vIEZvciBlYWNoIGtleSBvZiBgbmV4dGAsIHRoZSBsaXN0IG9mIGtleXMgdG8gaW5zZXJ0IGJlZm9yZSB0aGF0IGtleSBpblxuICAvLyB0aGUgY29tYmluZWQgbGlzdFxuXG5cbiAgdmFyIG5leHRLZXlzUGVuZGluZyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHZhciBwZW5kaW5nS2V5cyA9IFtdO1xuXG4gIGZvciAodmFyIHByZXZLZXkgaW4gcHJldikge1xuICAgIGlmIChwcmV2S2V5IGluIG5leHQpIHtcbiAgICAgIGlmIChwZW5kaW5nS2V5cy5sZW5ndGgpIHtcbiAgICAgICAgbmV4dEtleXNQZW5kaW5nW3ByZXZLZXldID0gcGVuZGluZ0tleXM7XG4gICAgICAgIHBlbmRpbmdLZXlzID0gW107XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHBlbmRpbmdLZXlzLnB1c2gocHJldktleSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGk7XG4gIHZhciBjaGlsZE1hcHBpbmcgPSB7fTtcblxuICBmb3IgKHZhciBuZXh0S2V5IGluIG5leHQpIHtcbiAgICBpZiAobmV4dEtleXNQZW5kaW5nW25leHRLZXldKSB7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbmV4dEtleXNQZW5kaW5nW25leHRLZXldLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBwZW5kaW5nTmV4dEtleSA9IG5leHRLZXlzUGVuZGluZ1tuZXh0S2V5XVtpXTtcbiAgICAgICAgY2hpbGRNYXBwaW5nW25leHRLZXlzUGVuZGluZ1tuZXh0S2V5XVtpXV0gPSBnZXRWYWx1ZUZvcktleShwZW5kaW5nTmV4dEtleSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY2hpbGRNYXBwaW5nW25leHRLZXldID0gZ2V0VmFsdWVGb3JLZXkobmV4dEtleSk7XG4gIH0gLy8gRmluYWxseSwgYWRkIHRoZSBrZXlzIHdoaWNoIGRpZG4ndCBhcHBlYXIgYmVmb3JlIGFueSBrZXkgaW4gYG5leHRgXG5cblxuICBmb3IgKGkgPSAwOyBpIDwgcGVuZGluZ0tleXMubGVuZ3RoOyBpKyspIHtcbiAgICBjaGlsZE1hcHBpbmdbcGVuZGluZ0tleXNbaV1dID0gZ2V0VmFsdWVGb3JLZXkocGVuZGluZ0tleXNbaV0pO1xuICB9XG5cbiAgcmV0dXJuIGNoaWxkTWFwcGluZztcbn1cblxuZnVuY3Rpb24gZ2V0UHJvcChjaGlsZCwgcHJvcCwgcHJvcHMpIHtcbiAgcmV0dXJuIHByb3BzW3Byb3BdICE9IG51bGwgPyBwcm9wc1twcm9wXSA6IGNoaWxkLnByb3BzW3Byb3BdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SW5pdGlhbENoaWxkTWFwcGluZyhwcm9wcywgb25FeGl0ZWQpIHtcbiAgcmV0dXJuIGdldENoaWxkTWFwcGluZyhwcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgcmV0dXJuIGNsb25lRWxlbWVudChjaGlsZCwge1xuICAgICAgb25FeGl0ZWQ6IG9uRXhpdGVkLmJpbmQobnVsbCwgY2hpbGQpLFxuICAgICAgaW46IHRydWUsXG4gICAgICBhcHBlYXI6IGdldFByb3AoY2hpbGQsICdhcHBlYXInLCBwcm9wcyksXG4gICAgICBlbnRlcjogZ2V0UHJvcChjaGlsZCwgJ2VudGVyJywgcHJvcHMpLFxuICAgICAgZXhpdDogZ2V0UHJvcChjaGlsZCwgJ2V4aXQnLCBwcm9wcylcbiAgICB9KTtcbiAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0TmV4dENoaWxkTWFwcGluZyhuZXh0UHJvcHMsIHByZXZDaGlsZE1hcHBpbmcsIG9uRXhpdGVkKSB7XG4gIHZhciBuZXh0Q2hpbGRNYXBwaW5nID0gZ2V0Q2hpbGRNYXBwaW5nKG5leHRQcm9wcy5jaGlsZHJlbik7XG4gIHZhciBjaGlsZHJlbiA9IG1lcmdlQ2hpbGRNYXBwaW5ncyhwcmV2Q2hpbGRNYXBwaW5nLCBuZXh0Q2hpbGRNYXBwaW5nKTtcbiAgT2JqZWN0LmtleXMoY2hpbGRyZW4pLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciBjaGlsZCA9IGNoaWxkcmVuW2tleV07XG4gICAgaWYgKCFpc1ZhbGlkRWxlbWVudChjaGlsZCkpIHJldHVybjtcbiAgICB2YXIgaGFzUHJldiA9IChrZXkgaW4gcHJldkNoaWxkTWFwcGluZyk7XG4gICAgdmFyIGhhc05leHQgPSAoa2V5IGluIG5leHRDaGlsZE1hcHBpbmcpO1xuICAgIHZhciBwcmV2Q2hpbGQgPSBwcmV2Q2hpbGRNYXBwaW5nW2tleV07XG4gICAgdmFyIGlzTGVhdmluZyA9IGlzVmFsaWRFbGVtZW50KHByZXZDaGlsZCkgJiYgIXByZXZDaGlsZC5wcm9wcy5pbjsgLy8gaXRlbSBpcyBuZXcgKGVudGVyaW5nKVxuXG4gICAgaWYgKGhhc05leHQgJiYgKCFoYXNQcmV2IHx8IGlzTGVhdmluZykpIHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCdlbnRlcmluZycsIGtleSlcbiAgICAgIGNoaWxkcmVuW2tleV0gPSBjbG9uZUVsZW1lbnQoY2hpbGQsIHtcbiAgICAgICAgb25FeGl0ZWQ6IG9uRXhpdGVkLmJpbmQobnVsbCwgY2hpbGQpLFxuICAgICAgICBpbjogdHJ1ZSxcbiAgICAgICAgZXhpdDogZ2V0UHJvcChjaGlsZCwgJ2V4aXQnLCBuZXh0UHJvcHMpLFxuICAgICAgICBlbnRlcjogZ2V0UHJvcChjaGlsZCwgJ2VudGVyJywgbmV4dFByb3BzKVxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICghaGFzTmV4dCAmJiBoYXNQcmV2ICYmICFpc0xlYXZpbmcpIHtcbiAgICAgIC8vIGl0ZW0gaXMgb2xkIChleGl0aW5nKVxuICAgICAgLy8gY29uc29sZS5sb2coJ2xlYXZpbmcnLCBrZXkpXG4gICAgICBjaGlsZHJlbltrZXldID0gY2xvbmVFbGVtZW50KGNoaWxkLCB7XG4gICAgICAgIGluOiBmYWxzZVxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChoYXNOZXh0ICYmIGhhc1ByZXYgJiYgaXNWYWxpZEVsZW1lbnQocHJldkNoaWxkKSkge1xuICAgICAgLy8gaXRlbSBoYXNuJ3QgY2hhbmdlZCB0cmFuc2l0aW9uIHN0YXRlc1xuICAgICAgLy8gY29weSBvdmVyIHRoZSBsYXN0IHRyYW5zaXRpb24gcHJvcHM7XG4gICAgICAvLyBjb25zb2xlLmxvZygndW5jaGFuZ2VkJywga2V5KVxuICAgICAgY2hpbGRyZW5ba2V5XSA9IGNsb25lRWxlbWVudChjaGlsZCwge1xuICAgICAgICBvbkV4aXRlZDogb25FeGl0ZWQuYmluZChudWxsLCBjaGlsZCksXG4gICAgICAgIGluOiBwcmV2Q2hpbGQucHJvcHMuaW4sXG4gICAgICAgIGV4aXQ6IGdldFByb3AoY2hpbGQsICdleGl0JywgbmV4dFByb3BzKSxcbiAgICAgICAgZW50ZXI6IGdldFByb3AoY2hpbGQsICdlbnRlcicsIG5leHRQcm9wcylcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBjaGlsZHJlbjtcbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/react-transition-group/esm/utils/ChildMapping.js\n");

/***/ }),

/***/ "../../../node_modules/react-transition-group/esm/utils/PropTypes.js":
/*!***************************************************************************!*\
  !*** ../../../node_modules/react-transition-group/esm/utils/PropTypes.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"timeoutsShape\": () => (/* binding */ timeoutsShape),\n/* harmony export */   \"classNamesShape\": () => (/* binding */ classNamesShape)\n/* harmony export */ });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! prop-types */ \"../../../node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);\n\nvar timeoutsShape =  true ? prop_types__WEBPACK_IMPORTED_MODULE_0___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_0___default().number), prop_types__WEBPACK_IMPORTED_MODULE_0___default().shape({\n  enter: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().number),\n  exit: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().number),\n  appear: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().number)\n}).isRequired]) : 0;\nvar classNamesShape =  true ? prop_types__WEBPACK_IMPORTED_MODULE_0___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_0___default().string), prop_types__WEBPACK_IMPORTED_MODULE_0___default().shape({\n  enter: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string),\n  exit: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string),\n  active: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string)\n}), prop_types__WEBPACK_IMPORTED_MODULE_0___default().shape({\n  enter: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string),\n  enterDone: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string),\n  enterActive: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string),\n  exit: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string),\n  exitDone: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string),\n  exitActive: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string)\n})]) : 0;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvZXNtL3V0aWxzL1Byb3BUeXBlcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi90cmFkZXIvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvZXNtL3V0aWxzL1Byb3BUeXBlcy5qcz85ODI4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5leHBvcnQgdmFyIHRpbWVvdXRzU2hhcGUgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnNoYXBlKHtcbiAgZW50ZXI6IFByb3BUeXBlcy5udW1iZXIsXG4gIGV4aXQ6IFByb3BUeXBlcy5udW1iZXIsXG4gIGFwcGVhcjogUHJvcFR5cGVzLm51bWJlclxufSkuaXNSZXF1aXJlZF0pIDogbnVsbDtcbmV4cG9ydCB2YXIgY2xhc3NOYW1lc1NoYXBlID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5zaGFwZSh7XG4gIGVudGVyOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBleGl0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBhY3RpdmU6IFByb3BUeXBlcy5zdHJpbmdcbn0pLCBQcm9wVHlwZXMuc2hhcGUoe1xuICBlbnRlcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgZW50ZXJEb25lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBlbnRlckFjdGl2ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgZXhpdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgZXhpdERvbmU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGV4aXRBY3RpdmU6IFByb3BUeXBlcy5zdHJpbmdcbn0pXSkgOiBudWxsOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/react-transition-group/esm/utils/PropTypes.js\n");

/***/ }),

/***/ "../../../node_modules/style-value-types/dist/style-value-types.es.js":
/*!****************************************************************************!*\
  !*** ../../../node_modules/style-value-types/dist/style-value-types.es.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"alpha\": () => (/* binding */ alpha),\n/* harmony export */   \"color\": () => (/* binding */ color),\n/* harmony export */   \"complex\": () => (/* binding */ complex),\n/* harmony export */   \"degrees\": () => (/* binding */ degrees),\n/* harmony export */   \"hex\": () => (/* binding */ hex),\n/* harmony export */   \"hsla\": () => (/* binding */ hsla),\n/* harmony export */   \"number\": () => (/* binding */ number),\n/* harmony export */   \"percent\": () => (/* binding */ percent),\n/* harmony export */   \"progressPercentage\": () => (/* binding */ progressPercentage),\n/* harmony export */   \"px\": () => (/* binding */ px),\n/* harmony export */   \"rgbUnit\": () => (/* binding */ rgbUnit),\n/* harmony export */   \"rgba\": () => (/* binding */ rgba),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"vh\": () => (/* binding */ vh),\n/* harmony export */   \"vw\": () => (/* binding */ vw)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../../node_modules/tslib/tslib.es6.js\");\n\n\nvar clamp = function (min, max) { return function (v) {\r\n    return Math.max(Math.min(v, max), min);\r\n}; };\r\nvar sanitize = function (v) { return (v % 1 ? Number(v.toFixed(5)) : v); };\r\nvar floatRegex = /(-)?(\\d[\\d\\.]*)/g;\r\nvar colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2,3}\\s*\\/*\\s*[\\d\\.]+%?\\))/gi;\r\nvar singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2,3}\\s*\\/*\\s*[\\d\\.]+%?\\))$/i;\n\nvar number = {\r\n    test: function (v) { return typeof v === 'number'; },\r\n    parse: parseFloat,\r\n    transform: function (v) { return v; }\r\n};\r\nvar alpha = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, number), { transform: clamp(0, 1) });\r\nvar scale = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, number), { default: 1 });\n\nvar createUnitType = function (unit) { return ({\r\n    test: function (v) {\r\n        return typeof v === 'string' && v.endsWith(unit) && v.split(' ').length === 1;\r\n    },\r\n    parse: parseFloat,\r\n    transform: function (v) { return \"\" + v + unit; }\r\n}); };\r\nvar degrees = createUnitType('deg');\r\nvar percent = createUnitType('%');\r\nvar px = createUnitType('px');\r\nvar vh = createUnitType('vh');\r\nvar vw = createUnitType('vw');\r\nvar progressPercentage = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, percent), { parse: function (v) { return percent.parse(v) / 100; }, transform: function (v) { return percent.transform(v * 100); } });\n\nvar getValueFromFunctionString = function (value) {\r\n    return value.substring(value.indexOf('(') + 1, value.lastIndexOf(')'));\r\n};\r\nvar clampRgbUnit = clamp(0, 255);\r\nvar isRgba = function (v) { return v.red !== undefined; };\r\nvar isHsla = function (v) { return v.hue !== undefined; };\r\nfunction getValuesAsArray(value) {\r\n    return getValueFromFunctionString(value)\r\n        .replace(/(,|\\/)/g, ' ')\r\n        .split(/ \\s*/);\r\n}\r\nvar splitColorValues = function (terms) {\r\n    return function (v) {\r\n        if (typeof v !== 'string')\r\n            return v;\r\n        var values = {};\r\n        var valuesArray = getValuesAsArray(v);\r\n        for (var i = 0; i < 4; i++) {\r\n            values[terms[i]] =\r\n                valuesArray[i] !== undefined ? parseFloat(valuesArray[i]) : 1;\r\n        }\r\n        return values;\r\n    };\r\n};\r\nvar rgbaTemplate = function (_a) {\r\n    var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha = _b === void 0 ? 1 : _b;\r\n    return \"rgba(\" + red + \", \" + green + \", \" + blue + \", \" + alpha + \")\";\r\n};\r\nvar hslaTemplate = function (_a) {\r\n    var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, _b = _a.alpha, alpha = _b === void 0 ? 1 : _b;\r\n    return \"hsla(\" + hue + \", \" + saturation + \", \" + lightness + \", \" + alpha + \")\";\r\n};\r\nvar rgbUnit = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, number), { transform: function (v) { return Math.round(clampRgbUnit(v)); } });\r\nfunction isColorString(color, colorType) {\r\n    return color.startsWith(colorType) && singleColorRegex.test(color);\r\n}\r\nvar rgba = {\r\n    test: function (v) { return (typeof v === 'string' ? isColorString(v, 'rgb') : isRgba(v)); },\r\n    parse: splitColorValues(['red', 'green', 'blue', 'alpha']),\r\n    transform: function (_a) {\r\n        var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha$1 = _b === void 0 ? 1 : _b;\r\n        return rgbaTemplate({\r\n            red: rgbUnit.transform(red),\r\n            green: rgbUnit.transform(green),\r\n            blue: rgbUnit.transform(blue),\r\n            alpha: sanitize(alpha.transform(alpha$1))\r\n        });\r\n    }\r\n};\r\nvar hsla = {\r\n    test: function (v) { return (typeof v === 'string' ? isColorString(v, 'hsl') : isHsla(v)); },\r\n    parse: splitColorValues(['hue', 'saturation', 'lightness', 'alpha']),\r\n    transform: function (_a) {\r\n        var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, _b = _a.alpha, alpha$1 = _b === void 0 ? 1 : _b;\r\n        return hslaTemplate({\r\n            hue: Math.round(hue),\r\n            saturation: percent.transform(sanitize(saturation)),\r\n            lightness: percent.transform(sanitize(lightness)),\r\n            alpha: sanitize(alpha.transform(alpha$1))\r\n        });\r\n    }\r\n};\r\nvar hex = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, rgba), { test: function (v) { return typeof v === 'string' && isColorString(v, '#'); }, parse: function (v) {\r\n        var r = '';\r\n        var g = '';\r\n        var b = '';\r\n        if (v.length > 4) {\r\n            r = v.substr(1, 2);\r\n            g = v.substr(3, 2);\r\n            b = v.substr(5, 2);\r\n        }\r\n        else {\r\n            r = v.substr(1, 1);\r\n            g = v.substr(2, 1);\r\n            b = v.substr(3, 1);\r\n            r += r;\r\n            g += g;\r\n            b += b;\r\n        }\r\n        return {\r\n            red: parseInt(r, 16),\r\n            green: parseInt(g, 16),\r\n            blue: parseInt(b, 16),\r\n            alpha: 1\r\n        };\r\n    } });\r\nvar color = {\r\n    test: function (v) {\r\n        return (typeof v === 'string' && singleColorRegex.test(v)) ||\r\n            isRgba(v) ||\r\n            isHsla(v);\r\n    },\r\n    parse: function (v) {\r\n        if (rgba.test(v)) {\r\n            return rgba.parse(v);\r\n        }\r\n        else if (hsla.test(v)) {\r\n            return hsla.parse(v);\r\n        }\r\n        else if (hex.test(v)) {\r\n            return hex.parse(v);\r\n        }\r\n        return v;\r\n    },\r\n    transform: function (v) {\r\n        if (isRgba(v)) {\r\n            return rgba.transform(v);\r\n        }\r\n        else if (isHsla(v)) {\r\n            return hsla.transform(v);\r\n        }\r\n        return v;\r\n    }\r\n};\n\nvar COLOR_TOKEN = '${c}';\r\nvar NUMBER_TOKEN = '${n}';\r\nvar convertNumbersToZero = function (v) {\r\n    return typeof v === 'number' ? 0 : v;\r\n};\r\nvar complex = {\r\n    test: function (v) {\r\n        if (typeof v !== 'string' || !isNaN(v))\r\n            return false;\r\n        var numValues = 0;\r\n        var foundNumbers = v.match(floatRegex);\r\n        var foundColors = v.match(colorRegex);\r\n        if (foundNumbers)\r\n            numValues += foundNumbers.length;\r\n        if (foundColors)\r\n            numValues += foundColors.length;\r\n        return numValues > 0;\r\n    },\r\n    parse: function (v) {\r\n        var input = v;\r\n        var parsed = [];\r\n        var foundColors = input.match(colorRegex);\r\n        if (foundColors) {\r\n            input = input.replace(colorRegex, COLOR_TOKEN);\r\n            parsed.push.apply(parsed, foundColors.map(color.parse));\r\n        }\r\n        var foundNumbers = input.match(floatRegex);\r\n        if (foundNumbers) {\r\n            parsed.push.apply(parsed, foundNumbers.map(number.parse));\r\n        }\r\n        return parsed;\r\n    },\r\n    createTransformer: function (prop) {\r\n        var template = prop;\r\n        var token = 0;\r\n        var foundColors = prop.match(colorRegex);\r\n        var numColors = foundColors ? foundColors.length : 0;\r\n        if (foundColors) {\r\n            for (var i = 0; i < numColors; i++) {\r\n                template = template.replace(foundColors[i], COLOR_TOKEN);\r\n                token++;\r\n            }\r\n        }\r\n        var foundNumbers = template.match(floatRegex);\r\n        var numNumbers = foundNumbers ? foundNumbers.length : 0;\r\n        if (foundNumbers) {\r\n            for (var i = 0; i < numNumbers; i++) {\r\n                template = template.replace(foundNumbers[i], NUMBER_TOKEN);\r\n                token++;\r\n            }\r\n        }\r\n        return function (v) {\r\n            var output = template;\r\n            for (var i = 0; i < token; i++) {\r\n                output = output.replace(i < numColors ? COLOR_TOKEN : NUMBER_TOKEN, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\r\n            }\r\n            return output;\r\n        };\r\n    },\r\n    getAnimatableNone: function (target) {\r\n        var parsedTarget = complex.parse(target);\r\n        var targetTransformer = complex.createTransformer(target);\r\n        return targetTransformer(parsedTarget.map(convertNumbersToZero));\r\n    }\r\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/style-value-types/dist/style-value-types.es.js\n");

/***/ }),

/***/ "../../../node_modules/stylefire/dist/stylefire.es.js":
/*!************************************************************!*\
  !*** ../../../node_modules/stylefire/dist/stylefire.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"buildSVGAttrs\": () => (/* binding */ buildSVGAttrs),\n/* harmony export */   \"buildStyleProperty\": () => (/* binding */ buildStyleProperty),\n/* harmony export */   \"createStylerFactory\": () => (/* binding */ createStyler),\n/* harmony export */   \"isTransformProp\": () => (/* binding */ isTransformProp),\n/* harmony export */   \"transformProps\": () => (/* binding */ transformProps)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"../../../node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var framesync__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! framesync */ \"../../../node_modules/framesync/dist/framesync.es.js\");\n/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! style-value-types */ \"../../../node_modules/style-value-types/dist/style-value-types.es.js\");\n/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hey-listen */ \"../../../node_modules/hey-listen/dist/hey-listen.es.js\");\n\n\n\n\n\nvar createStyler = function (_a) {\n    var onRead = _a.onRead,\n        onRender = _a.onRender,\n        _b = _a.uncachedValues,\n        uncachedValues = _b === void 0 ? new Set() : _b,\n        _c = _a.useCache,\n        useCache = _c === void 0 ? true : _c;\n    return function (_a) {\n        if (_a === void 0) {\n            _a = {};\n        }\n        var props = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__rest)(_a, []);\n        var state = {};\n        var changedValues = [];\n        var hasChanged = false;\n        function setValue(key, value) {\n            if (key.startsWith('--')) {\n                props.hasCSSVariable = true;\n            }\n            var currentValue = state[key];\n            state[key] = value;\n            if (state[key] === currentValue) return;\n            if (changedValues.indexOf(key) === -1) {\n                changedValues.push(key);\n            }\n            if (!hasChanged) {\n                hasChanged = true;\n                framesync__WEBPACK_IMPORTED_MODULE_0__.default.render(styler.render);\n            }\n        }\n        var styler = {\n            get: function (key, forceRead) {\n                if (forceRead === void 0) {\n                    forceRead = false;\n                }\n                var useCached = !forceRead && useCache && !uncachedValues.has(key) && state[key] !== undefined;\n                return useCached ? state[key] : onRead(key, props);\n            },\n            set: function (values, value) {\n                if (typeof values === 'string') {\n                    setValue(values, value);\n                } else {\n                    for (var key in values) {\n                        setValue(key, values[key]);\n                    }\n                }\n                return this;\n            },\n            render: function (forceRender) {\n                if (forceRender === void 0) {\n                    forceRender = false;\n                }\n                if (hasChanged || forceRender === true) {\n                    onRender(state, props, changedValues);\n                    hasChanged = false;\n                    changedValues.length = 0;\n                }\n                return this;\n            }\n        };\n        return styler;\n    };\n};\n\nvar CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;\nvar REPLACE_TEMPLATE = '$1-$2';\nvar camelToDash = function (str) {\n    return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();\n};\n\nvar camelCache = /*#__PURE__*/new Map();\nvar dashCache = /*#__PURE__*/new Map();\nvar prefixes = ['Webkit', 'Moz', 'O', 'ms', ''];\nvar numPrefixes = prefixes.length;\nvar isBrowser = typeof document !== 'undefined';\nvar testElement;\nvar setDashPrefix = function (key, prefixed) {\n    return dashCache.set(key, camelToDash(prefixed));\n};\nvar testPrefix = function (key) {\n    testElement = testElement || document.createElement('div');\n    for (var i = 0; i < numPrefixes; i++) {\n        var prefix = prefixes[i];\n        var noPrefix = prefix === '';\n        var prefixedPropertyName = noPrefix ? key : prefix + key.charAt(0).toUpperCase() + key.slice(1);\n        if (prefixedPropertyName in testElement.style || noPrefix) {\n            if (noPrefix && key === 'clipPath' && dashCache.has(key)) {\n                return;\n            }\n            camelCache.set(key, prefixedPropertyName);\n            setDashPrefix(key, \"\" + (noPrefix ? '' : '-') + camelToDash(prefixedPropertyName));\n        }\n    }\n};\nvar setServerProperty = function (key) {\n    return setDashPrefix(key, key);\n};\nvar prefixer = function (key, asDashCase) {\n    if (asDashCase === void 0) {\n        asDashCase = false;\n    }\n    var cache = asDashCase ? dashCache : camelCache;\n    if (!cache.has(key)) {\n        isBrowser ? testPrefix(key) : setServerProperty(key);\n    }\n    return cache.get(key) || key;\n};\n\nvar axes = ['', 'X', 'Y', 'Z'];\nvar order = ['translate', 'scale', 'rotate', 'skew', 'transformPerspective'];\nvar transformProps = /*#__PURE__*/order.reduce(function (acc, key) {\n    return axes.reduce(function (axesAcc, axesKey) {\n        axesAcc.push(key + axesKey);\n        return axesAcc;\n    }, acc);\n}, ['x', 'y', 'z']);\nvar transformPropDictionary = /*#__PURE__*/transformProps.reduce(function (dict, key) {\n    dict[key] = true;\n    return dict;\n}, {});\nfunction isTransformProp(key) {\n    return transformPropDictionary[key] === true;\n}\nfunction sortTransformProps(a, b) {\n    return transformProps.indexOf(a) - transformProps.indexOf(b);\n}\nvar transformOriginProps = /*#__PURE__*/new Set(['originX', 'originY', 'originZ']);\nfunction isTransformOriginProp(key) {\n    return transformOriginProps.has(key);\n}\n\nvar int = /*#__PURE__*/(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)( /*#__PURE__*/(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, style_value_types__WEBPACK_IMPORTED_MODULE_1__.number), { transform: Math.round });\nvar valueTypes = {\n    color: style_value_types__WEBPACK_IMPORTED_MODULE_1__.color,\n    backgroundColor: style_value_types__WEBPACK_IMPORTED_MODULE_1__.color,\n    outlineColor: style_value_types__WEBPACK_IMPORTED_MODULE_1__.color,\n    fill: style_value_types__WEBPACK_IMPORTED_MODULE_1__.color,\n    stroke: style_value_types__WEBPACK_IMPORTED_MODULE_1__.color,\n    borderColor: style_value_types__WEBPACK_IMPORTED_MODULE_1__.color,\n    borderTopColor: style_value_types__WEBPACK_IMPORTED_MODULE_1__.color,\n    borderRightColor: style_value_types__WEBPACK_IMPORTED_MODULE_1__.color,\n    borderBottomColor: style_value_types__WEBPACK_IMPORTED_MODULE_1__.color,\n    borderLeftColor: style_value_types__WEBPACK_IMPORTED_MODULE_1__.color,\n    borderWidth: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    borderTopWidth: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    borderRightWidth: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    borderBottomWidth: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    borderLeftWidth: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    borderRadius: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    radius: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    borderTopLeftRadius: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    borderTopRightRadius: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    borderBottomRightRadius: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    borderBottomLeftRadius: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    width: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    maxWidth: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    height: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    maxHeight: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    size: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    top: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    right: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    bottom: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    left: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    padding: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    paddingTop: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    paddingRight: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    paddingBottom: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    paddingLeft: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    margin: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    marginTop: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    marginRight: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    marginBottom: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    marginLeft: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    rotate: style_value_types__WEBPACK_IMPORTED_MODULE_1__.degrees,\n    rotateX: style_value_types__WEBPACK_IMPORTED_MODULE_1__.degrees,\n    rotateY: style_value_types__WEBPACK_IMPORTED_MODULE_1__.degrees,\n    rotateZ: style_value_types__WEBPACK_IMPORTED_MODULE_1__.degrees,\n    scale: style_value_types__WEBPACK_IMPORTED_MODULE_1__.scale,\n    scaleX: style_value_types__WEBPACK_IMPORTED_MODULE_1__.scale,\n    scaleY: style_value_types__WEBPACK_IMPORTED_MODULE_1__.scale,\n    scaleZ: style_value_types__WEBPACK_IMPORTED_MODULE_1__.scale,\n    skew: style_value_types__WEBPACK_IMPORTED_MODULE_1__.degrees,\n    skewX: style_value_types__WEBPACK_IMPORTED_MODULE_1__.degrees,\n    skewY: style_value_types__WEBPACK_IMPORTED_MODULE_1__.degrees,\n    distance: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    translateX: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    translateY: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    translateZ: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    x: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    y: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    z: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    perspective: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    opacity: style_value_types__WEBPACK_IMPORTED_MODULE_1__.alpha,\n    originX: style_value_types__WEBPACK_IMPORTED_MODULE_1__.progressPercentage,\n    originY: style_value_types__WEBPACK_IMPORTED_MODULE_1__.progressPercentage,\n    originZ: style_value_types__WEBPACK_IMPORTED_MODULE_1__.px,\n    zIndex: int,\n    fillOpacity: style_value_types__WEBPACK_IMPORTED_MODULE_1__.alpha,\n    strokeOpacity: style_value_types__WEBPACK_IMPORTED_MODULE_1__.alpha,\n    numOctaves: int\n};\nvar getValueType = function (key) {\n    return valueTypes[key];\n};\nvar getValueAsType = function (value, type) {\n    return type && typeof value === 'number' ? type.transform(value) : value;\n};\n\nvar SCROLL_LEFT = 'scrollLeft';\nvar SCROLL_TOP = 'scrollTop';\nvar scrollKeys = /*#__PURE__*/new Set([SCROLL_LEFT, SCROLL_TOP]);\n\nvar blacklist = /*#__PURE__*/new Set([SCROLL_LEFT, SCROLL_TOP, 'transform']);\nvar translateAlias = {\n    x: 'translateX',\n    y: 'translateY',\n    z: 'translateZ'\n};\nfunction isCustomTemplate(v) {\n    return typeof v === 'function';\n}\nfunction buildTransform(state, transform, transformKeys, transformIsDefault, enableHardwareAcceleration, allowTransformNone) {\n    if (allowTransformNone === void 0) {\n        allowTransformNone = true;\n    }\n    var transformString = '';\n    var transformHasZ = false;\n    transformKeys.sort(sortTransformProps);\n    var numTransformKeys = transformKeys.length;\n    for (var i = 0; i < numTransformKeys; i++) {\n        var key = transformKeys[i];\n        transformString += (translateAlias[key] || key) + \"(\" + transform[key] + \") \";\n        transformHasZ = key === 'z' ? true : transformHasZ;\n    }\n    if (!transformHasZ && enableHardwareAcceleration) {\n        transformString += 'translateZ(0)';\n    } else {\n        transformString = transformString.trim();\n    }\n    if (isCustomTemplate(state.transform)) {\n        transformString = state.transform(transform, transformIsDefault ? '' : transformString);\n    } else if (allowTransformNone && transformIsDefault) {\n        transformString = 'none';\n    }\n    return transformString;\n}\nfunction buildStyleProperty(state, enableHardwareAcceleration, styles, transform, transformOrigin, transformKeys, isDashCase, allowTransformNone) {\n    if (enableHardwareAcceleration === void 0) {\n        enableHardwareAcceleration = true;\n    }\n    if (styles === void 0) {\n        styles = {};\n    }\n    if (transform === void 0) {\n        transform = {};\n    }\n    if (transformOrigin === void 0) {\n        transformOrigin = {};\n    }\n    if (transformKeys === void 0) {\n        transformKeys = [];\n    }\n    if (isDashCase === void 0) {\n        isDashCase = false;\n    }\n    if (allowTransformNone === void 0) {\n        allowTransformNone = true;\n    }\n    var transformIsDefault = true;\n    var hasTransform = false;\n    var hasTransformOrigin = false;\n    for (var key in state) {\n        var value = state[key];\n        var valueType = getValueType(key);\n        var valueAsType = getValueAsType(value, valueType);\n        if (isTransformProp(key)) {\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            if (transformIsDefault) {\n                if (valueType.default && value !== valueType.default || !valueType.default && value !== 0) {\n                    transformIsDefault = false;\n                }\n            }\n        } else if (isTransformOriginProp(key)) {\n            transformOrigin[key] = valueAsType;\n            hasTransformOrigin = true;\n        } else if (!blacklist.has(key) || !isCustomTemplate(valueAsType)) {\n            styles[prefixer(key, isDashCase)] = valueAsType;\n        }\n    }\n    if (hasTransform || typeof state.transform === 'function') {\n        styles.transform = buildTransform(state, transform, transformKeys, transformIsDefault, enableHardwareAcceleration, allowTransformNone);\n    }\n    if (hasTransformOrigin) {\n        styles.transformOrigin = (transformOrigin.originX || '50%') + \" \" + (transformOrigin.originY || '50%') + \" \" + (transformOrigin.originZ || 0);\n    }\n    return styles;\n}\nfunction createStyleBuilder(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.enableHardwareAcceleration,\n        enableHardwareAcceleration = _c === void 0 ? true : _c,\n        _d = _b.isDashCase,\n        isDashCase = _d === void 0 ? true : _d,\n        _e = _b.allowTransformNone,\n        allowTransformNone = _e === void 0 ? true : _e;\n    var styles = {};\n    var transform = {};\n    var transformOrigin = {};\n    var transformKeys = [];\n    return function (state) {\n        transformKeys.length = 0;\n        buildStyleProperty(state, enableHardwareAcceleration, styles, transform, transformOrigin, transformKeys, isDashCase, allowTransformNone);\n        return styles;\n    };\n}\n\nfunction onRead(key, options) {\n    var element = options.element,\n        preparseOutput = options.preparseOutput;\n    var defaultValueType = getValueType(key);\n    if (isTransformProp(key)) {\n        return defaultValueType ? defaultValueType.default || 0 : 0;\n    } else if (scrollKeys.has(key)) {\n        return element[key];\n    } else {\n        var domValue = window.getComputedStyle(element, null).getPropertyValue(prefixer(key, true)) || 0;\n        return preparseOutput && defaultValueType && defaultValueType.test(domValue) && defaultValueType.parse ? defaultValueType.parse(domValue) : domValue;\n    }\n}\nfunction onRender(state, _a, changedValues) {\n    var element = _a.element,\n        buildStyles = _a.buildStyles,\n        hasCSSVariable = _a.hasCSSVariable;\n    Object.assign(element.style, buildStyles(state));\n    if (hasCSSVariable) {\n        var numChangedValues = changedValues.length;\n        for (var i = 0; i < numChangedValues; i++) {\n            var key = changedValues[i];\n            if (key.startsWith('--')) {\n                element.style.setProperty(key, state[key]);\n            }\n        }\n    }\n    if (changedValues.indexOf(SCROLL_LEFT) !== -1) {\n        element[SCROLL_LEFT] = state[SCROLL_LEFT];\n    }\n    if (changedValues.indexOf(SCROLL_TOP) !== -1) {\n        element[SCROLL_TOP] = state[SCROLL_TOP];\n    }\n}\nvar cssStyler = /*#__PURE__*/createStyler({\n    onRead: onRead,\n    onRender: onRender,\n    uncachedValues: scrollKeys\n});\nfunction createCssStyler(element, _a) {\n    if (_a === void 0) {\n        _a = {};\n    }\n    var enableHardwareAcceleration = _a.enableHardwareAcceleration,\n        allowTransformNone = _a.allowTransformNone,\n        props = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__rest)(_a, [\"enableHardwareAcceleration\", \"allowTransformNone\"]);\n    return cssStyler((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({ element: element, buildStyles: createStyleBuilder({\n            enableHardwareAcceleration: enableHardwareAcceleration,\n            allowTransformNone: allowTransformNone\n        }), preparseOutput: true }, props));\n}\n\nvar camelCaseAttributes = /*#__PURE__*/new Set(['baseFrequency', 'diffuseConstant', 'kernelMatrix', 'kernelUnitLength', 'keySplines', 'keyTimes', 'limitingConeAngle', 'markerHeight', 'markerWidth', 'numOctaves', 'targetX', 'targetY', 'surfaceScale', 'specularConstant', 'specularExponent', 'stdDeviation', 'tableValues']);\n\nvar defaultOrigin = 0.5;\nvar svgAttrsTemplate = function () {\n    return {\n        style: {}\n    };\n};\nvar progressToPixels = function (progress, length) {\n    return style_value_types__WEBPACK_IMPORTED_MODULE_1__.px.transform(progress * length);\n};\nvar unmeasured = { x: 0, y: 0, width: 0, height: 0 };\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === 'string' ? origin : style_value_types__WEBPACK_IMPORTED_MODULE_1__.px.transform(offset + size * origin);\n}\nfunction calculateSVGTransformOrigin(dimensions, originX, originY) {\n    return calcOrigin(originX, dimensions.x, dimensions.width) + \" \" + calcOrigin(originY, dimensions.y, dimensions.height);\n}\nvar svgStyleConfig = {\n    enableHardwareAcceleration: false,\n    isDashCase: false\n};\nfunction buildSVGAttrs(_a, dimensions, totalPathLength, cssBuilder, attrs, isDashCase) {\n    if (dimensions === void 0) {\n        dimensions = unmeasured;\n    }\n    if (cssBuilder === void 0) {\n        cssBuilder = createStyleBuilder(svgStyleConfig);\n    }\n    if (attrs === void 0) {\n        attrs = svgAttrsTemplate();\n    }\n    if (isDashCase === void 0) {\n        isDashCase = true;\n    }\n    var attrX = _a.attrX,\n        attrY = _a.attrY,\n        originX = _a.originX,\n        originY = _a.originY,\n        pathLength = _a.pathLength,\n        _b = _a.pathSpacing,\n        pathSpacing = _b === void 0 ? 1 : _b,\n        _c = _a.pathOffset,\n        pathOffset = _c === void 0 ? 0 : _c,\n        state = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__rest)(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n    var style = cssBuilder(state);\n    for (var key in style) {\n        if (key === 'transform') {\n            attrs.style.transform = style[key];\n        } else {\n            var attrKey = isDashCase && !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n            attrs[attrKey] = style[key];\n        }\n    }\n    if (originX !== undefined || originY !== undefined || style.transform) {\n        attrs.style.transformOrigin = calculateSVGTransformOrigin(dimensions, originX !== undefined ? originX : defaultOrigin, originY !== undefined ? originY : defaultOrigin);\n    }\n    if (attrX !== undefined) attrs.x = attrX;\n    if (attrY !== undefined) attrs.y = attrY;\n    if (totalPathLength !== undefined && pathLength !== undefined) {\n        attrs[isDashCase ? 'stroke-dashoffset' : 'strokeDashoffset'] = progressToPixels(-pathOffset, totalPathLength);\n        attrs[isDashCase ? 'stroke-dasharray' : 'strokeDasharray'] = progressToPixels(pathLength, totalPathLength) + \" \" + progressToPixels(pathSpacing, totalPathLength);\n    }\n    return attrs;\n}\nfunction createAttrBuilder(dimensions, totalPathLength, isDashCase) {\n    if (isDashCase === void 0) {\n        isDashCase = true;\n    }\n    var attrs = svgAttrsTemplate();\n    var cssBuilder = createStyleBuilder(svgStyleConfig);\n    return function (state) {\n        return buildSVGAttrs(state, dimensions, totalPathLength, cssBuilder, attrs, isDashCase);\n    };\n}\n\nvar getDimensions = function (element) {\n    return typeof element.getBBox === 'function' ? element.getBBox() : element.getBoundingClientRect();\n};\nvar getSVGElementDimensions = function (element) {\n    try {\n        return getDimensions(element);\n    } catch (e) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n};\n\nvar isPath = function (element) {\n    return element.tagName === 'path';\n};\nvar svgStyler = /*#__PURE__*/createStyler({\n    onRead: function (key, _a) {\n        var element = _a.element;\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        if (!isTransformProp(key)) {\n            return element.getAttribute(key);\n        } else {\n            var valueType = getValueType(key);\n            return valueType ? valueType.default || 0 : 0;\n        }\n    },\n    onRender: function (state, _a) {\n        var element = _a.element,\n            buildAttrs = _a.buildAttrs;\n        var attrs = buildAttrs(state);\n        for (var key in attrs) {\n            if (key === 'style') {\n                Object.assign(element.style, attrs.style);\n            } else {\n                element.setAttribute(key, attrs[key]);\n            }\n        }\n    }\n});\nvar svg = function (element) {\n    var dimensions = getSVGElementDimensions(element);\n    var pathLength = isPath(element) && element.getTotalLength ? element.getTotalLength() : undefined;\n    return svgStyler({\n        element: element,\n        buildAttrs: createAttrBuilder(dimensions, pathLength)\n    });\n};\n\nvar viewport = /*#__PURE__*/createStyler({\n    useCache: false,\n    onRead: function (key) {\n        return key === 'scrollTop' ? window.pageYOffset : window.pageXOffset;\n    },\n    onRender: function (_a) {\n        var _b = _a.scrollTop,\n            scrollTop = _b === void 0 ? 0 : _b,\n            _c = _a.scrollLeft,\n            scrollLeft = _c === void 0 ? 0 : _c;\n        return window.scrollTo(scrollLeft, scrollTop);\n    }\n});\n\nvar cache = /*#__PURE__*/new WeakMap();\nvar isHTMLElement = function (node) {\n    return node instanceof HTMLElement || typeof node.click === 'function';\n};\nvar isSVGElement = function (node) {\n    return node instanceof SVGElement || 'ownerSVGElement' in node;\n};\nvar createDOMStyler = function (node, props) {\n    var styler;\n    if (node === window) {\n        styler = viewport(node);\n    } else if (isHTMLElement(node)) {\n        styler = createCssStyler(node, props);\n    } else if (isSVGElement(node)) {\n        styler = svg(node);\n    }\n    (0,hey_listen__WEBPACK_IMPORTED_MODULE_2__.invariant)(styler !== undefined, 'No valid node provided. Node must be HTMLElement, SVGElement or window.');\n    cache.set(node, styler);\n    return styler;\n};\nvar getStyler = function (node, props) {\n    return cache.has(node) ? cache.get(node) : createDOMStyler(node, props);\n};\nfunction index(nodeOrSelector, props) {\n    var node = typeof nodeOrSelector === 'string' ? document.querySelector(nodeOrSelector) : nodeOrSelector;\n    return getStyler(node, props);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (index);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/stylefire/dist/stylefire.es.js\n");

/***/ }),

/***/ "../../../node_modules/tslib/tslib.es6.js":
/*!************************************************!*\
  !*** ../../../node_modules/tslib/tslib.es6.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__extends\": () => (/* binding */ __extends),\n/* harmony export */   \"__assign\": () => (/* binding */ __assign),\n/* harmony export */   \"__rest\": () => (/* binding */ __rest),\n/* harmony export */   \"__decorate\": () => (/* binding */ __decorate),\n/* harmony export */   \"__param\": () => (/* binding */ __param),\n/* harmony export */   \"__metadata\": () => (/* binding */ __metadata),\n/* harmony export */   \"__awaiter\": () => (/* binding */ __awaiter),\n/* harmony export */   \"__generator\": () => (/* binding */ __generator),\n/* harmony export */   \"__createBinding\": () => (/* binding */ __createBinding),\n/* harmony export */   \"__exportStar\": () => (/* binding */ __exportStar),\n/* harmony export */   \"__values\": () => (/* binding */ __values),\n/* harmony export */   \"__read\": () => (/* binding */ __read),\n/* harmony export */   \"__spread\": () => (/* binding */ __spread),\n/* harmony export */   \"__spreadArrays\": () => (/* binding */ __spreadArrays),\n/* harmony export */   \"__await\": () => (/* binding */ __await),\n/* harmony export */   \"__asyncGenerator\": () => (/* binding */ __asyncGenerator),\n/* harmony export */   \"__asyncDelegator\": () => (/* binding */ __asyncDelegator),\n/* harmony export */   \"__asyncValues\": () => (/* binding */ __asyncValues),\n/* harmony export */   \"__makeTemplateObject\": () => (/* binding */ __makeTemplateObject),\n/* harmony export */   \"__importStar\": () => (/* binding */ __importStar),\n/* harmony export */   \"__importDefault\": () => (/* binding */ __importDefault),\n/* harmony export */   \"__classPrivateFieldGet\": () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   \"__classPrivateFieldSet\": () => (/* binding */ __classPrivateFieldSet)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/tslib/tslib.es6.js\n");

/***/ })

}]);